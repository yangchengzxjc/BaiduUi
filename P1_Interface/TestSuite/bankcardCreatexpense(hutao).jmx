<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.2 r1790748">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${serviceURL}</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="Authorization" elementType="Argument">
            <stringProp name="Argument.name">Authorization</stringProp>
            <stringProp name="Argument.value">Basic QXJ0ZW1pc0FwcDpuTENud2RJaGl6V2J5a0h5dVpNNlRwUURkN0t3SzlJWERLOExHc2E3U09X</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="protocol" elementType="Argument">
            <stringProp name="Argument.name">protocol</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="serviceURL" elementType="Argument">
            <stringProp name="Argument.name">serviceURL</stringProp>
            <stringProp name="Argument.value">apistage.huilianyi.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DBserver" elementType="Argument">
            <stringProp name="Argument.name">DBserver</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DBport" elementType="Argument">
            <stringProp name="Argument.name">DBport</stringProp>
            <stringProp name="Argument.value">9876</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="cardBank" elementType="Argument">
            <stringProp name="Argument.name">cardBank</stringProp>
            <stringProp name="Argument.value">CMBC</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">供应商：招商银行</stringProp>
          </elementProp>
          <elementProp name="used" elementType="Argument">
            <stringProp name="Argument.name">used</stringProp>
            <stringProp name="Argument.value">false</stringProp>
            <stringProp name="Argument.desc">是否使用，ture-已使用 false-未使用</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="cardNum" elementType="Argument">
            <stringProp name="Argument.name">cardNum</stringProp>
            <stringProp name="Argument.value">${__Random(3000000001,9999999999,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="seqNum" elementType="Argument">
            <stringProp name="Argument.name">seqNum</stringProp>
            <stringProp name="Argument.value">${__Random(21000001,99999999,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="modifiedAmt" elementType="Argument">
            <stringProp name="Argument.name">modifiedAmt</stringProp>
            <stringProp name="Argument.value">199.00</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">修改指定费用金额</stringProp>
          </elementProp>
          <elementProp name="createdDate" elementType="Argument">
            <stringProp name="Argument.name">createdDate</stringProp>
            <stringProp name="Argument.value">2018-01-16</stringProp>
            <stringProp name="Argument.desc">创建费用指定发生日期</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="createTime" elementType="Argument">
            <stringProp name="Argument.name">createTime</stringProp>
            <stringProp name="Argument.value">${__time(yyyy-MM-dd,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="用户信息" enabled="true"/>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="管理员登录" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">13772554321</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">hly123</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="scope" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">write</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">scope</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/oauth/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${Authorization}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="断言持续时间" enabled="true">
            <stringProp name="DurationAssertion.duration">10000</stringProp>
          </DurationAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取accessToken" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">accessToken</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取公司信息" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/account</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">companyOID;corporationOID;tenantId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.companyOID;$.corporationOID;$.tenantId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="查询商务卡" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1522056189000</longProp>
        <longProp name="ThreadGroup.end_time">1522056189000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="23750841">工作台</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="918312701">用户信息</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="获取登录token不成功，再次获取" enabled="true">
          <stringProp name="IfController.condition">&quot;${accessToken}&quot; ==&quot;&quot; || &quot;${accessToken}&quot; ==undefined</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="23750841">工作台</stringProp>
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="918312701">用户信息</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="交易数据拉取(中心账号正用于UAT环境,且只能用在一个环境)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/bankcard/transaction/pull?id=978199555469225985&amp;postDate=2018-01-23&amp;bankCode=CMBC</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="拉取成功" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="数据返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="981219709">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="批量插入-商务卡交易测试数据" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[ {     &#xd;
            &quot;corNum&quot;:&quot;9900000632&quot;,&#xd;
            &quot;actNum&quot;:&quot;&quot;,&#xd;
            &quot;crdNum&quot;:&quot;${cardNum}&quot;,&#xd;
            &quot;actChiNam&quot;:&quot;&quot;,&#xd;
            &quot;actEngNam&quot;:&quot;&quot;,&#xd;
            &quot;empNum&quot;:&quot;&quot;,&#xd;
            &quot;acpCtyCod&quot;:&quot;&quot;,&#xd;
            &quot;acpType&quot;:&quot;&quot;,&#xd;
            &quot;acpId&quot;:&quot;&quot;,&#xd;
            &quot;acpCod&quot;:&quot;&quot;,&#xd;
            &quot;trxRef&quot;:&quot;&quot;,&#xd;
            &quot;trsVchNbr&quot;:&quot;&quot;,&#xd;
            &quot;seqNum&quot;:&quot;${seqNum}&quot;,&#xd;
            &quot;bilMon&quot;: &quot;201805&quot;,&#xd;
            &quot;bilDate&quot;: &quot;2018-05-10&quot;,&#xd;
            &quot;trsDate&quot;: &quot;2018-05-02&quot;,&#xd;
            &quot;trxTim&quot;: &quot;102113&quot;,&#xd;
            &quot;oriCurAmt&quot;: 200,&#xd;
            &quot;oriCurCod&quot;: &quot;CNY&quot;,&#xd;
            &quot;posDate&quot;: &quot;2018-05-03&quot;,&#xd;
            &quot;posCurAmt&quot;: 200,&#xd;
            &quot;posCurCod&quot;: &quot;CNY&quot;,&#xd;
            &quot;acpName&quot;: &quot;hehe&quot;,&#xd;
            &quot;trsCod&quot;: &quot;00&quot;,&#xd;
            &quot;overTime&quot;: false,&#xd;
            &quot;approvedDeadLineDate&quot;: &quot;2018-05-28&quot;,&#xd;
            &quot;remark&quot;: &quot;abc&quot;,&#xd;
            &quot;bankName&quot;: &quot;招行&quot;&#xd;
        }&#xd;
        ]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/bankcard/transaction/create/fictitious/data/CMBC</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="拉去成功" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="数据返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="981219709">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_查询为员工展示X行商务卡入口(为空)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/bankcard/user/status/</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="是否展现" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-662456596">&quot;message&quot;:&quot;No message available&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_查询为员工展示X行商务卡入口(中国建设银行)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/bankcard/user/status/CCB</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="是否展现" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="211609118">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:false}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_查询为员工展示X行商务卡入口(招商银行)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/bankcard/user/status/${cardBank}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="是否展现" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1558546687">rows&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_商务卡消费信息列表展示(中国建设银行)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/bankcard/transactions/CCB/false</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="数据返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="156466605">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:[],&quot;total&quot;:0}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_商务卡消费信息列表展示-已生成费用(招商银行)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/bankcard/transactions/${cardBank}/true</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="数据返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1683609615">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_商务卡消费信息列表展示-未生成费用(招商银行)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/bankcard/transactions/${cardBank}/false</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="数据返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1683609615">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="返回条目" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-757568512">&quot;total&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取bankTransactionID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">bankTransactionID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">${accountID}</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">String accountID=vars.get(&quot;accountID&quot;);
print(accountID);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_修改备注-消费数据主键为空" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/bankcard/transaction/add/remark/?remark=abcdefg</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="数据返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-940418265">&quot;status&quot;:404,&quot;error&quot;:&quot;Not Found&quot;,&quot;message&quot;:&quot;No message available&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_修改备注-错误消费数据主键" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/bankcard/transaction/add/remark/1212112121121?remark=abcdefg</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="数据返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1606831439">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:0}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_修改备注-正常消费数据主键" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/bankcard/transaction/add/remark/${bankTransactionID}?remark=abcdefg</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="数据返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1606831408">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:1}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_生成费用待确认-获取大类" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/types/category</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_生成费用待确认-获取类型" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">api/company/expense/types</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_根据ID查询商务卡详情(消费数据主键为空)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/bankcard/transaction/by/id?id=</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1167958833">&quot;message&quot;:&quot;could not be null&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_根据ID查询商务卡详情(错误消费数据主键)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/bankcard/transaction/by/id?id=1212112121121</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1727873399">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:[]}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_根据ID查询商务卡详情(正常消费数据主键)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/bankcard/transaction/by/id?id=${bankTransactionID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1854458526">&quot;id&quot;:&quot;${bankTransactionID}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_根据交易日期和交易时间查询交易费用(交易日期为空)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/bankcard/transaction/query/by/date/and/money?trsDate=&amp;oriCurAmount=200&amp;currencyCode=CNY</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="353040032">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_根据交易日期和交易时间查询交易费用(交易金额为空)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/bankcard/transaction/query/by/date/and/money?trsDate=2018-2-01&amp;oriCurAmount=&amp;currencyCode=CNY</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="353040032">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_根据交易日期和交易时间查询交易费用(币种为空)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/bankcard/transaction/query/by/date/and/money?trsDate=2018-2-01&amp;oriCurAmount=200&amp;currencyCode=</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="353040032">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_根据交易日期和交易时间查询交易费用(交易日期错误)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/bankcard/transaction/query/by/date/and/money?trsDate=2018-3-01&amp;oriCurAmount=200&amp;currencyCode=CNY</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="353040032">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_根据交易日期和交易时间查询交易费用(交易金额错误)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/bankcard/transaction/query/by/date/and/money?trsDate=2018-02-01&amp;oriCurAmount=5000&amp;currencyCode=CNY</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="353040032">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_根据交易日期和交易时间查询交易费用(币种错误)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/bankcard/transaction/query/by/date/and/money?trsDate=2018-02-01&amp;oriCurAmount=200&amp;currencyCode=JPY</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="353040032">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_根据交易日期和交易时间查询交易费用" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/bankcard/transaction/query/by/date/and/money?trsDate=2018-02-01&amp;oriCurAmount=200&amp;currencyCode=CNY</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1629056898">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="退出登录 " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="(app端)账本费用操作" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1522139854000</longProp>
        <longProp name="ThreadGroup.end_time">1522139854000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="23750841">工作台</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="918312701">用户信息</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="获取登录token不成功，再次获取" enabled="true">
          <stringProp name="IfController.condition">&quot;${accessToken}&quot; ==&quot;&quot; || &quot;${accessToken}&quot; ==undefined</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="23750841">工作台</stringProp>
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="918312701">用户信息</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="断言持续时间" enabled="true">
          <stringProp name="DurationAssertion.duration">10000</stringProp>
        </DurationAssertion>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_查询为员工展示招行商务卡入口" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/bankcard/user/status/${cardBank}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="是否展现" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1558546687">rows&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_招行商务卡消费信息列表展示(未生成费用)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/bankcard/transactions/${cardBank}/false</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="数据返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1683609615">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="返回条目" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-757568512">&quot;total&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取bankTransactionID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">bankTransactionID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取bilMon" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">bilMon</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0].bilMon</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取bilDate" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">bilDate</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0].bilDate</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取corNum" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">corNum</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0].corNum</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取crdNum" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">crdNum</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0].crdNum</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取trsDate" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">trsDate</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0].trsDate</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取trxTim" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">trxTim</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0].trxTim</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取oriCurAmt" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">oriCurAmt</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0].oriCurAmt</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取posDate" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">posDate</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0].posDate</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取posCurAmt" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">posCurAmt</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0].posCurAmt</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取approvedDeadLineDate" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approvedDeadLineDate</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0].approvedDeadLineDate</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取remark" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">remark</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0].remark</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取bankName" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">bankName</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0].bankName</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters">${oriCurAmt},${posCurAmt}</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">int oriCurAmt1=vars.get(&quot;oriCurAmt&quot;);
print(oriCurAmt1);

int posCurAmt1=vars.get(&quot;posCurAmt&quot;);
print(posCurAmt1);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_(账本)创建费用" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;ownerOID&quot;: null,&#xd;
	&quot;invoiceOID&quot;: null,&#xd;
	&quot;date&quot;: &quot;${trsDate}T00:00:00.000Z&quot;,&#xd;
	&quot;preCreatedDate&quot;: &quot;${createTime}T00:00:00.000Z&quot;,&#xd;
	&quot;time&quot;: &quot;${trsDate}T02:21:13.000Z&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;423728b6-79e1-470d-9665-4de01e3cf000&quot;,&#xd;
	&quot;expenseTypeIconURL&quot;: &quot;http://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//1af2a30d-9719-419b-a7ef-68078462baed/expenseIcon/1c920fbc-20a2-4af3-9c2d-5db305baee9c-foodbeverage.png&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;餐饮&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;foodbeverage&quot;,&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: &quot;${oriCurAmt}&quot;,&#xd;
	&quot;actualCurrencyAmount&quot;: 0,&#xd;
	&quot;baseAmount&quot;: &quot;${oriCurAmt}&quot;,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;ce9f83e6-2bc7-4730-b7a1-60ce097ed79f&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;name&quot;: &quot;就餐地点&quot;,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;location&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;e8dd52de-1eb3-4f84-a047-f3fa43065e66&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;LONG&quot;,&#xd;
		&quot;name&quot;: &quot;人数&quot;,&#xd;
		&quot;value&quot;: 3,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;head.count&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;15cb2cae-846b-4f01-8205-5cd80925e240&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;对象&quot;,&#xd;
		&quot;value&quot;: &quot;ab,bc,cd&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;person&quot;,&#xd;
		&quot;sequence&quot;: 4,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;d5f9eaf2-14aa-4e65-b0ed-45ee3d9c1c99&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: null,&#xd;
	&quot;comment&quot;: &quot;abcdefg&quot;,&#xd;
	&quot;createdDate&quot;: &quot;2018-02-02T02:21:13.863Z&quot;,&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: &quot;{\&quot;latitude\&quot;:31.233078,\&quot;longitude\&quot;:121.373113,\&quot;address\&quot;:\&quot;上海市\&quot;}&quot;,&#xd;
	&quot;createTime&quot;: null,&#xd;
	&quot;approvalOperateDTOList&quot;: null,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;rejectReason&quot;: null,&#xd;
	&quot;approverId&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;unitPrice&quot;: null,&#xd;
	&quot;number&quot;: null,&#xd;
	&quot;valid&quot;: false,&#xd;
	&quot;unit&quot;: null,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: null,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;payByCompany&quot;: true,&#xd;
	&quot;apportionEnabled&quot;: false,&#xd;
	&quot;expenseApportion&quot;: [],&#xd;
	&quot;invoiceScannerAmountChange&quot;: false,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseCreatedType&quot;: &quot;1001&quot;,&#xd;
	&quot;bankTransactionDetail&quot;: {&#xd;
		&quot;id&quot;: &quot;${bankTransactionID}&quot;,&#xd;
		&quot;bilMon&quot;: &quot;${bilMon}&quot;,&#xd;
		&quot;bilDate&quot;: &quot;${bilDate}&quot;,&#xd;
		&quot;crdNum&quot;: &quot;${crdNum}&quot;,&#xd;
		&quot;trsDate&quot;: &quot;${trsDate}&quot;,&#xd;
		&quot;trxTim&quot;: &quot;${trxTim}&quot;,&#xd;
		&quot;oriCurAmt&quot;: &quot;${oriCurAmt}&quot;,&#xd;
		&quot;oriCurCod&quot;: &quot;CNY&quot;,&#xd;
		&quot;posDate&quot;: &quot;${posDate}&quot;,&#xd;
		&quot;posCurAmt&quot;: &quot;${posCurAmt}&quot;,&#xd;
		&quot;posCurCod&quot;: &quot;CNY&quot;,&#xd;
		&quot;acpName&quot;: &quot;hehe&quot;,&#xd;
		&quot;trsCod&quot;: &quot;00&quot;,&#xd;
		&quot;overTime&quot;: false,&#xd;
		&quot;approvedDeadLineDate&quot;: &quot;${approvedDeadLineDate}&quot;,&#xd;
		&quot;remark&quot;: &quot;${remark}&quot;,&#xd;
		&quot;bankName&quot;: &quot;${bankName}&quot;,&#xd;
		&quot;isSelected&quot;: true,&#xd;
		&quot;billYear&quot;: 2018,&#xd;
		&quot;isCurrentYear&quot;: true&#xd;
	},&#xd;
	&quot;bankTransactionID&quot;: &quot;${bankTransactionID}&quot;,&#xd;
	&quot;companyOID&quot;: &quot;${companyOID}&quot;,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCodeShow&quot;: true,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;rateWarning&quot;: false,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="是否与bankTransactionID一致" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-431197284">&quot;bankTransactionID&quot;:&quot;${bankTransactionID}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="是否与查询到的交易金额一致" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-2066338391">&quot;baseAmount&quot;:${oriCurAmt}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取invoiceOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">invoiceOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;invoiceOID&quot;:&quot;(.+?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取expenseTypeId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseTypeId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseTypeId&quot;:&quot;(.+?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取expenseTypeOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseTypeOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseTypeOID&quot;:&quot;(.+?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_(账本)查询费用明细(正确invoiceOID)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoices/${invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="是否与费用单号一致" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="600409060">&quot;invoiceOID&quot;:&quot;${invoiceOID}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(账本)查询费用明细(错误invoiceOID)" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoices/12312312312123123123123</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1040803461">&quot;success&quot;:false,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_(账本)修改费用(金额为0)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceOID&quot;: &quot;${invoiceOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;餐饮&quot;,&#xd;
	&quot;crossCheckStatus&quot;: null,&#xd;
	&quot;expenseTypeKey&quot;: null,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;foodbeverage&quot;,&#xd;
	&quot;phoneNumber&quot;: null,&#xd;
	&quot;email&quot;: null,&#xd;
	&quot;expenseTypeIconURL&quot;: &quot;http://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//1af2a30d-9719-419b-a7ef-68078462baed/expenseIcon/1c920fbc-20a2-4af3-9c2d-5db305baee9c-foodbeverage.png&quot;,&#xd;
	&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
	&quot;expenseTypeCategoryDTO&quot;: {&#xd;
		&quot;expenseTypeCategoryOID&quot;: &quot;08a33747-d5cf-479f-9804-21c850db7286&quot;,&#xd;
		&quot;name&quot;: &quot;费用类型&quot;,&#xd;
		&quot;code&quot;: null&#xd;
	},&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: &quot;0&quot;,&#xd;
	&quot;originalAmount&quot;: 200,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: &quot;8e370998-f61e-4680-800b-48fbf5894572&quot;,&#xd;
	&quot;mobile&quot;: null,&#xd;
	&quot;employeeId&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;上海&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;ce9f83e6-2bc7-4730-b7a1-60ce097ed79f&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;name&quot;: &quot;就餐地点&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;早陆晚玖(金环商务店)\&quot;,\&quot;longitude\&quot;:\&quot;121.373536\&quot;,\&quot;latitude\&quot;:\&quot;31.234268\&quot;}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;location&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;e8dd52de-1eb3-4f84-a047-f3fa43065e66&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;LONG&quot;,&#xd;
		&quot;name&quot;: &quot;人数&quot;,&#xd;
		&quot;value&quot;: 3,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;head.count&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;15cb2cae-846b-4f01-8205-5cd80925e240&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;对象&quot;,&#xd;
		&quot;value&quot;: &quot;ab，bc，cd&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;person&quot;,&#xd;
		&quot;sequence&quot;: 4,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;d5f9eaf2-14aa-4e65-b0ed-45ee3d9c1c99&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;comment&quot;: &quot;abcdefg&quot;,&#xd;
	&quot;warning&quot;: &quot;&quot;,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;createdDate&quot;: &quot;${createdDate}T02:21:14.514Z&quot;,&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: &quot;{\&quot;latitude\&quot;:31.23308,\&quot;longitude\&quot;:121.37312,\&quot;address\&quot;:\&quot;上海市\&quot;}&quot;,&#xd;
	&quot;createTime&quot;: &quot;${createTime}T08:23:52Z&quot;,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;rejectReason&quot;: null,&#xd;
	&quot;approverId&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;approvalOperates&quot;: null,&#xd;
	&quot;approver&quot;: null,&#xd;
	&quot;referenceId&quot;: null,&#xd;
	&quot;unitPrice&quot;: null,&#xd;
	&quot;number&quot;: null,&#xd;
	&quot;receiptFailType&quot;: null,&#xd;
	&quot;receiptFailReason&quot;: null,&#xd;
	&quot;valid&quot;: false,&#xd;
	&quot;receiptID&quot;: null,&#xd;
	&quot;cardSignType&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;receiptGoodsID&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;invoiceLabelDTOS&quot;: null,&#xd;
	&quot;companyOID&quot;: null,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;餐补&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;source&quot;: null,&#xd;
	&quot;ownerOID&quot;: &quot;8e370998-f61e-4680-800b-48fbf5894572&quot;,&#xd;
	&quot;checked&quot;: null,&#xd;
	&quot;createInvoice&quot;: true,&#xd;
	&quot;checkWarning&quot;: null,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;digitalInvoiceId&quot;: null,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;originalActualCurrencyRate&quot;: 1,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;actualCurrencyAmount&quot;: 200,&#xd;
	&quot;baseAmount&quot;: &quot;0&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;flightNo&quot;: null,&#xd;
	&quot;apportionUsed&quot;: false,&#xd;
	&quot;expenseApportion&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: null,&#xd;
	&quot;amountChanged&quot;: null,&#xd;
	&quot;approvalStatus&quot;: null,&#xd;
	&quot;bankTransactionID&quot;: &quot;${bankTransactionID}&quot;,&#xd;
	&quot;expenseCreatedType&quot;: null,&#xd;
	&quot;overDue&quot;: false,&#xd;
	&quot;bankTransactionDetail&quot;: {&#xd;
		&quot;id&quot;: &quot;${bankTransactionID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-03-27T15:54:42Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-28T08:23:52Z&quot;,&#xd;
		&quot;createdBy&quot;: &quot;8e370998-f61e-4680-800b-48fbf5894572&quot;,&#xd;
		&quot;lastModifiedBy&quot;: &quot;8e370998-f61e-4680-800b-48fbf5894572&quot;,&#xd;
		&quot;ownerOid&quot;: &quot;8e370998-f61e-4680-800b-48fbf5894572&quot;,&#xd;
		&quot;tenantID&quot;: &quot;${tenantId}&quot;,&#xd;
		&quot;companyOID&quot;: &quot;${companyOID}&quot;,&#xd;
		&quot;used&quot;: true,&#xd;
		&quot;expenseCreatedType&quot;: 1001,&#xd;
		&quot;deleted&quot;: false,&#xd;
		&quot;cardTypeCode&quot;: &quot;CMBC&quot;,&#xd;
		&quot;bankName&quot;: &quot;招行&quot;,&#xd;
		&quot;bankDescription&quot;: &quot;招商银行商务卡&quot;,&#xd;
		&quot;corNum&quot;: &quot;9900000632&quot;,&#xd;
		&quot;actNum&quot;: &quot;&quot;,&#xd;
		&quot;bilMon&quot;: &quot;201802&quot;,&#xd;
		&quot;bilDate&quot;: &quot;2018-02-25&quot;,&#xd;
		&quot;crdNum&quot;: &quot;${crdNum}&quot;,&#xd;
		&quot;actChiNam&quot;: &quot;&quot;,&#xd;
		&quot;actEngNam&quot;: &quot;&quot;,&#xd;
		&quot;empNum&quot;: &quot;&quot;,&#xd;
		&quot;trsDate&quot;: &quot;${trsDate}&quot;,&#xd;
		&quot;trxTim&quot;: &quot;${trxTim}&quot;,&#xd;
		&quot;oriCurAmt&quot;: &quot;${oriCurAmt}&quot;,&#xd;
		&quot;oriCurCod&quot;: &quot;CNY&quot;,&#xd;
		&quot;posDate&quot;: &quot;${posDate}&quot;,&#xd;
		&quot;posCurAmt&quot;: &quot;${posCurAmt}&quot;,&#xd;
		&quot;posCurCod&quot;: &quot;CNY&quot;,&#xd;
		&quot;acpCtyCod&quot;: &quot;&quot;,&#xd;
		&quot;acpType&quot;: &quot;&quot;,&#xd;
		&quot;acpId&quot;: &quot;&quot;,&#xd;
		&quot;acpName&quot;: &quot;hehe&quot;,&#xd;
		&quot;aprCod&quot;: null,&#xd;
		&quot;trxRef&quot;: &quot;&quot;,&#xd;
		&quot;trsCod&quot;: &quot;00&quot;,&#xd;
		&quot;trsVchNbr&quot;: &quot;&quot;,&#xd;
		&quot;seqNum&quot;: &quot;82570520&quot;,&#xd;
		&quot;overTime&quot;: false,&#xd;
		&quot;approvedDeadLineDate&quot;: &quot;${approvedDeadLineDate}&quot;,&#xd;
		&quot;remark&quot;: &quot;${remark}&quot;&#xd;
	},&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;subsidyRepeatedFlag&quot;: false,&#xd;
	&quot;orderAmount&quot;: &quot;${oriCurAmt}&quot;,&#xd;
	&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;stringCol1&quot;: null,&#xd;
	&quot;stringCol2&quot;: null,&#xd;
	&quot;stringCol3&quot;: null,&#xd;
	&quot;invoiceScannerAmountChange&quot;: false,&#xd;
	&quot;oriInvoiceCode&quot;: null,&#xd;
	&quot;oriInvoiceNumber&quot;: null,&#xd;
	&quot;date&quot;: &quot;${createdDate}T02:21:14.000Z&quot;,&#xd;
	&quot;time&quot;: &quot;2018-02-01T02:21:14.000Z&quot;,&#xd;
	&quot;preCreatedDate&quot;: &quot;${createdDate}T02:21:14.000Z&quot;,&#xd;
	&quot;payByCompany&quot;: false,&#xd;
	&quot;vatInvoiceCurrencyCodeShow&quot;: true,&#xd;
	&quot;rateWarning&quot;: false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/invoices</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-753505751">&quot;message&quot;:&quot;Amount can&apos;t be 0&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_(账本)修改费用(超过消费金额200)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceOID&quot;: &quot;${invoiceOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;餐饮&quot;,&#xd;
	&quot;crossCheckStatus&quot;: null,&#xd;
	&quot;expenseTypeKey&quot;: null,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;foodbeverage&quot;,&#xd;
	&quot;phoneNumber&quot;: null,&#xd;
	&quot;email&quot;: null,&#xd;
	&quot;expenseTypeIconURL&quot;: &quot;http://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//1af2a30d-9719-419b-a7ef-68078462baed/expenseIcon/1c920fbc-20a2-4af3-9c2d-5db305baee9c-foodbeverage.png&quot;,&#xd;
	&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
	&quot;expenseTypeCategoryDTO&quot;: {&#xd;
		&quot;expenseTypeCategoryOID&quot;: &quot;08a33747-d5cf-479f-9804-21c850db7286&quot;,&#xd;
		&quot;name&quot;: &quot;费用类型&quot;,&#xd;
		&quot;code&quot;: null&#xd;
	},&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: &quot;300&quot;,&#xd;
	&quot;originalAmount&quot;: 200,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: &quot;8e370998-f61e-4680-800b-48fbf5894572&quot;,&#xd;
	&quot;mobile&quot;: null,&#xd;
	&quot;employeeId&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;上海&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;ce9f83e6-2bc7-4730-b7a1-60ce097ed79f&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;name&quot;: &quot;就餐地点&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;早陆晚玖(金环商务店)\&quot;,\&quot;longitude\&quot;:\&quot;121.373536\&quot;,\&quot;latitude\&quot;:\&quot;31.234268\&quot;}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;location&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;e8dd52de-1eb3-4f84-a047-f3fa43065e66&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;LONG&quot;,&#xd;
		&quot;name&quot;: &quot;人数&quot;,&#xd;
		&quot;value&quot;: 3,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;head.count&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;15cb2cae-846b-4f01-8205-5cd80925e240&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;对象&quot;,&#xd;
		&quot;value&quot;: &quot;ab，bc，cd&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;person&quot;,&#xd;
		&quot;sequence&quot;: 4,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;d5f9eaf2-14aa-4e65-b0ed-45ee3d9c1c99&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;comment&quot;: &quot;abcdefg&quot;,&#xd;
	&quot;warning&quot;: &quot;&quot;,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;createdDate&quot;: &quot;${createdDate}T02:21:14.514Z&quot;,&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: &quot;{\&quot;latitude\&quot;:31.23308,\&quot;longitude\&quot;:121.37312,\&quot;address\&quot;:\&quot;上海市\&quot;}&quot;,&#xd;
	&quot;createTime&quot;: &quot;${createTime}T08:23:52Z&quot;,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;rejectReason&quot;: null,&#xd;
	&quot;approverId&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;approvalOperates&quot;: null,&#xd;
	&quot;approver&quot;: null,&#xd;
	&quot;referenceId&quot;: null,&#xd;
	&quot;unitPrice&quot;: null,&#xd;
	&quot;number&quot;: null,&#xd;
	&quot;receiptFailType&quot;: null,&#xd;
	&quot;receiptFailReason&quot;: null,&#xd;
	&quot;valid&quot;: false,&#xd;
	&quot;receiptID&quot;: null,&#xd;
	&quot;cardSignType&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;receiptGoodsID&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;invoiceLabelDTOS&quot;: null,&#xd;
	&quot;companyOID&quot;: null,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;餐补&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;source&quot;: null,&#xd;
	&quot;ownerOID&quot;: &quot;8e370998-f61e-4680-800b-48fbf5894572&quot;,&#xd;
	&quot;checked&quot;: null,&#xd;
	&quot;createInvoice&quot;: true,&#xd;
	&quot;checkWarning&quot;: null,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;digitalInvoiceId&quot;: null,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;originalActualCurrencyRate&quot;: 1,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;actualCurrencyAmount&quot;: 200,&#xd;
	&quot;baseAmount&quot;: &quot;300&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;flightNo&quot;: null,&#xd;
	&quot;apportionUsed&quot;: false,&#xd;
	&quot;expenseApportion&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: null,&#xd;
	&quot;amountChanged&quot;: null,&#xd;
	&quot;approvalStatus&quot;: null,&#xd;
	&quot;bankTransactionID&quot;: &quot;${bankTransactionID}&quot;,&#xd;
	&quot;expenseCreatedType&quot;: null,&#xd;
	&quot;overDue&quot;: false,&#xd;
	&quot;bankTransactionDetail&quot;: {&#xd;
		&quot;id&quot;: &quot;${bankTransactionID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-03-27T15:54:42Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-28T08:23:52Z&quot;,&#xd;
		&quot;createdBy&quot;: &quot;8e370998-f61e-4680-800b-48fbf5894572&quot;,&#xd;
		&quot;lastModifiedBy&quot;: &quot;8e370998-f61e-4680-800b-48fbf5894572&quot;,&#xd;
		&quot;ownerOid&quot;: &quot;8e370998-f61e-4680-800b-48fbf5894572&quot;,&#xd;
		&quot;tenantID&quot;: &quot;${tenantId}&quot;,&#xd;
		&quot;companyOID&quot;: &quot;${companyOID}&quot;,&#xd;
		&quot;used&quot;: true,&#xd;
		&quot;expenseCreatedType&quot;: 1001,&#xd;
		&quot;deleted&quot;: false,&#xd;
		&quot;cardTypeCode&quot;: &quot;CMBC&quot;,&#xd;
		&quot;bankName&quot;: &quot;招行&quot;,&#xd;
		&quot;bankDescription&quot;: &quot;招商银行商务卡&quot;,&#xd;
		&quot;corNum&quot;: &quot;9900000632&quot;,&#xd;
		&quot;actNum&quot;: &quot;&quot;,&#xd;
		&quot;bilMon&quot;: &quot;201802&quot;,&#xd;
		&quot;bilDate&quot;: &quot;2018-02-25&quot;,&#xd;
		&quot;crdNum&quot;: &quot;${crdNum}&quot;,&#xd;
		&quot;actChiNam&quot;: &quot;&quot;,&#xd;
		&quot;actEngNam&quot;: &quot;&quot;,&#xd;
		&quot;empNum&quot;: &quot;&quot;,&#xd;
		&quot;trsDate&quot;: &quot;${trsDate}&quot;,&#xd;
		&quot;trxTim&quot;: &quot;${trxTim}&quot;,&#xd;
		&quot;oriCurAmt&quot;: &quot;${oriCurAmt}&quot;,&#xd;
		&quot;oriCurCod&quot;: &quot;CNY&quot;,&#xd;
		&quot;posDate&quot;: &quot;${posDate}&quot;,&#xd;
		&quot;posCurAmt&quot;: &quot;${posCurAmt}&quot;,&#xd;
		&quot;posCurCod&quot;: &quot;CNY&quot;,&#xd;
		&quot;acpCtyCod&quot;: &quot;&quot;,&#xd;
		&quot;acpType&quot;: &quot;&quot;,&#xd;
		&quot;acpId&quot;: &quot;&quot;,&#xd;
		&quot;acpName&quot;: &quot;hehe&quot;,&#xd;
		&quot;aprCod&quot;: null,&#xd;
		&quot;trxRef&quot;: &quot;&quot;,&#xd;
		&quot;trsCod&quot;: &quot;00&quot;,&#xd;
		&quot;trsVchNbr&quot;: &quot;&quot;,&#xd;
		&quot;seqNum&quot;: &quot;82570520&quot;,&#xd;
		&quot;overTime&quot;: false,&#xd;
		&quot;approvedDeadLineDate&quot;: &quot;${approvedDeadLineDate}&quot;,&#xd;
		&quot;remark&quot;: &quot;${remark}&quot;&#xd;
	},&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;subsidyRepeatedFlag&quot;: false,&#xd;
	&quot;orderAmount&quot;: &quot;${oriCurAmt}&quot;,&#xd;
	&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;stringCol1&quot;: null,&#xd;
	&quot;stringCol2&quot;: null,&#xd;
	&quot;stringCol3&quot;: null,&#xd;
	&quot;invoiceScannerAmountChange&quot;: false,&#xd;
	&quot;oriInvoiceCode&quot;: null,&#xd;
	&quot;oriInvoiceNumber&quot;: null,&#xd;
	&quot;date&quot;: &quot;${createdDate}T02:21:14.000Z&quot;,&#xd;
	&quot;time&quot;: &quot;2018-02-01T02:21:14.000Z&quot;,&#xd;
	&quot;preCreatedDate&quot;: &quot;${createdDate}T02:21:14.000Z&quot;,&#xd;
	&quot;payByCompany&quot;: false,&#xd;
	&quot;vatInvoiceCurrencyCodeShow&quot;: true,&#xd;
	&quot;rateWarning&quot;: false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/invoices</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-845651284">&quot;message&quot;:&quot;费用金额不能大于订单金额&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_(账本)修改费用(不超过消费金额)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceOID&quot;: &quot;${invoiceOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;餐饮&quot;,&#xd;
	&quot;crossCheckStatus&quot;: null,&#xd;
	&quot;expenseTypeKey&quot;: null,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;foodbeverage&quot;,&#xd;
	&quot;phoneNumber&quot;: null,&#xd;
	&quot;email&quot;: null,&#xd;
	&quot;expenseTypeIconURL&quot;: &quot;http://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//1af2a30d-9719-419b-a7ef-68078462baed/expenseIcon/1c920fbc-20a2-4af3-9c2d-5db305baee9c-foodbeverage.png&quot;,&#xd;
	&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
	&quot;expenseTypeCategoryDTO&quot;: {&#xd;
		&quot;expenseTypeCategoryOID&quot;: &quot;08a33747-d5cf-479f-9804-21c850db7286&quot;,&#xd;
		&quot;name&quot;: &quot;费用类型&quot;,&#xd;
		&quot;code&quot;: null&#xd;
	},&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: &quot;${modifiedAmt}&quot;,&#xd;
	&quot;originalAmount&quot;: 200,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: &quot;8e370998-f61e-4680-800b-48fbf5894572&quot;,&#xd;
	&quot;mobile&quot;: null,&#xd;
	&quot;employeeId&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;上海&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;ce9f83e6-2bc7-4730-b7a1-60ce097ed79f&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;name&quot;: &quot;就餐地点&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;早陆晚玖(金环商务店)\&quot;,\&quot;longitude\&quot;:\&quot;121.373536\&quot;,\&quot;latitude\&quot;:\&quot;31.234268\&quot;}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;location&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;e8dd52de-1eb3-4f84-a047-f3fa43065e66&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;LONG&quot;,&#xd;
		&quot;name&quot;: &quot;人数&quot;,&#xd;
		&quot;value&quot;: 3,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;head.count&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;15cb2cae-846b-4f01-8205-5cd80925e240&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;对象&quot;,&#xd;
		&quot;value&quot;: &quot;ab，bc，cd&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;person&quot;,&#xd;
		&quot;sequence&quot;: 4,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;d5f9eaf2-14aa-4e65-b0ed-45ee3d9c1c99&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;comment&quot;: &quot;abcdefg&quot;,&#xd;
	&quot;warning&quot;: &quot;&quot;,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;createdDate&quot;: &quot;${createdDate}T02:21:14.514Z&quot;,&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: &quot;{\&quot;latitude\&quot;:31.23308,\&quot;longitude\&quot;:121.37312,\&quot;address\&quot;:\&quot;上海市\&quot;}&quot;,&#xd;
	&quot;createTime&quot;: &quot;${createTime}T08:23:52Z&quot;,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;rejectReason&quot;: null,&#xd;
	&quot;approverId&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;approvalOperates&quot;: null,&#xd;
	&quot;approver&quot;: null,&#xd;
	&quot;referenceId&quot;: null,&#xd;
	&quot;unitPrice&quot;: null,&#xd;
	&quot;number&quot;: null,&#xd;
	&quot;receiptFailType&quot;: null,&#xd;
	&quot;receiptFailReason&quot;: null,&#xd;
	&quot;valid&quot;: false,&#xd;
	&quot;receiptID&quot;: null,&#xd;
	&quot;cardSignType&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;receiptGoodsID&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;invoiceLabelDTOS&quot;: null,&#xd;
	&quot;companyOID&quot;: null,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;餐补&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;source&quot;: null,&#xd;
	&quot;ownerOID&quot;: &quot;8e370998-f61e-4680-800b-48fbf5894572&quot;,&#xd;
	&quot;checked&quot;: null,&#xd;
	&quot;createInvoice&quot;: true,&#xd;
	&quot;checkWarning&quot;: null,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;digitalInvoiceId&quot;: null,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;originalActualCurrencyRate&quot;: 1,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;actualCurrencyAmount&quot;: 200,&#xd;
	&quot;baseAmount&quot;: &quot;${modifiedAmt}&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;flightNo&quot;: null,&#xd;
	&quot;apportionUsed&quot;: false,&#xd;
	&quot;expenseApportion&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: null,&#xd;
	&quot;amountChanged&quot;: null,&#xd;
	&quot;approvalStatus&quot;: null,&#xd;
	&quot;bankTransactionID&quot;: &quot;${bankTransactionID}&quot;,&#xd;
	&quot;expenseCreatedType&quot;: null,&#xd;
	&quot;overDue&quot;: false,&#xd;
	&quot;bankTransactionDetail&quot;: {&#xd;
		&quot;id&quot;: &quot;${bankTransactionID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-03-27T15:54:42Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-28T08:23:52Z&quot;,&#xd;
		&quot;createdBy&quot;: &quot;8e370998-f61e-4680-800b-48fbf5894572&quot;,&#xd;
		&quot;lastModifiedBy&quot;: &quot;8e370998-f61e-4680-800b-48fbf5894572&quot;,&#xd;
		&quot;ownerOid&quot;: &quot;8e370998-f61e-4680-800b-48fbf5894572&quot;,&#xd;
		&quot;tenantID&quot;: &quot;${tenantId}&quot;,&#xd;
		&quot;companyOID&quot;: &quot;${companyOID}&quot;,&#xd;
		&quot;used&quot;: true,&#xd;
		&quot;expenseCreatedType&quot;: 1001,&#xd;
		&quot;deleted&quot;: false,&#xd;
		&quot;cardTypeCode&quot;: &quot;CMBC&quot;,&#xd;
		&quot;bankName&quot;: &quot;招行&quot;,&#xd;
		&quot;bankDescription&quot;: &quot;招商银行商务卡&quot;,&#xd;
		&quot;corNum&quot;: &quot;9900000632&quot;,&#xd;
		&quot;actNum&quot;: &quot;&quot;,&#xd;
		&quot;bilMon&quot;: &quot;201802&quot;,&#xd;
		&quot;bilDate&quot;: &quot;2018-02-25&quot;,&#xd;
		&quot;crdNum&quot;: &quot;${crdNum}&quot;,&#xd;
		&quot;actChiNam&quot;: &quot;&quot;,&#xd;
		&quot;actEngNam&quot;: &quot;&quot;,&#xd;
		&quot;empNum&quot;: &quot;&quot;,&#xd;
		&quot;trsDate&quot;: &quot;${trsDate}&quot;,&#xd;
		&quot;trxTim&quot;: &quot;${trxTim}&quot;,&#xd;
		&quot;oriCurAmt&quot;: &quot;${oriCurAmt}&quot;,&#xd;
		&quot;oriCurCod&quot;: &quot;CNY&quot;,&#xd;
		&quot;posDate&quot;: &quot;${posDate}&quot;,&#xd;
		&quot;posCurAmt&quot;: &quot;${posCurAmt}&quot;,&#xd;
		&quot;posCurCod&quot;: &quot;CNY&quot;,&#xd;
		&quot;acpCtyCod&quot;: &quot;&quot;,&#xd;
		&quot;acpType&quot;: &quot;&quot;,&#xd;
		&quot;acpId&quot;: &quot;&quot;,&#xd;
		&quot;acpName&quot;: &quot;hehe&quot;,&#xd;
		&quot;aprCod&quot;: null,&#xd;
		&quot;trxRef&quot;: &quot;&quot;,&#xd;
		&quot;trsCod&quot;: &quot;00&quot;,&#xd;
		&quot;trsVchNbr&quot;: &quot;&quot;,&#xd;
		&quot;seqNum&quot;: &quot;82570520&quot;,&#xd;
		&quot;overTime&quot;: false,&#xd;
		&quot;approvedDeadLineDate&quot;: &quot;${approvedDeadLineDate}&quot;,&#xd;
		&quot;remark&quot;: &quot;${remark}&quot;&#xd;
	},&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;subsidyRepeatedFlag&quot;: false,&#xd;
	&quot;orderAmount&quot;: &quot;${oriCurAmt}&quot;,&#xd;
	&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;stringCol1&quot;: null,&#xd;
	&quot;stringCol2&quot;: null,&#xd;
	&quot;stringCol3&quot;: null,&#xd;
	&quot;invoiceScannerAmountChange&quot;: false,&#xd;
	&quot;oriInvoiceCode&quot;: null,&#xd;
	&quot;oriInvoiceNumber&quot;: null,&#xd;
	&quot;date&quot;: &quot;${createdDate}T02:21:14.000Z&quot;,&#xd;
	&quot;time&quot;: &quot;2018-02-01T02:21:14.000Z&quot;,&#xd;
	&quot;preCreatedDate&quot;: &quot;${createdDate}T02:21:14.000Z&quot;,&#xd;
	&quot;payByCompany&quot;: false,&#xd;
	&quot;vatInvoiceCurrencyCodeShow&quot;: true,&#xd;
	&quot;rateWarning&quot;: false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/invoices</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="是否与bankTransactionID一致" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-431197284">&quot;bankTransactionID&quot;:&quot;${bankTransactionID}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="是否与invoiceOID一致" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="600409060">&quot;invoiceOID&quot;:&quot;${invoiceOID}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="是否与expenseTypeId一致" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1821392188">&quot;expenseTypeId&quot;:&quot;${expenseTypeId}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="是否与expenseTypeOID一致" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-773947388">&quot;expenseTypeOID&quot;:&quot;${expenseTypeOID}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_(账本)删除费用(正确invoiceOID)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoice/${invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_(账本)删除费用(错误invoiceOID)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoice/8fb2ed92-7636-49c7-9cfa-3184e7337777</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1390233367">errorCode&quot;:&quot;OBJECT_NOT_FOUND&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySamplerProperties">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugPostProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="退出登录 " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="(中控)账本费用操作" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1522227852000</longProp>
        <longProp name="ThreadGroup.end_time">1522227852000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="23750841">工作台</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="918312701">用户信息</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="获取登录token不成功，再次获取" enabled="true">
          <stringProp name="IfController.condition">&quot;${accessToken}&quot; ==&quot;&quot; || &quot;${accessToken}&quot; ==undefined</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="23750841">工作台</stringProp>
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="918312701">用户信息</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="断言持续时间" enabled="true">
          <stringProp name="DurationAssertion.duration">10000</stringProp>
        </DurationAssertion>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_查询为员工展示招行商务卡入口" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/bankcard/user/status/${cardBank}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="是否展现" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1558546687">rows&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_招行商务卡消费信息列表展示(未生成费用)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/bankcard/transactions/${cardBank}/false</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="数据返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1683609615">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="返回条目" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-757568512">&quot;total&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取bankTransactionID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">bankTransactionID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取bilMon" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">bilMon</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0].bilMon</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取bilDate" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">bilDate</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0].bilDate</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取corNum" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">corNum</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0].corNum</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取crdNum" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">crdNum</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0].crdNum</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取trsDate" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">trsDate</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0].trsDate</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取trxTim" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">trxTim</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0].trxTim</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取oriCurAmt" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">oriCurAmt</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0].oriCurAmt</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取posDate" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">posDate</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0].posDate</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取posCurAmt" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">posCurAmt</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0].posCurAmt</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取approvedDeadLineDate" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approvedDeadLineDate</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0].approvedDeadLineDate</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取remark" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">remark</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0].remark</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取bankName" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">bankName</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[0].bankName</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters">${oriCurAmt},${posCurAmt}</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">int oriCurAmt1=vars.get(&quot;oriCurAmt&quot;);
print(oriCurAmt1);

int posCurAmt1=vars.get(&quot;posCurAmt&quot;);
print(posCurAmt1);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_(账本)通过商务卡消费明细创建费用" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;ownerOID&quot;: null,&#xd;
	&quot;invoiceOID&quot;: null,&#xd;
	&quot;date&quot;: &quot;${trsDate}T00:00:00.000Z&quot;,&#xd;
	&quot;preCreatedDate&quot;: &quot;${trsDate}T00:00:00.000Z&quot;,&#xd;
	&quot;time&quot;: &quot;${trsDate}T02:21:13.000Z&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;423728b6-79e1-470d-9665-4de01e3cf000&quot;,&#xd;
	&quot;expenseTypeIconURL&quot;: &quot;http://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//1af2a30d-9719-419b-a7ef-68078462baed/expenseIcon/1c920fbc-20a2-4af3-9c2d-5db305baee9c-foodbeverage.png&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;餐饮&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;foodbeverage&quot;,&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: &quot;${oriCurAmt}&quot;,&#xd;
	&quot;actualCurrencyAmount&quot;: 0,&#xd;
	&quot;baseAmount&quot;: &quot;${oriCurAmt}&quot;,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;ce9f83e6-2bc7-4730-b7a1-60ce097ed79f&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;name&quot;: &quot;就餐地点&quot;,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;location&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;e8dd52de-1eb3-4f84-a047-f3fa43065e66&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;LONG&quot;,&#xd;
		&quot;name&quot;: &quot;人数&quot;,&#xd;
		&quot;value&quot;: 3,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;head.count&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;15cb2cae-846b-4f01-8205-5cd80925e240&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;对象&quot;,&#xd;
		&quot;value&quot;: &quot;ab,bc,cd&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;person&quot;,&#xd;
		&quot;sequence&quot;: 4,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;d5f9eaf2-14aa-4e65-b0ed-45ee3d9c1c99&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: null,&#xd;
	&quot;comment&quot;: &quot;abcdefg&quot;,&#xd;
	&quot;createdDate&quot;: &quot;2018-02-02T02:21:13.863Z&quot;,&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: &quot;{\&quot;latitude\&quot;:31.233078,\&quot;longitude\&quot;:121.373113,\&quot;address\&quot;:\&quot;上海市\&quot;}&quot;,&#xd;
	&quot;createTime&quot;: null,&#xd;
	&quot;approvalOperateDTOList&quot;: null,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;rejectReason&quot;: null,&#xd;
	&quot;approverId&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;unitPrice&quot;: null,&#xd;
	&quot;number&quot;: null,&#xd;
	&quot;valid&quot;: false,&#xd;
	&quot;unit&quot;: null,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: null,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;payByCompany&quot;: true,&#xd;
	&quot;apportionEnabled&quot;: false,&#xd;
	&quot;expenseApportion&quot;: [],&#xd;
	&quot;invoiceScannerAmountChange&quot;: false,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseCreatedType&quot;: &quot;1001&quot;,&#xd;
	&quot;bankTransactionDetail&quot;: {&#xd;
		&quot;id&quot;: &quot;${bankTransactionID}&quot;,&#xd;
		&quot;bilMon&quot;: &quot;${bilMon}&quot;,&#xd;
		&quot;bilDate&quot;: &quot;${bilDate}&quot;,&#xd;
		&quot;crdNum&quot;: &quot;${crdNum}&quot;,&#xd;
		&quot;trsDate&quot;: &quot;${trsDate}&quot;,&#xd;
		&quot;trxTim&quot;: &quot;${trxTim}&quot;,&#xd;
		&quot;oriCurAmt&quot;: &quot;${oriCurAmt}&quot;,&#xd;
		&quot;oriCurCod&quot;: &quot;CNY&quot;,&#xd;
		&quot;posDate&quot;: &quot;${posDate}&quot;,&#xd;
		&quot;posCurAmt&quot;: &quot;${posCurAmt}&quot;,&#xd;
		&quot;posCurCod&quot;: &quot;CNY&quot;,&#xd;
		&quot;acpName&quot;: &quot;hehe&quot;,&#xd;
		&quot;trsCod&quot;: &quot;00&quot;,&#xd;
		&quot;overTime&quot;: false,&#xd;
		&quot;approvedDeadLineDate&quot;: &quot;${approvedDeadLineDate}&quot;,&#xd;
		&quot;remark&quot;: &quot;${remark}&quot;,&#xd;
		&quot;bankName&quot;: &quot;${bankName}&quot;,&#xd;
		&quot;isSelected&quot;: true,&#xd;
		&quot;billYear&quot;: 2018,&#xd;
		&quot;isCurrentYear&quot;: true&#xd;
	},&#xd;
	&quot;bankTransactionID&quot;: &quot;${bankTransactionID}&quot;,&#xd;
	&quot;companyOID&quot;: &quot;${companyOID}&quot;,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCodeShow&quot;: true,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;rateWarning&quot;: false,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="是否与查询到的交易号一致" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-431197284">&quot;bankTransactionID&quot;:&quot;${bankTransactionID}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="是否与查询到的交易金额一致" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-2066338391">&quot;baseAmount&quot;:${oriCurAmt}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取invoiceOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">invoiceOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;invoiceOID&quot;:&quot;(.+?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取expenseTypeId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseTypeId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseTypeId&quot;:&quot;(.+?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取expenseTypeOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseTypeOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseTypeOID&quot;:&quot;(.+?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_(账本)修改费用" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceOID&quot;: &quot;${invoiceOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;餐饮&quot;,&#xd;
	&quot;crossCheckStatus&quot;: null,&#xd;
	&quot;expenseTypeKey&quot;: null,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;foodbeverage&quot;,&#xd;
	&quot;phoneNumber&quot;: null,&#xd;
	&quot;email&quot;: null,&#xd;
	&quot;expenseTypeIconURL&quot;: &quot;http://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//1af2a30d-9719-419b-a7ef-68078462baed/expenseIcon/1c920fbc-20a2-4af3-9c2d-5db305baee9c-foodbeverage.png&quot;,&#xd;
	&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
	&quot;expenseTypeCategoryDTO&quot;: {&#xd;
		&quot;expenseTypeCategoryOID&quot;: &quot;08a33747-d5cf-479f-9804-21c850db7286&quot;,&#xd;
		&quot;name&quot;: &quot;费用类型&quot;,&#xd;
		&quot;code&quot;: null&#xd;
	},&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: &quot;199.00&quot;,&#xd;
	&quot;originalAmount&quot;: 200,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: &quot;8e370998-f61e-4680-800b-48fbf5894572&quot;,&#xd;
	&quot;mobile&quot;: null,&#xd;
	&quot;employeeId&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;上海&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;ce9f83e6-2bc7-4730-b7a1-60ce097ed79f&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;name&quot;: &quot;就餐地点&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;早陆晚玖(金环商务店)\&quot;,\&quot;longitude\&quot;:\&quot;121.373536\&quot;,\&quot;latitude\&quot;:\&quot;31.234268\&quot;}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;location&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;e8dd52de-1eb3-4f84-a047-f3fa43065e66&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;LONG&quot;,&#xd;
		&quot;name&quot;: &quot;人数&quot;,&#xd;
		&quot;value&quot;: 3,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;head.count&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;15cb2cae-846b-4f01-8205-5cd80925e240&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;对象&quot;,&#xd;
		&quot;value&quot;: &quot;ab，bc，cd&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;person&quot;,&#xd;
		&quot;sequence&quot;: 4,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;d5f9eaf2-14aa-4e65-b0ed-45ee3d9c1c99&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;comment&quot;: &quot;abcdefg&quot;,&#xd;
	&quot;warning&quot;: &quot;&quot;,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;createdDate&quot;: &quot;2018-02-01T02:21:14.514Z&quot;,&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: &quot;{\&quot;latitude\&quot;:31.23308,\&quot;longitude\&quot;:121.37312,\&quot;address\&quot;:\&quot;上海市\&quot;}&quot;,&#xd;
	&quot;createTime&quot;: &quot;2018-03-28T08:23:52Z&quot;,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;rejectReason&quot;: null,&#xd;
	&quot;approverId&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;approvalOperates&quot;: null,&#xd;
	&quot;approver&quot;: null,&#xd;
	&quot;referenceId&quot;: null,&#xd;
	&quot;unitPrice&quot;: null,&#xd;
	&quot;number&quot;: null,&#xd;
	&quot;receiptFailType&quot;: null,&#xd;
	&quot;receiptFailReason&quot;: null,&#xd;
	&quot;valid&quot;: false,&#xd;
	&quot;receiptID&quot;: null,&#xd;
	&quot;cardSignType&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;receiptGoodsID&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;invoiceLabelDTOS&quot;: null,&#xd;
	&quot;companyOID&quot;: null,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;餐补&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;source&quot;: null,&#xd;
	&quot;ownerOID&quot;: &quot;8e370998-f61e-4680-800b-48fbf5894572&quot;,&#xd;
	&quot;checked&quot;: null,&#xd;
	&quot;createInvoice&quot;: true,&#xd;
	&quot;checkWarning&quot;: null,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;digitalInvoiceId&quot;: null,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;originalActualCurrencyRate&quot;: 1,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;actualCurrencyAmount&quot;: 199,&#xd;
	&quot;baseAmount&quot;: 199,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;flightNo&quot;: null,&#xd;
	&quot;apportionUsed&quot;: false,&#xd;
	&quot;expenseApportion&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: null,&#xd;
	&quot;amountChanged&quot;: null,&#xd;
	&quot;approvalStatus&quot;: null,&#xd;
	&quot;bankTransactionID&quot;: &quot;${bankTransactionID}&quot;,&#xd;
	&quot;expenseCreatedType&quot;: null,&#xd;
	&quot;overDue&quot;: false,&#xd;
	&quot;bankTransactionDetail&quot;: {&#xd;
		&quot;id&quot;: &quot;${bankTransactionID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-03-27T15:54:42Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-28T08:23:52Z&quot;,&#xd;
		&quot;createdBy&quot;: &quot;8e370998-f61e-4680-800b-48fbf5894572&quot;,&#xd;
		&quot;lastModifiedBy&quot;: &quot;8e370998-f61e-4680-800b-48fbf5894572&quot;,&#xd;
		&quot;ownerOid&quot;: &quot;8e370998-f61e-4680-800b-48fbf5894572&quot;,&#xd;
		&quot;tenantID&quot;: &quot;${tenantId}&quot;,&#xd;
		&quot;companyOID&quot;: &quot;${companyOID}&quot;,&#xd;
		&quot;used&quot;: true,&#xd;
		&quot;expenseCreatedType&quot;: 1001,&#xd;
		&quot;deleted&quot;: false,&#xd;
		&quot;cardTypeCode&quot;: &quot;CMBC&quot;,&#xd;
		&quot;bankName&quot;: &quot;招行&quot;,&#xd;
		&quot;bankDescription&quot;: &quot;招商银行商务卡&quot;,&#xd;
		&quot;corNum&quot;: &quot;9900000632&quot;,&#xd;
		&quot;actNum&quot;: &quot;&quot;,&#xd;
		&quot;bilMon&quot;: &quot;201802&quot;,&#xd;
		&quot;bilDate&quot;: &quot;2018-02-25&quot;,&#xd;
		&quot;crdNum&quot;: &quot;${crdNum}&quot;,&#xd;
		&quot;actChiNam&quot;: &quot;&quot;,&#xd;
		&quot;actEngNam&quot;: &quot;&quot;,&#xd;
		&quot;empNum&quot;: &quot;&quot;,&#xd;
		&quot;trsDate&quot;: &quot;${trsDate}&quot;,&#xd;
		&quot;trxTim&quot;: &quot;${trxTim}&quot;,&#xd;
		&quot;oriCurAmt&quot;: &quot;${oriCurAmt}&quot;,&#xd;
		&quot;oriCurCod&quot;: &quot;CNY&quot;,&#xd;
		&quot;posDate&quot;: &quot;${posDate}&quot;,&#xd;
		&quot;posCurAmt&quot;: &quot;${posCurAmt}&quot;,&#xd;
		&quot;posCurCod&quot;: &quot;CNY&quot;,&#xd;
		&quot;acpCtyCod&quot;: &quot;&quot;,&#xd;
		&quot;acpType&quot;: &quot;&quot;,&#xd;
		&quot;acpId&quot;: &quot;&quot;,&#xd;
		&quot;acpName&quot;: &quot;hehe&quot;,&#xd;
		&quot;aprCod&quot;: null,&#xd;
		&quot;trxRef&quot;: &quot;&quot;,&#xd;
		&quot;trsCod&quot;: &quot;00&quot;,&#xd;
		&quot;trsVchNbr&quot;: &quot;&quot;,&#xd;
		&quot;seqNum&quot;: &quot;82570520&quot;,&#xd;
		&quot;overTime&quot;: false,&#xd;
		&quot;approvedDeadLineDate&quot;: &quot;${approvedDeadLineDate}&quot;,&#xd;
		&quot;remark&quot;: &quot;${remark}&quot;&#xd;
	},&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;subsidyRepeatedFlag&quot;: false,&#xd;
	&quot;orderAmount&quot;: 200,&#xd;
	&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;stringCol1&quot;: null,&#xd;
	&quot;stringCol2&quot;: null,&#xd;
	&quot;stringCol3&quot;: null,&#xd;
	&quot;invoiceScannerAmountChange&quot;: false,&#xd;
	&quot;oriInvoiceCode&quot;: null,&#xd;
	&quot;oriInvoiceNumber&quot;: null,&#xd;
	&quot;date&quot;: &quot;2018-02-01T02:21:14.000Z&quot;,&#xd;
	&quot;time&quot;: &quot;2018-02-01T02:21:14.000Z&quot;,&#xd;
	&quot;preCreatedDate&quot;: &quot;2018-02-01T02:21:14.000Z&quot;,&#xd;
	&quot;payByCompany&quot;: false,&#xd;
	&quot;vatInvoiceCurrencyCodeShow&quot;: true,&#xd;
	&quot;rateWarning&quot;: false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/invoices</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="是否与查询到的交易号一致" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-431197284">&quot;bankTransactionID&quot;:&quot;${bankTransactionID}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="是否与费用单号一致" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="600409060">&quot;invoiceOID&quot;:&quot;${invoiceOID}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="是否与expenseTypeId一致" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1821392188">&quot;expenseTypeId&quot;:&quot;${expenseTypeId}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="是否与expenseTypeOID一致" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-773947388">&quot;expenseTypeOID&quot;:&quot;${expenseTypeOID}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_删除费用(正确invoiceOID)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoice/batch?invoiceOIDs=${invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除费用(错误invoiceOID)" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoice/batch?invoiceOIDs=12313123123131232</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_(账本)通过商务卡消费明细创建费用" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;ownerOID&quot;: null,&#xd;
	&quot;invoiceOID&quot;: null,&#xd;
	&quot;date&quot;: &quot;${trsDate}T00:00:00.000Z&quot;,&#xd;
	&quot;preCreatedDate&quot;: &quot;${trsDate}T00:00:00.000Z&quot;,&#xd;
	&quot;time&quot;: &quot;${trsDate}T02:21:13.000Z&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;423728b6-79e1-470d-9665-4de01e3cf000&quot;,&#xd;
	&quot;expenseTypeIconURL&quot;: &quot;http://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//1af2a30d-9719-419b-a7ef-68078462baed/expenseIcon/1c920fbc-20a2-4af3-9c2d-5db305baee9c-foodbeverage.png&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;餐饮&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;foodbeverage&quot;,&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: &quot;${oriCurAmt}&quot;,&#xd;
	&quot;actualCurrencyAmount&quot;: 0,&#xd;
	&quot;baseAmount&quot;: &quot;${oriCurAmt}&quot;,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;ce9f83e6-2bc7-4730-b7a1-60ce097ed79f&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;name&quot;: &quot;就餐地点&quot;,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;location&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;e8dd52de-1eb3-4f84-a047-f3fa43065e66&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;LONG&quot;,&#xd;
		&quot;name&quot;: &quot;人数&quot;,&#xd;
		&quot;value&quot;: 3,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;head.count&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;15cb2cae-846b-4f01-8205-5cd80925e240&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;对象&quot;,&#xd;
		&quot;value&quot;: &quot;ab,bc,cd&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;person&quot;,&#xd;
		&quot;sequence&quot;: 4,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;d5f9eaf2-14aa-4e65-b0ed-45ee3d9c1c99&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: null,&#xd;
	&quot;comment&quot;: &quot;abcdefg&quot;,&#xd;
	&quot;createdDate&quot;: &quot;2018-02-02T02:21:13.863Z&quot;,&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: &quot;{\&quot;latitude\&quot;:31.233078,\&quot;longitude\&quot;:121.373113,\&quot;address\&quot;:\&quot;上海市\&quot;}&quot;,&#xd;
	&quot;createTime&quot;: null,&#xd;
	&quot;approvalOperateDTOList&quot;: null,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;rejectReason&quot;: null,&#xd;
	&quot;approverId&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;unitPrice&quot;: null,&#xd;
	&quot;number&quot;: null,&#xd;
	&quot;valid&quot;: false,&#xd;
	&quot;unit&quot;: null,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: null,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;payByCompany&quot;: true,&#xd;
	&quot;apportionEnabled&quot;: false,&#xd;
	&quot;expenseApportion&quot;: [],&#xd;
	&quot;invoiceScannerAmountChange&quot;: false,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseCreatedType&quot;: &quot;1001&quot;,&#xd;
	&quot;bankTransactionDetail&quot;: {&#xd;
		&quot;id&quot;: &quot;${bankTransactionID}&quot;,&#xd;
		&quot;bilMon&quot;: &quot;${bilMon}&quot;,&#xd;
		&quot;bilDate&quot;: &quot;${bilDate}&quot;,&#xd;
		&quot;crdNum&quot;: &quot;${crdNum}&quot;,&#xd;
		&quot;trsDate&quot;: &quot;${trsDate}&quot;,&#xd;
		&quot;trxTim&quot;: &quot;${trxTim}&quot;,&#xd;
		&quot;oriCurAmt&quot;: &quot;${oriCurAmt}&quot;,&#xd;
		&quot;oriCurCod&quot;: &quot;CNY&quot;,&#xd;
		&quot;posDate&quot;: &quot;${posDate}&quot;,&#xd;
		&quot;posCurAmt&quot;: &quot;${posCurAmt}&quot;,&#xd;
		&quot;posCurCod&quot;: &quot;CNY&quot;,&#xd;
		&quot;acpName&quot;: &quot;hehe&quot;,&#xd;
		&quot;trsCod&quot;: &quot;00&quot;,&#xd;
		&quot;overTime&quot;: false,&#xd;
		&quot;approvedDeadLineDate&quot;: &quot;${approvedDeadLineDate}&quot;,&#xd;
		&quot;remark&quot;: &quot;${remark}&quot;,&#xd;
		&quot;bankName&quot;: &quot;${bankName}&quot;,&#xd;
		&quot;isSelected&quot;: true,&#xd;
		&quot;billYear&quot;: 2018,&#xd;
		&quot;isCurrentYear&quot;: true&#xd;
	},&#xd;
	&quot;bankTransactionID&quot;: &quot;${bankTransactionID}&quot;,&#xd;
	&quot;companyOID&quot;: &quot;${companyOID}&quot;,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCodeShow&quot;: true,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;rateWarning&quot;: false,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="是否与查询到的交易号一致" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-431197284">&quot;bankTransactionID&quot;:&quot;${bankTransactionID}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="是否与查询到的交易金额一致" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-2066338391">&quot;baseAmount&quot;:${oriCurAmt}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取invoiceOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">invoiceOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;invoiceOID&quot;:&quot;(.+?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取expenseTypeId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseTypeId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseTypeId&quot;:&quot;(.+?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取expenseTypeOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseTypeOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseTypeOID&quot;:&quot;(.+?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_获取报销单OID" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/search/my?page=0&amp;rejectType=1000&amp;rejectType=1001&amp;size=10&amp;status=1001</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取expenseReportOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseReportOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseReportOID&quot;:&quot;(.+?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="我的报销中导入账本费用(报销单OID,费用OID都为空)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;expenseReportOID&quot;:&quot;&quot;,&quot;invoiceOIDs&quot;:[&quot;&quot;]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices/import</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="返回状态" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="353040032">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_我的报销中导入账本费用(报销单OID,费用OID都为错值)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;expenseReportOID&quot;:&quot;${expenseReportOID}&quot;,&quot;invoiceOIDs&quot;:[&quot;c6560d4b-af54-4ae5-98db-91b1514aas1&quot;]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices/import</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="返回状态" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1007825875">{&quot;message&quot;:&quot;could_not_read_json&quot;,&quot;errorCode&quot;:&quot;VALIDATION_ERROR&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_我的报销中导入账本费用(正常)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;expenseReportOID&quot;:&quot;${expenseReportOID}&quot;,&quot;invoiceOIDs&quot;:[&quot;${invoiceOID}&quot;]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices/import</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="返回code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应结果" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="353040032">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_我的报销单中删除费用" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/remove/invoice/${expenseReportOID}/${invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="返回code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_删除费用(正确invoiceOID)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoice/batch?invoiceOIDs=${invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="退出登录 " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="定时提醒任务" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1522294541000</longProp>
        <longProp name="ThreadGroup.end_time">1522294541000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="23750841">工作台</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="918312701">用户信息</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="获取登录token不成功，再次获取" enabled="true">
          <stringProp name="IfController.condition">&quot;${accessToken}&quot; ==&quot;&quot; || &quot;${accessToken}&quot; ==undefined</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="23750841">工作台</stringProp>
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="918312701">用户信息</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="断言持续时间" enabled="true">
          <stringProp name="DurationAssertion.duration">10000</stringProp>
        </DurationAssertion>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_招行商务卡-创建定时提醒规则" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;code&quot;: &quot;BankCardTask&quot;,&#xd;
	&quot;description&quot;: &quot;&quot;,&#xd;
	&quot;month&quot;: &quot;&quot;,&#xd;
	&quot;weekday&quot;: &quot;&quot;,&#xd;
	&quot;hour&quot;: 10,&#xd;
	&quot;date&quot;: 15,&#xd;
	&quot;params&quot;: &quot;{\&quot;title\&quot;:\&quot;商务卡消费报销提醒\&quot;,\&quot;content\&quot;:\&quot;您有未生成费用／未提交的报销单，请及时报销\&quot;,\&quot;remindTypes\&quot;:[\&quot;APP\&quot;],\&quot;bankCardTypes\&quot;:[\&quot;CMBC\&quot;],\&quot;consumeTypes\&quot;:[\&quot;BANK_TRAN_NOT_CREATED_INVOICE\&quot;,\&quot;BANK_TRAN_NOT_REFERENCED_REPORT\&quot;,\&quot;BANK_TRAN_NOT_PASSED_REPORT\&quot;],\&quot;billingPeriodTypes\&quot;:[\&quot;CURRENT_MONTH\&quot;,\&quot;LAST_MONTH\&quot;]}&quot;,&#xd;
	&quot;companyOID&quot;: &quot;${companyOID}&quot;,&#xd;
	&quot;enabledFlag&quot;: true,&#xd;
	&quot;lastProcessedDate&quot;: &quot;&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/taskConfig</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="数据返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1683609615">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="是否创建设置内容一致" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1015300689">{\&quot;title\&quot;:\&quot;商务卡消费报销提醒\&quot;,\&quot;content\&quot;:\&quot;您有未生成费用／未提交的报销单，请及时报销\&quot;,\&quot;remindTypes\&quot;:[\&quot;APP\&quot;],\&quot;bankCardTypes\&quot;:[\&quot;CMBC\&quot;],\&quot;consumeTypes\&quot;:[\&quot;BANK_TRAN_NOT_CREATED_INVOICE\&quot;,\&quot;BANK_TRAN_NOT_REFERENCED_REPORT\&quot;,\&quot;BANK_TRAN_NOT_PASSED_REPORT\&quot;],\&quot;billingPeriodTypes\&quot;:[\&quot;CURRENT_MONTH\&quot;,\&quot;LAST_MONTH\&quot;]}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="companyOID" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="597102052">&quot;companyOID&quot;:&quot;${companyOID}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="tenantID" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1138524924">&quot;tenantID&quot;:&quot;${tenantId}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取taskID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">taskID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_招行商务卡定时提醒规则查询(companyOID错误)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;companyOID&quot;:&quot;2e52d4ba-83a0-4f6c-9fc0-2acab987606a&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/taskConfig/queryByExample</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="数据返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1727873399">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:[]}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_招行商务卡定时提醒规则查询" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;companyOID&quot;:&quot;${companyOID}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/taskConfig/queryByExample</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="数据返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1683609615">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="taskID" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1144764631">&quot;id&quot;:&quot;${taskID}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_定时提醒任务--执行所有符合条件的定时任务" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/bankcard/task/invoice/notice</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="数据返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1683609615">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_定时提醒任务--根据ID执行(ID为空)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/bankcard/task/invoice/notice/by/task/id?taskID=</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="数据返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1629056898">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_定时提醒任务--根据ID执行(ID错误)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/bankcard/task/invoice/notice/by/task/id?taskID=12123123123123123</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="数据返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1629056898">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_定时提醒任务--根据ID执行" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/bankcard/task/invoice/notice/by/task/id?taskID=${taskID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="数据返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1756977611">success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_商务卡逾期提醒--定时任务" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/bankcard/task/over/time</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="数据返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1253832498">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:{</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_今日落地数据定时提醒" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/bankcard/task/pulled/data/notice</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="数据返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1629056898">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_P1_招行商务卡-删除定时提醒规则" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&quot;${taskID}&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/taskConfig</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="数据返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="353040032">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="退出登录 " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="验证bug" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1535596454000</longProp>
        <longProp name="ThreadGroup.end_time">1535596454000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="23750841">工作台</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="918312701">用户信息</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除费用(错误invoiceOID)" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoice/batch?invoiceOIDs=12313123123131232</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="(账本)查询费用明细(错误invoiceOID)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoices/12312312312123123123123</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1040803461">&quot;success&quot;:false,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="工作台" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
