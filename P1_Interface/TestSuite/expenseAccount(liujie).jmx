<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.3 r1808647">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${serviceURL}</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
        <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="protocol" elementType="Argument">
            <stringProp name="Argument.name">protocol</stringProp>
            <stringProp name="Argument.value">http</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="serviceURL" elementType="Argument">
            <stringProp name="Argument.name">serviceURL</stringProp>
            <stringProp name="Argument.value">apistage.huilianyi.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DBserver" elementType="Argument">
            <stringProp name="Argument.name">DBserver</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DBport" elementType="Argument">
            <stringProp name="Argument.name">DBport</stringProp>
            <stringProp name="Argument.value">9876</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Authorization" elementType="Argument">
            <stringProp name="Argument.name">Authorization</stringProp>
            <stringProp name="Argument.value">Basic QXJ0ZW1pc0FwcDpuTENud2RJaGl6V2J5a0h5dVpNNlRwUURkN0t3SzlJWERLOExHc2E3U09X</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="username" elementType="Argument">
            <stringProp name="Argument.name">username</stringProp>
            <stringProp name="Argument.value">13700000000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="password" elementType="Argument">
            <stringProp name="Argument.name">password</stringProp>
            <stringProp name="Argument.value">hly123</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="page" elementType="Argument">
            <stringProp name="Argument.name">page</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pagesize" elementType="Argument">
            <stringProp name="Argument.name">pagesize</stringProp>
            <stringProp name="Argument.value">10</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="month" elementType="Argument">
            <stringProp name="Argument.name">month</stringProp>
            <stringProp name="Argument.value">${__time(yyyyMM,time)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="applicantOID" elementType="Argument">
            <stringProp name="Argument.name">applicantOID</stringProp>
            <stringProp name="Argument.value">561fc55d-f8e5-410f-bb1a-597bfa1de2e0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="businessCode" elementType="Argument">
            <stringProp name="Argument.name">businessCode</stringProp>
            <stringProp name="Argument.value">ER00039150</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="businessCode1" elementType="Argument">
            <stringProp name="Argument.name">businessCode1</stringProp>
            <stringProp name="Argument.value">LA00020740</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="formOIDs" elementType="Argument">
            <stringProp name="Argument.name">formOIDs</stringProp>
            <stringProp name="Argument.value">dee6d7fb-cca4-4c42-9d58-df22a29ad434</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="formOID" elementType="Argument">
            <stringProp name="Argument.name">formOID</stringProp>
            <stringProp name="Argument.value">8e43a1cf-bfb8-4765-bcb3-2ac5742e2610</stringProp>
            <stringProp name="Argument.desc">借款单</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="userOID" elementType="Argument">
            <stringProp name="Argument.name">userOID</stringProp>
            <stringProp name="Argument.value">a3600170-c212-48d2-a55b-80ac3e292871</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery">Select 1</stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">artemis</stringProp>
        <stringProp name="dbUrl">jdbc:mysql://${DBserver}:${DBport}/artemis</stringProp>
        <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">123456Ms3</stringProp>
        <stringProp name="poolMax">10</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">artemis</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
        <boolProp name="displayJMeterProperties">false</boolProp>
        <boolProp name="displayJMeterVariables">true</boolProp>
        <boolProp name="displaySamplerProperties">true</boolProp>
        <boolProp name="displaySystemProperties">false</boolProp>
      </DebugPostProcessor>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment" enabled="true"/>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">${Authorization}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取token" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${username}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${password}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="scope" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">write</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">scope</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${serviceURL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/oauth/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="accessToken" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">accessToken</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="通用报销单（无费用）" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1522201515000</longProp>
        <longProp name="ThreadGroup.end_time">1522201515000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="模块控制器" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="23750841">工作台</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="170071582">Test Fragment</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询报销单（禁用）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/company/expense/report/all?enabledFlag=0</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询报销单（启用）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/company/expense/report/all?enabledFlag=1</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询报销单（全部）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/company/expense/report/all?enabledFlag=2</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单创建" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
	&quot;id&quot;: 8862,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: &quot;&quot;,&#xd;
	&quot;formType&quot;: 3001,&#xd;
	&quot;asSystem&quot;: true,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;2018-04-18T02:35:24Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 48623,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253101,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253102,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;&#xd;
	}, {&#xd;
		&quot;id&quot;: 48624,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253103,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253104,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: null,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1002,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: null,&#xd;
	&quot;companyOID&quot;: &quot;b634aa55-09dd-4f44-9504-4b18ab2d0556&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;form.description&quot;: &quot;{\&quot;enable\&quot;:false,\&quot;en\&quot;:{\&quot;title\&quot;:\&quot;caption\&quot;,\&quot;content\&quot;:\&quot;content\&quot;},\&quot;zh_cn\&quot;:{\&quot;title\&quot;:\&quot;说明文字\&quot;,\&quot;content\&quot;:\&quot;描述内容\&quot;}}&quot;,&#xd;
		&quot;countersignTypeForSubmitter&quot;: &quot;2&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: 971590973585305600,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 48623,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253101,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253102,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;&#xd;
	}, {&#xd;
		&quot;id&quot;: 48624,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253103,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253104,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;currencySame&quot;: false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/draft</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取新建的单据号" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">businessCode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;businessCode&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取报销单OID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseReportOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseReportOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取applicantOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">applicantOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOIDs" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOIDs</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;approverOIDs&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取bizOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">bizOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;bizOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单保存" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;applicantName&quot;:&quot;李佳&quot;,&quot;applicantOID&quot;:&quot;${applicantOID}&quot;,&quot;approverOIDs&quot;:&quot;${approverOIDs}&quot;,&quot;baseCurrency&quot;:&quot;CNY&quot;,&quot;baseCurrencyAmount&quot;:0,&quot;baseCurrencyRealPayAmount&quot;:0,&quot;businessCode&quot;:&quot;${data1}&quot;,&quot;companyOID&quot;:&quot;1af2a30d-9719-419b-a7ef-68078462baed&quot;,&quot;corporationOID&quot;:&quot;910e5dd5-a4ad-48d7-aa41-4d4b61f72f40&quot;,&quot;createdBy&quot;:&quot;561fc55d-f8e5-410f-bb1a-597bfa1de2e0&quot;,&quot;createdDate&quot;:&quot;2018-03-28T07:33:31Z&quot;,&quot;createdName&quot;:&quot;李佳&quot;,&quot;currencyCode&quot;:&quot;CNY&quot;,&quot;currencyCodeName&quot;:&quot;人民币&quot;,&quot;currencySame&quot;:false,&quot;custFormValues&quot;:[{&quot;bizType&quot;:&quot;DAILY_EXPENSE_REPORT&quot;,&quot;bizTypeId&quot;:null,&quot;formValueOID&quot;:&quot;ada4610a-cf70-46e3-b168-643b298d6fd9&quot;,&quot;bizOID&quot;:&quot;${bizOID}&quot;,&quot;fieldOID&quot;:&quot;279806a2-5000-44ac-81ad-d3be2ddfcc48&quot;,&quot;fieldName&quot;:&quot;部门&quot;,&quot;fieldType&quot;:&quot;TEXT&quot;,&quot;fieldTypeId&quot;:null,&quot;value&quot;:&quot;e3ff1f0f-9d92-462b-88cd-80d9fd8f1cfa&quot;,&quot;showValue&quot;:null,&quot;createdDate&quot;:&quot;2018-03-28T07:33:31Z&quot;,&quot;lastModifiedDate&quot;:&quot;2018-03-28T07:33:31Z&quot;,&quot;fieldContent&quot;:null,&quot;formOID&quot;:&quot;0b826257-b25a-47c2-b652-a8b2c8e01ce9&quot;,&quot;referenceOID&quot;:null,&quot;messageKey&quot;:&quot;select_department&quot;,&quot;dataSource&quot;:&quot;&quot;,&quot;sequence&quot;:0,&quot;required&quot;:false,&quot;isReadOnly&quot;:false,&quot;fieldConstraint&quot;:&quot;{\&quot;isApportionItem\&quot;:true}&quot;,&quot;fieldCode&quot;:null,&quot;attachmentImages&quot;:[],&quot;bankAccountNo&quot;:null,&quot;promptInfo&quot;:null,&quot;pdfShow&quot;:true},{&quot;bizType&quot;:&quot;DAILY_EXPENSE_REPORT&quot;,&quot;bizTypeId&quot;:null,&quot;formValueOID&quot;:&quot;933de823-f697-491e-b10c-3b38a5093e1f&quot;,&quot;bizOID&quot;:&quot;${bizOID}&quot;,&quot;fieldOID&quot;:&quot;620d2faf-5285-4f8f-ac5e-36ea7e5c9868&quot;,&quot;fieldName&quot;:&quot;事由&quot;,&quot;fieldType&quot;:&quot;TEXT&quot;,&quot;fieldTypeId&quot;:null,&quot;value&quot;:&quot;接口测试&quot;,&quot;showValue&quot;:null,&quot;createdDate&quot;:&quot;2018-03-28T07:33:31Z&quot;,&quot;lastModifiedDate&quot;:&quot;2018-03-28T07:33:31Z&quot;,&quot;fieldContent&quot;:null,&quot;formOID&quot;:&quot;0b826257-b25a-47c2-b652-a8b2c8e01ce9&quot;,&quot;referenceOID&quot;:null,&quot;messageKey&quot;:&quot;title&quot;,&quot;dataSource&quot;:&quot;&quot;,&quot;sequence&quot;:1,&quot;required&quot;:true,&quot;isReadOnly&quot;:false,&quot;fieldConstraint&quot;:&quot;&quot;,&quot;fieldCode&quot;:null,&quot;attachmentImages&quot;:[],&quot;bankAccountNo&quot;:null,&quot;promptInfo&quot;:null,&quot;pdfShow&quot;:true},{&quot;bizType&quot;:&quot;DAILY_EXPENSE_REPORT&quot;,&quot;bizTypeId&quot;:null,&quot;formValueOID&quot;:&quot;1c4a566d-b374-4b00-bfb2-7b323f9eec14&quot;,&quot;bizOID&quot;:&quot;${bizOID}&quot;,&quot;fieldOID&quot;:null,&quot;fieldName&quot;:&quot;审批人&quot;,&quot;fieldType&quot;:&quot;TEXT&quot;,&quot;fieldTypeId&quot;:null,&quot;value&quot;:&quot;561fc55d-f8e5-410f-bb1a-597bfa1de2e0&quot;,&quot;showValue&quot;:null,&quot;createdDate&quot;:&quot;2018-03-28T07:33:31Z&quot;,&quot;lastModifiedDate&quot;:&quot;2018-03-28T07:33:31Z&quot;,&quot;fieldContent&quot;:null,&quot;formOID&quot;:&quot;0b826257-b25a-47c2-b652-a8b2c8e01ce9&quot;,&quot;referenceOID&quot;:null,&quot;messageKey&quot;:&quot;select_approver&quot;,&quot;dataSource&quot;:null,&quot;sequence&quot;:1000,&quot;required&quot;:true,&quot;isReadOnly&quot;:null,&quot;fieldConstraint&quot;:&quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&quot;fieldCode&quot;:null,&quot;attachmentImages&quot;:[],&quot;bankAccountNo&quot;:null,&quot;promptInfo&quot;:null,&quot;pdfShow&quot;:null}],&quot;departmentName&quot;:&quot;财务一部&quot;,&quot;departmentNumber&quot;:&quot;123456&quot;,&quot;departmentOID&quot;:&quot;e3ff1f0f-9d92-462b-88cd-80d9fd8f1cfa&quot;,&quot;departmentPath&quot;:&quot;财务部|财务一部&quot;,&quot;expenseReportInvoices&quot;:[],&quot;expenseReportOID&quot;:&quot;${data2}&quot;,&quot;expenseTypes&quot;:&quot;&quot;,&quot;filterFlag&quot;:true,&quot;forceCount&quot;:0,&quot;forceEnabled&quot;:&quot;N&quot;,&quot;foreignCurrencyAmount&quot;:0,&quot;formName&quot;:&quot;自动化日常报销单&quot;,&quot;formOID&quot;:&quot;0b826257-b25a-47c2-b652-a8b2c8e01ce9&quot;,&quot;ignoreBudgetWarningFlag&quot;:false,&quot;lastModifiedDate&quot;:&quot;2018-03-28T07:33:31Z&quot;,&quot;lastSubmittedDate&quot;:&quot;2018-03-28T07:33:30Z&quot;,&quot;needApproval&quot;:false,&quot;overtime&quot;:&quot;N&quot;,&quot;overtimeCount&quot;:0,&quot;personalPaymentAmount&quot;:0,&quot;personalPaymentBaseAmount&quot;:0,&quot;printable&quot;:true,&quot;realPaymentAmount&quot;:0,&quot;realPaymentBaseAmount&quot;:0,&quot;rejectType&quot;:1000,&quot;remark&quot;:&quot;测试自动化，勿动&quot;,&quot;reviewedFlag&quot;:false,&quot;splitStatus&quot;:0,&quot;status&quot;:1001,&quot;statusView&quot;:1001,&quot;subCompanyOID&quot;:&quot;08bf2202-3f56-4ad6-bede-db180bc52a2c&quot;,&quot;title&quot;:&quot;接口测试&quot;,&quot;totalAmount&quot;:0,&quot;travelStandardValid&quot;:1001,&quot;travelStandardWarning&quot;:false,&quot;type&quot;:1001,&quot;withReceiptAmount&quot;:0,&quot;withoutReceiptAmount&quot;:0,&quot;writeoffFlag&quot;:false,&quot;warnning&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/draft</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="单据提交（无费用）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;applicantName&quot;: &quot;自动化测试Admin&quot;,&#xd;
	&quot;applicantOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;approverOIDs&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;baseCurrencyAmount&quot;: 1,&#xd;
	&quot;baseCurrencyRealPayAmount&quot;: 1,&#xd;
	&quot;businessCode&quot;: &quot;ER00657509&quot;,&#xd;
	&quot;companyOID&quot;: &quot;b634aa55-09dd-4f44-9504-4b18ab2d0556&quot;,&#xd;
	&quot;corporationOID&quot;: &quot;ab577d17-9a43-4d53-90b0-a8fa2cfbfab9&quot;,&#xd;
	&quot;createdBy&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;createdDate&quot;: &quot;2018-07-09T06:16:53Z&quot;,&#xd;
	&quot;createdName&quot;: &quot;自动化测试Admin&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;currencyCodeName&quot;: &quot;人民币&quot;,&#xd;
	&quot;currencySame&quot;: false,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;99d3e593-951e-451c-986f-25b3c5cf5893&quot;,&#xd;
		&quot;bizOID&quot;: &quot;d9e430e8-5265-428d-8181-ed962f1a5daf&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;showValue&quot;: &quot;HLY自动化测试团&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-07-09T06:16:53Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-07-09T06:16:53Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: true,&#xd;
		&quot;refCostCenterOID&quot;: null&#xd;
	}, {&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;6728120a-2b1d-45ef-8ac2-1e25d58b9a11&quot;,&#xd;
		&quot;bizOID&quot;: &quot;d9e430e8-5265-428d-8181-ed962f1a5daf&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;未添加费用&quot;,&#xd;
		&quot;showValue&quot;: &quot;未添加费用&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-07-09T06:16:53Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-07-09T06:16:53Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: true,&#xd;
		&quot;refCostCenterOID&quot;: null&#xd;
	}, {&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;c8508f3f-4b83-4b36-8040-6318745e7bc0&quot;,&#xd;
		&quot;bizOID&quot;: &quot;d9e430e8-5265-428d-8181-ed962f1a5daf&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;showValue&quot;: &quot;自动化测试Admin&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-07-09T06:16:53Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-07-09T06:16:53Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: null,&#xd;
		&quot;refCostCenterOID&quot;: null&#xd;
	}],&#xd;
	&quot;departmentName&quot;: &quot;HLY自动化测试团&quot;,&#xd;
	&quot;departmentOID&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
	&quot;departmentPath&quot;: &quot;HLY自动化测试团&quot;,&#xd;
&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;expenseTypes&quot;: &quot;4eb0e9ab-94bc-48ba-b7db-b9c5cefeb20c&quot;,&#xd;
	&quot;filterFlag&quot;: true,&#xd;
	&quot;forceCount&quot;: 0,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;foreignCurrencyAmount&quot;: 1,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
	&quot;ignoreBudgetWarningFlag&quot;: true,&#xd;
	&quot;lastModifiedDate&quot;: &quot;2018-07-09T06:26:37Z&quot;,&#xd;
	&quot;lastSubmittedDate&quot;: &quot;2018-07-09T06:16:53Z&quot;,&#xd;
	&quot;needApproval&quot;: false,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;overtimeCount&quot;: 0,&#xd;
	&quot;personalPaymentAmount&quot;: 1,&#xd;
	&quot;personalPaymentBaseAmount&quot;: 1,&#xd;
	&quot;printFree&quot;: false,&#xd;
	&quot;printView&quot;: 0,&#xd;
	&quot;printable&quot;: true,&#xd;
	&quot;realPaymentAmount&quot;: 1,&#xd;
	&quot;realPaymentBaseAmount&quot;: 1,&#xd;
	&quot;rejectType&quot;: 1000,&#xd;
	&quot;reviewedFlag&quot;: false,&#xd;
	&quot;setOfBooksId&quot;: 971590973727912000,&#xd;
	&quot;splitStatus&quot;: 0,&#xd;
	&quot;status&quot;: 1001,&#xd;
	&quot;statusView&quot;: 1001,&#xd;
	&quot;subCompanyOID&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
	&quot;tenantId&quot;: 971590973585305600,&#xd;
	&quot;title&quot;: &quot;未添加费用&quot;,&#xd;
	&quot;totalAmount&quot;: 1,&#xd;
	&quot;travelStandardValid&quot;: 1001,&#xd;
	&quot;travelStandardWarning&quot;: false,&#xd;
	&quot;type&quot;: 1001,&#xd;
	&quot;withReceiptAmount&quot;: 1,&#xd;
	&quot;withoutReceiptAmount&quot;: 0,&#xd;
	&quot;writeoffFlag&quot;: false,&#xd;
	&quot;loanApplicationOID&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">entityOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;entityOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="97196323">false</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单创建" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
	&quot;id&quot;: 8862,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: &quot;&quot;,&#xd;
	&quot;formType&quot;: 3001,&#xd;
	&quot;asSystem&quot;: true,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;2018-04-18T02:35:24Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 48623,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253101,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253102,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;&#xd;
	}, {&#xd;
		&quot;id&quot;: 48624,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253103,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253104,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: null,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1002,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: null,&#xd;
	&quot;companyOID&quot;: &quot;b634aa55-09dd-4f44-9504-4b18ab2d0556&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;form.description&quot;: &quot;{\&quot;enable\&quot;:false,\&quot;en\&quot;:{\&quot;title\&quot;:\&quot;caption\&quot;,\&quot;content\&quot;:\&quot;content\&quot;},\&quot;zh_cn\&quot;:{\&quot;title\&quot;:\&quot;说明文字\&quot;,\&quot;content\&quot;:\&quot;描述内容\&quot;}}&quot;,&#xd;
		&quot;countersignTypeForSubmitter&quot;: &quot;2&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: 971590973585305600,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 48623,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253101,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253102,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;&#xd;
	}, {&#xd;
		&quot;id&quot;: 48624,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253103,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253104,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;currencySame&quot;: false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/draft</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取新建的单据号" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">businessCode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;businessCode&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取报销单OID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseReportOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseReportOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取applicantOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">applicantOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOIDs" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOIDs</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;approverOIDs&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取bizOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">bizOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;bizOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建费用" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;roommateEnabled&quot;: false,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;ownerOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;invoiceOID&quot;: null,&#xd;
	&quot;date&quot;: &quot;2018-05-31T08:04:31.594Z&quot;,&#xd;
	&quot;time&quot;: &quot;2018-05-31T08:04:31.594Z&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;48375&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;4eb0e9ab-94bc-48ba-b7db-b9c5cefeb20c&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;类型&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;no-image&quot;,&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: 500,&#xd;
	&quot;orderAmount&quot;: null,&#xd;
	&quot;orderCurrencyCode&quot;: null,&#xd;
	&quot;originalAmount&quot;: 500,&#xd;
	&quot;firstBringAmount&quot;: 0,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;国家&quot;,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;country&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;665a22db-7a70-481f-bd84-b16c8e89e6a0&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;i18n&quot;: {}&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: null,&#xd;
	&quot;comment&quot;: null,&#xd;
	&quot;createdDate&quot;: &quot;2018-05-31T08:04:32.255Z&quot;,&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: null,&#xd;
	&quot;createTime&quot;: &quot;2018-05-31T08:04:32.255Z&quot;,&#xd;
	&quot;approvalOperateDTOList&quot;: null,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;rejectReason&quot;: null,&#xd;
	&quot;approverId&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: null,&#xd;
	&quot;paymentType&quot;: 1001,&#xd;
	&quot;payByCompany&quot;: false,&#xd;
	&quot;expenseApportion&quot;: [],&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;preCreatedDate&quot;: &quot;2018-05-31T08:04:32.255Z&quot;,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;companyOpenInvoice&quot;: true,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;baseAmount&quot;: 0,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/invoices/expense/report</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="353040032">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单详情（旧）" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取费用信息" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID_1;expenseReportInvoiceOID_1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[0].invoiceOID;$.expenseReportInvoices[0].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单提交" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;applicantName&quot;: &quot;自动化测试Admin&quot;,&#xd;
	&quot;applicantOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;approverOIDs&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;baseCurrencyAmount&quot;: 500,&#xd;
	&quot;baseCurrencyRealPayAmount&quot;: 500,&#xd;
	&quot;businessCode&quot;: &quot;${businessCode}&quot;,&#xd;
	&quot;companyOID&quot;: &quot;b634aa55-09dd-4f44-9504-4b18ab2d0556&quot;,&#xd;
	&quot;corporationOID&quot;: &quot;ab577d17-9a43-4d53-90b0-a8fa2cfbfab9&quot;,&#xd;
	&quot;createdBy&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
	&quot;createdName&quot;: &quot;自动化测试Admin&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;currencyCodeName&quot;: &quot;人民币&quot;,&#xd;
	&quot;currencySame&quot;: false,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;67ff9fab-a4d6-4deb-990c-fdfd5b3b299e&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;showValue&quot;: &quot;HLY自动化测试团&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: true,&#xd;
		&quot;refCostCenterOID&quot;: null,&#xd;
		&quot;headerTmplateName&quot;: &quot;部门&quot;,&#xd;
		&quot;headerTmplateValue&quot;: &quot;HLY自动化测试团&quot;&#xd;
	}, {&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;6c6a635e-f21f-40b1-9bca-7bdaa9bbfc86&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;showValue&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: true,&#xd;
		&quot;refCostCenterOID&quot;: null,&#xd;
		&quot;headerTmplateName&quot;: &quot;事由&quot;,&#xd;
		&quot;headerTmplateValue&quot;: &quot;自动化日常报销单&quot;&#xd;
	}, {&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;e188de2c-dab7-43e8-9cde-426fa87bc36e&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;showValue&quot;: &quot;自动化测试Admin&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: null,&#xd;
		&quot;refCostCenterOID&quot;: null,&#xd;
		&quot;headerTmplateName&quot;: &quot;审批人&quot;,&#xd;
		&quot;headerTmplateValue&quot;: &quot;自动化测试Admin&quot;&#xd;
	}],&#xd;
	&quot;departmentName&quot;: &quot;HLY自动化测试团&quot;,&#xd;
	&quot;departmentOID&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
	&quot;departmentPath&quot;: &quot;HLY自动化测试团&quot;,&#xd;
	&quot;expenseReportInvoices&quot;: [{&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
		&quot;expenseReportInvoiceOID&quot;: &quot;${expenseReportInvoiceOID_1}&quot;,&#xd;
		&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;invoiceOID&quot;: &quot;${invoiceOID_1}&quot;,&#xd;
		&quot;invoiceView&quot;: {&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_1}&quot;,&#xd;
			&quot;expenseTypeId&quot;: &quot;48375&quot;,&#xd;
			&quot;expenseTypeOID&quot;: &quot;4eb0e9ab-94bc-48ba-b7db-b9c5cefeb20c&quot;,&#xd;
			&quot;expenseTypeName&quot;: &quot;餐补&quot;,&#xd;
			&quot;crossCheckStatus&quot;: null,&#xd;
			&quot;expenseTypeKey&quot;: null,&#xd;
			&quot;expenseTypeIconName&quot;: &quot;mealAllowance&quot;,&#xd;
			&quot;phoneNumber&quot;: null,&#xd;
			&quot;email&quot;: null,&#xd;
			&quot;expenseTypeIconURL&quot;: &quot;http://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//1af2a30d-9719-419b-a7ef-68078462baed/expenseIcon/6fdf86e4-9432-4546-b60b-53ea4ad922a1-mealAllowance.png&quot;,&#xd;
			&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
			&quot;expenseTypeCategoryDTO&quot;: {&#xd;
				&quot;expenseTypeCategoryOID&quot;: &quot;138e5d0c-6ea9-473f-afb7-8733eaf352c1&quot;,&#xd;
				&quot;name&quot;: &quot;费用类型&quot;,&#xd;
				&quot;code&quot;: null&#xd;
			},&#xd;
			&quot;costCenterItemOID&quot;: null,&#xd;
			&quot;costCenterItemName&quot;: null,&#xd;
			&quot;amount&quot;: 500,&#xd;
			&quot;originalAmount&quot;: 500,&#xd;
			&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;userOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
			&quot;mobile&quot;: null,&#xd;
			&quot;employeeId&quot;: null,&#xd;
			&quot;data&quot;: [{&#xd;
				&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
				&quot;name&quot;: &quot;国家&quot;,&#xd;
				&quot;value&quot;: null,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;country&quot;,&#xd;
				&quot;sequence&quot;: 1,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;665a22db-7a70-481f-bd84-b16c8e89e6a0&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: null,&#xd;
				&quot;isDefaultValueConfigurable&quot;: true,&#xd;
				&quot;isCommonField&quot;: false,&#xd;
				&quot;i18n&quot;: null&#xd;
			}],&#xd;
			&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
			&quot;comment&quot;: null,&#xd;
			&quot;warning&quot;: &quot;&quot;,&#xd;
			&quot;overtime&quot;: &quot;N&quot;,&#xd;
			&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
			&quot;createdDate&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
			&quot;attachments&quot;: [],&#xd;
			&quot;withReceipt&quot;: true,&#xd;
			&quot;readonly&quot;: false,&#xd;
			&quot;businessCode&quot;: null,&#xd;
			&quot;createLocation&quot;: null,&#xd;
			&quot;createTime&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
			&quot;rejectType&quot;: null,&#xd;
			&quot;rejectReason&quot;: null,&#xd;
			&quot;approverId&quot;: null,&#xd;
			&quot;approvalStepId&quot;: null,&#xd;
			&quot;approvalOperates&quot;: null,&#xd;
			&quot;approver&quot;: null,&#xd;
			&quot;referenceId&quot;: null,&#xd;
			&quot;unitPrice&quot;: null,&#xd;
			&quot;number&quot;: null,&#xd;
			&quot;receiptFailType&quot;: null,&#xd;
			&quot;receiptFailReason&quot;: null,&#xd;
			&quot;valid&quot;: false,&#xd;
			&quot;receiptID&quot;: null,&#xd;
			&quot;cardSignType&quot;: null,&#xd;
			&quot;nonVATinclusiveAmount&quot;: null,&#xd;
			&quot;taxAmount&quot;: null,&#xd;
			&quot;receiptType&quot;: null,&#xd;
			&quot;receiptTypeNo&quot;: null,&#xd;
			&quot;invoiceCode&quot;: null,&#xd;
			&quot;invoiceNumber&quot;: null,&#xd;
			&quot;invoiceDate&quot;: null,&#xd;
			&quot;priceTaxAmount&quot;: null,&#xd;
			&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
			&quot;receiptGoodsID&quot;: null,&#xd;
			&quot;taxRate&quot;: null,&#xd;
			&quot;checkCode&quot;: null,&#xd;
			&quot;invoiceLabelDTOS&quot;: [],&#xd;
			&quot;invoiceLabels&quot;: [],&#xd;
			&quot;companyOID&quot;: null,&#xd;
			&quot;invoiceInstead&quot;: false,&#xd;
			&quot;invoiceInsteadReason&quot;: null,&#xd;
			&quot;paymentType&quot;: 1001,&#xd;
			&quot;source&quot;: null,&#xd;
			&quot;ownerOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
			&quot;checked&quot;: null,&#xd;
			&quot;createInvoice&quot;: true,&#xd;
			&quot;checkWarning&quot;: null,&#xd;
			&quot;digitalInvoice&quot;: null,&#xd;
			&quot;digitalInvoiceId&quot;: null,&#xd;
			&quot;actualCurrencyRate&quot;: 1,&#xd;
			&quot;originalActualCurrencyRate&quot;: 1,&#xd;
			&quot;companyCurrencyRate&quot;: 1,&#xd;
			&quot;actualCurrencyAmount&quot;: 500,&#xd;
			&quot;baseAmount&quot;: 500,&#xd;
			&quot;updateRate&quot;: false,&#xd;
			&quot;flightNo&quot;: null,&#xd;
			&quot;apportionUsed&quot;: false,&#xd;
			&quot;expenseApportion&quot;: null,&#xd;
			&quot;expenseReportOID&quot;: null,&#xd;
			&quot;amountChanged&quot;: null,&#xd;
			&quot;approvalStatus&quot;: null,&#xd;
			&quot;bankTransactionID&quot;: null,&#xd;
			&quot;expenseCreatedType&quot;: null,&#xd;
			&quot;overDue&quot;: null,&#xd;
			&quot;bankTransactionDetail&quot;: null,&#xd;
			&quot;baseCurrency&quot;: null,&#xd;
			&quot;subsidyRepeatedFlag&quot;: false,&#xd;
			&quot;orderAmount&quot;: 500,&#xd;
			&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
			&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
			&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
			&quot;receiptedStatus&quot;: 0,&#xd;
			&quot;stringCol1&quot;: null,&#xd;
			&quot;stringCol2&quot;: null,&#xd;
			&quot;vatInvoice&quot;: false,&#xd;
			&quot;stringCol3&quot;: null,&#xd;
			&quot;recognized&quot;: false,&#xd;
			&quot;status&quot;: 1000&#xd;
		},&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
		&quot;status&quot;: 1000&#xd;
	}],&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;expenseTypes&quot;: &quot;4eb0e9ab-94bc-48ba-b7db-b9c5cefeb20c&quot;,&#xd;
	&quot;filterFlag&quot;: true,&#xd;
	&quot;forceCount&quot;: 0,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;foreignCurrencyAmount&quot;: 500,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
	&quot;ignoreBudgetWarningFlag&quot;: false,&#xd;
	&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:19:47Z&quot;,&#xd;
	&quot;lastSubmittedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
	&quot;needApproval&quot;: false,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;overtimeCount&quot;: 0,&#xd;
	&quot;personalPaymentAmount&quot;: 500,&#xd;
	&quot;personalPaymentBaseAmount&quot;: 500,&#xd;
	&quot;printFree&quot;: false,&#xd;
	&quot;printable&quot;: true,&#xd;
	&quot;realPaymentAmount&quot;: 500,&#xd;
	&quot;realPaymentBaseAmount&quot;: 500,&#xd;
	&quot;rejectType&quot;: 1000,&#xd;
	&quot;reviewedFlag&quot;: false,&#xd;
	&quot;setOfBooksId&quot;: 971590973727912000,&#xd;
	&quot;splitStatus&quot;: 0,&#xd;
	&quot;status&quot;: 1001,&#xd;
	&quot;statusView&quot;: 1001,&#xd;
	&quot;subCompanyOID&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
	&quot;tenantId&quot;: 971590973585305600,&#xd;
	&quot;title&quot;: &quot;自动化日常报销单&quot;,&#xd;
	&quot;totalAmount&quot;: 500,&#xd;
	&quot;travelStandardValid&quot;: 1001,&#xd;
	&quot;travelStandardWarning&quot;: false,&#xd;
	&quot;type&quot;: 1001,&#xd;
	&quot;withReceiptAmount&quot;: 500,&#xd;
	&quot;withoutReceiptAmount&quot;: 0,&#xd;
	&quot;writeoffFlag&quot;: false,&#xd;
	&quot;warnning&quot;: null,&#xd;
	&quot;loanApplicationOID&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/expense/reports/custom/form/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">entityOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;entityOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登出" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="通用报销单（有费用）" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1522201515000</longProp>
        <longProp name="ThreadGroup.end_time">1522201515000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="模块控制器" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="23750841">工作台</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="170071582">Test Fragment</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单创建" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
	&quot;id&quot;: 8862,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: &quot;&quot;,&#xd;
	&quot;formType&quot;: 3001,&#xd;
	&quot;asSystem&quot;: true,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;2018-04-18T02:35:24Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 48623,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253101,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253102,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;&#xd;
	}, {&#xd;
		&quot;id&quot;: 48624,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253103,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253104,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: null,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1002,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: null,&#xd;
	&quot;companyOID&quot;: &quot;b634aa55-09dd-4f44-9504-4b18ab2d0556&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;form.description&quot;: &quot;{\&quot;enable\&quot;:false,\&quot;en\&quot;:{\&quot;title\&quot;:\&quot;caption\&quot;,\&quot;content\&quot;:\&quot;content\&quot;},\&quot;zh_cn\&quot;:{\&quot;title\&quot;:\&quot;说明文字\&quot;,\&quot;content\&quot;:\&quot;描述内容\&quot;}}&quot;,&#xd;
		&quot;countersignTypeForSubmitter&quot;: &quot;2&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: 971590973585305600,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 48623,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253101,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253102,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;&#xd;
	}, {&#xd;
		&quot;id&quot;: 48624,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253103,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253104,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;currencySame&quot;: false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/draft</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取新建的单据号" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">businessCode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;businessCode&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取报销单OID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseReportOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseReportOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取applicantOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">applicantOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOIDs" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOIDs</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;approverOIDs&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取bizOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">bizOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;bizOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建费用" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;roommateEnabled&quot;: false,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;ownerOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;invoiceOID&quot;: null,&#xd;
	&quot;date&quot;: &quot;2018-05-31T08:04:31.594Z&quot;,&#xd;
	&quot;time&quot;: &quot;2018-05-31T08:04:31.594Z&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;48375&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;4eb0e9ab-94bc-48ba-b7db-b9c5cefeb20c&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;类型&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;no-image&quot;,&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: 500,&#xd;
	&quot;orderAmount&quot;: null,&#xd;
	&quot;orderCurrencyCode&quot;: null,&#xd;
	&quot;originalAmount&quot;: 500,&#xd;
	&quot;firstBringAmount&quot;: 0,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;国家&quot;,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;country&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;665a22db-7a70-481f-bd84-b16c8e89e6a0&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;i18n&quot;: {}&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: null,&#xd;
	&quot;comment&quot;: null,&#xd;
	&quot;createdDate&quot;: &quot;2018-05-31T08:04:32.255Z&quot;,&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: null,&#xd;
	&quot;createTime&quot;: &quot;2018-05-31T08:04:32.255Z&quot;,&#xd;
	&quot;approvalOperateDTOList&quot;: null,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;rejectReason&quot;: null,&#xd;
	&quot;approverId&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: null,&#xd;
	&quot;paymentType&quot;: 1001,&#xd;
	&quot;payByCompany&quot;: false,&#xd;
	&quot;expenseApportion&quot;: [],&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;preCreatedDate&quot;: &quot;2018-05-31T08:04:32.255Z&quot;,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;companyOpenInvoice&quot;: true,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;baseAmount&quot;: 0,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/invoices/expense/report</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="353040032">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取导入费用列表" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;currencyCode&quot;: null,&#xd;
	&quot;applicantOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;expenseTypeOIDStr&quot;: &quot;6f187ea2-4cb9-47c8-b435-d801bb0fde70,7b55faea-1d08-4130-9a50-c0b693f85460,4e1fa9a4-2164-4e27-879f-fb7a420c2f67,0758c494-e3dc-11e7-bb33-143004f3246e,5e243fa9-b3e2-400e-a5d9-14a6ccf7af18,2d2766e3-0ab8-46ea-a8fe-f396d08a2768,56c30403-7d33-45c2-a263-1cf098fa4da2,6a6ad8dd-93f4-4913-befc-c44474c2980d,790cb6a3-e3f5-11e7-bb33-143004f3246e,4eb0e9ab-94bc-48ba-b7db-b9c5cefeb20c,b4b87022-db86-4ef0-96a6-dc796bb790be,9b53c36b-02cb-4804-a51a-6d88a8f278ce,097f75da-e831-40b4-8005-ec203a5e7f73,51281651-61d9-4132-93f3-e8d93e2d2ed6,87107088-2364-4cb2-9c03-ed4259c645e6,a177fc73-8ae1-4357-84fe-8aacc39b84f1,8cadd856-e0a9-11e7-86d8-6c92bf4712fc,3740a614-7be3-4f3d-aafe-3bf2990f8863,d92dbf2e-760f-42be-9543-12b1a6114c98,d96b0a4d-7414-11e6-9639-00ffa3fb4c67,0ccbff20-0306-11e7-92ed-00163e000c55,96ef29aa-7414-11e6-9639-00ffa3fb4c67,b6f6d711-0735-47e0-925b-55fc8eb60d85,45931126-b55f-4bf4-9855-835c7206461f,4897fa2b-85de-4cd9-9a17-6c505c646437,e095d6e4-782c-46c3-bcc4-1047ca08ec1e,33e2bc72-3a60-4e2f-ab3c-9b4e8d71ea10,6e1d4075-37d1-463e-9b6f-c8149a19684e,a1147cc3-92b4-4bd6-83f9-273ebd93e111,a97a0627-bdbe-11e6-9ff7-705a0fcb9108,a1147cc3-92b4-4bd6-83f9-273ebd93ecc3,53045a22-0519-43fa-854e-f11e4e8b5893,0ce165bc-c688-11e6-923e-705a0fcb9108,fcf5878d-0857-4c7e-8350-b0faded4fb9e,4ed60234-f1c6-11e6-8dea-00163e000c55,0ed3d670-fa19-480b-a974-04ca7570da47,5d4f3a8e-bbf3-40bf-bd01-4ce53c040af9,a3eebf8e-74e7-11e6-9639-00ffa3fb4c67,ae8981d2-74e7-11e6-9639-00ffa3fb4c67,8ccc52d3-3282-11e8-9f07-7cd30ab8a58e&quot;,&#xd;
	&quot;expenseReportOID&quot;: &quot;e3332d72-da26-4fc6-969e-1dbe0819f404&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/invoices/currency</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取费用" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOids</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$[0].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="导入费用" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;expenseReportOID&quot;:&quot;${expenseReportOID}&quot;,&quot;invoiceOIDs&quot;:[&quot;${invoiceOids}&quot;]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices/import</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="353040032">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建费用（金额为0）" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&#xd;
{&quot;roommateEnabled&quot;:false,&quot;updateRate&quot;:true,&quot;ownerOID&quot;:&quot;561fc55d-f8e5-410f-bb1a-597bfa1de2e0&quot;,&quot;invoiceOID&quot;:null,&quot;date&quot;:&quot;2018-03-26T09:42:19.400Z&quot;,&quot;time&quot;:&quot;2018-03-26T09:42:19.400Z&quot;,&quot;expenseTypeId&quot;:&quot;198&quot;,&quot;expenseTypeOID&quot;:&quot;02338fdd-ac3b-4aae-80b2-88d21ecaaf62&quot;,&quot;expenseTypeName&quot;:&quot;类型&quot;,&quot;expenseTypeIconName&quot;:&quot;no-image&quot;,&quot;costCenterItemOID&quot;:null,&quot;costCenterItemName&quot;:null,&quot;amount&quot;:0,&quot;originalAmount&quot;:0,&quot;firstBringAmount&quot;:0,&quot;currencyCode&quot;:&quot;CNY&quot;,&quot;invoiceCurrencyCode&quot;:&quot;CNY&quot;,&quot;userOID&quot;:null,&quot;data&quot;:[{&quot;fieldType&quot;:&quot;GPS&quot;,&quot;name&quot;:&quot;出发地&quot;,&quot;value&quot;:null,&quot;codeName&quot;:null,&quot;messageKey&quot;:&quot;departure.location&quot;,&quot;sequence&quot;:0,&quot;customEnumerationDTO&quot;:null,&quot;customEnumerationOID&quot;:null,&quot;printHide&quot;:null,&quot;required&quot;:null,&quot;showOnList&quot;:null,&quot;fieldOID&quot;:&quot;91311f0d-7c34-11e7-9f07-7cd30ab8a58e&quot;,&quot;editable&quot;:true,&quot;i18n&quot;:{&quot;name&quot;:[{&quot;language&quot;:&quot;en&quot;,&quot;value&quot;:&quot;Departure&quot;},{&quot;language&quot;:&quot;zh_cn&quot;,&quot;value&quot;:&quot;出发地&quot;}]}},{&quot;fieldType&quot;:&quot;GPS&quot;,&quot;name&quot;:&quot;目的地&quot;,&quot;value&quot;:null,&quot;codeName&quot;:null,&quot;messageKey&quot;:&quot;destination.location&quot;,&quot;sequence&quot;:1,&quot;customEnumerationDTO&quot;:null,&quot;customEnumerationOID&quot;:null,&quot;printHide&quot;:null,&quot;required&quot;:null,&quot;showOnList&quot;:null,&quot;fieldOID&quot;:&quot;91311f3f-7c34-11e7-9f07-7cd30ab8a58e&quot;,&quot;editable&quot;:true,&quot;i18n&quot;:{&quot;name&quot;:[{&quot;language&quot;:&quot;en&quot;,&quot;value&quot;:&quot;Arrival&quot;},{&quot;language&quot;:&quot;zh_cn&quot;,&quot;value&quot;:&quot;目的地&quot;}]}},{&quot;fieldType&quot;:&quot;LONG&quot;,&quot;name&quot;:&quot;出差天数&quot;,&quot;value&quot;:null,&quot;codeName&quot;:null,&quot;messageKey&quot;:null,&quot;sequence&quot;:2,&quot;customEnumerationDTO&quot;:null,&quot;customEnumerationOID&quot;:null,&quot;printHide&quot;:null,&quot;required&quot;:null,&quot;showOnList&quot;:null,&quot;fieldOID&quot;:&quot;ea56a0e4-9471-4422-82fa-48be7c65951c&quot;,&quot;editable&quot;:true,&quot;i18n&quot;:{&quot;name&quot;:[{&quot;language&quot;:&quot;en&quot;,&quot;value&quot;:&quot;出差天数&quot;},{&quot;language&quot;:&quot;zh_cn&quot;,&quot;value&quot;:&quot;出差天数&quot;}]}}],&quot;invoiceStatus&quot;:null,&quot;comment&quot;:null,&quot;createdDate&quot;:&quot;2018-03-26T09:42:19.679Z&quot;,&quot;attachments&quot;:[],&quot;withReceipt&quot;:true,&quot;readonly&quot;:false,&quot;businessCode&quot;:null,&quot;createLocation&quot;:null,&quot;createTime&quot;:&quot;2018-03-26T09:42:19.679Z&quot;,&quot;approvalOperateDTOList&quot;:null,&quot;rejectType&quot;:null,&quot;rejectReason&quot;:null,&quot;approverId&quot;:null,&quot;approvalStepId&quot;:null,&quot;recognized&quot;:false,&quot;invoiceInstead&quot;:false,&quot;invoiceInsteadReason&quot;:null,&quot;paymentType&quot;:1001,&quot;payByCompany&quot;:false,&quot;expenseApportion&quot;:[],&quot;vatInvoiceCurrencyCode&quot;:null,&quot;preCreatedDate&quot;:&quot;2018-03-26T09:42:19.679Z&quot;,&quot;taxRate&quot;:null,&quot;companyOpenInvoice&quot;:true,&quot;receiptTypeNo&quot;:null,&quot;receiptType&quot;:null,&quot;invoiceCode&quot;:null,&quot;invoiceNumber&quot;:null,&quot;checkCode&quot;:null,&quot;nonVATinclusiveAmount&quot;:null,&quot;taxAmount&quot;:null,&quot;priceTaxAmount&quot;:null,&quot;invoiceDate&quot;:null,&quot;expenseReportOID&quot;:&quot;${data2}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/invoices/expense/report</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1896111661">{&quot;success&quot;:false,&quot;code&quot;:&quot;0000&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="单据删除费用" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/remove/invoice/${expenseReportOID}/${invoiceOids}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单详情（旧）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取费用信息" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID_1;expenseReportInvoiceOID_1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[0].invoiceOID;$.expenseReportInvoices[0].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="计算费用合计" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&#xd;
[&quot;${invoiceOID_1}&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/invoices/summary/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取未还清借款的申请单" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/loan/application/statusIn/my?applicantOID=${userOID}&amp;page=0&amp;size=100&amp;status=1005&amp;status=1006</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取默认借款单" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/loan/application/verification/my/default?applicantOID=${userOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单提交" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;applicantName&quot;: &quot;自动化测试Admin&quot;,&#xd;
	&quot;applicantOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;approverOIDs&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;baseCurrencyAmount&quot;: 500,&#xd;
	&quot;baseCurrencyRealPayAmount&quot;: 500,&#xd;
	&quot;businessCode&quot;: &quot;${businessCode}&quot;,&#xd;
	&quot;companyOID&quot;: &quot;b634aa55-09dd-4f44-9504-4b18ab2d0556&quot;,&#xd;
	&quot;corporationOID&quot;: &quot;ab577d17-9a43-4d53-90b0-a8fa2cfbfab9&quot;,&#xd;
	&quot;createdBy&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
	&quot;createdName&quot;: &quot;自动化测试Admin&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;currencyCodeName&quot;: &quot;人民币&quot;,&#xd;
	&quot;currencySame&quot;: false,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;67ff9fab-a4d6-4deb-990c-fdfd5b3b299e&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;showValue&quot;: &quot;HLY自动化测试团&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: true,&#xd;
		&quot;refCostCenterOID&quot;: null,&#xd;
		&quot;headerTmplateName&quot;: &quot;部门&quot;,&#xd;
		&quot;headerTmplateValue&quot;: &quot;HLY自动化测试团&quot;&#xd;
	}, {&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;6c6a635e-f21f-40b1-9bca-7bdaa9bbfc86&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;showValue&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: true,&#xd;
		&quot;refCostCenterOID&quot;: null,&#xd;
		&quot;headerTmplateName&quot;: &quot;事由&quot;,&#xd;
		&quot;headerTmplateValue&quot;: &quot;自动化日常报销单&quot;&#xd;
	}, {&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;e188de2c-dab7-43e8-9cde-426fa87bc36e&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;showValue&quot;: &quot;自动化测试Admin&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: null,&#xd;
		&quot;refCostCenterOID&quot;: null,&#xd;
		&quot;headerTmplateName&quot;: &quot;审批人&quot;,&#xd;
		&quot;headerTmplateValue&quot;: &quot;自动化测试Admin&quot;&#xd;
	}],&#xd;
	&quot;departmentName&quot;: &quot;HLY自动化测试团&quot;,&#xd;
	&quot;departmentOID&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
	&quot;departmentPath&quot;: &quot;HLY自动化测试团&quot;,&#xd;
	&quot;expenseReportInvoices&quot;: [{&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
		&quot;expenseReportInvoiceOID&quot;: &quot;${expenseReportInvoiceOID_1}&quot;,&#xd;
		&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;invoiceOID&quot;: &quot;${invoiceOID_1}&quot;,&#xd;
		&quot;invoiceView&quot;: {&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_1}&quot;,&#xd;
			&quot;expenseTypeId&quot;: &quot;48375&quot;,&#xd;
			&quot;expenseTypeOID&quot;: &quot;4eb0e9ab-94bc-48ba-b7db-b9c5cefeb20c&quot;,&#xd;
			&quot;expenseTypeName&quot;: &quot;餐补&quot;,&#xd;
			&quot;crossCheckStatus&quot;: null,&#xd;
			&quot;expenseTypeKey&quot;: null,&#xd;
			&quot;expenseTypeIconName&quot;: &quot;mealAllowance&quot;,&#xd;
			&quot;phoneNumber&quot;: null,&#xd;
			&quot;email&quot;: null,&#xd;
			&quot;expenseTypeIconURL&quot;: &quot;http://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//1af2a30d-9719-419b-a7ef-68078462baed/expenseIcon/6fdf86e4-9432-4546-b60b-53ea4ad922a1-mealAllowance.png&quot;,&#xd;
			&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
			&quot;expenseTypeCategoryDTO&quot;: {&#xd;
				&quot;expenseTypeCategoryOID&quot;: &quot;138e5d0c-6ea9-473f-afb7-8733eaf352c1&quot;,&#xd;
				&quot;name&quot;: &quot;费用类型&quot;,&#xd;
				&quot;code&quot;: null&#xd;
			},&#xd;
			&quot;costCenterItemOID&quot;: null,&#xd;
			&quot;costCenterItemName&quot;: null,&#xd;
			&quot;amount&quot;: 500,&#xd;
			&quot;originalAmount&quot;: 500,&#xd;
			&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;userOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
			&quot;mobile&quot;: null,&#xd;
			&quot;employeeId&quot;: null,&#xd;
			&quot;data&quot;: [{&#xd;
				&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
				&quot;name&quot;: &quot;国家&quot;,&#xd;
				&quot;value&quot;: null,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;country&quot;,&#xd;
				&quot;sequence&quot;: 1,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;665a22db-7a70-481f-bd84-b16c8e89e6a0&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: null,&#xd;
				&quot;isDefaultValueConfigurable&quot;: true,&#xd;
				&quot;isCommonField&quot;: false,&#xd;
				&quot;i18n&quot;: null&#xd;
			}],&#xd;
			&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
			&quot;comment&quot;: null,&#xd;
			&quot;warning&quot;: &quot;&quot;,&#xd;
			&quot;overtime&quot;: &quot;N&quot;,&#xd;
			&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
			&quot;createdDate&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
			&quot;attachments&quot;: [],&#xd;
			&quot;withReceipt&quot;: true,&#xd;
			&quot;readonly&quot;: false,&#xd;
			&quot;businessCode&quot;: null,&#xd;
			&quot;createLocation&quot;: null,&#xd;
			&quot;createTime&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
			&quot;rejectType&quot;: null,&#xd;
			&quot;rejectReason&quot;: null,&#xd;
			&quot;approverId&quot;: null,&#xd;
			&quot;approvalStepId&quot;: null,&#xd;
			&quot;approvalOperates&quot;: null,&#xd;
			&quot;approver&quot;: null,&#xd;
			&quot;referenceId&quot;: null,&#xd;
			&quot;unitPrice&quot;: null,&#xd;
			&quot;number&quot;: null,&#xd;
			&quot;receiptFailType&quot;: null,&#xd;
			&quot;receiptFailReason&quot;: null,&#xd;
			&quot;valid&quot;: false,&#xd;
			&quot;receiptID&quot;: null,&#xd;
			&quot;cardSignType&quot;: null,&#xd;
			&quot;nonVATinclusiveAmount&quot;: null,&#xd;
			&quot;taxAmount&quot;: null,&#xd;
			&quot;receiptType&quot;: null,&#xd;
			&quot;receiptTypeNo&quot;: null,&#xd;
			&quot;invoiceCode&quot;: null,&#xd;
			&quot;invoiceNumber&quot;: null,&#xd;
			&quot;invoiceDate&quot;: null,&#xd;
			&quot;priceTaxAmount&quot;: null,&#xd;
			&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
			&quot;receiptGoodsID&quot;: null,&#xd;
			&quot;taxRate&quot;: null,&#xd;
			&quot;checkCode&quot;: null,&#xd;
			&quot;invoiceLabelDTOS&quot;: [],&#xd;
			&quot;invoiceLabels&quot;: [],&#xd;
			&quot;companyOID&quot;: null,&#xd;
			&quot;invoiceInstead&quot;: false,&#xd;
			&quot;invoiceInsteadReason&quot;: null,&#xd;
			&quot;paymentType&quot;: 1001,&#xd;
			&quot;source&quot;: null,&#xd;
			&quot;ownerOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
			&quot;checked&quot;: null,&#xd;
			&quot;createInvoice&quot;: true,&#xd;
			&quot;checkWarning&quot;: null,&#xd;
			&quot;digitalInvoice&quot;: null,&#xd;
			&quot;digitalInvoiceId&quot;: null,&#xd;
			&quot;actualCurrencyRate&quot;: 1,&#xd;
			&quot;originalActualCurrencyRate&quot;: 1,&#xd;
			&quot;companyCurrencyRate&quot;: 1,&#xd;
			&quot;actualCurrencyAmount&quot;: 500,&#xd;
			&quot;baseAmount&quot;: 500,&#xd;
			&quot;updateRate&quot;: false,&#xd;
			&quot;flightNo&quot;: null,&#xd;
			&quot;apportionUsed&quot;: false,&#xd;
			&quot;expenseApportion&quot;: null,&#xd;
			&quot;expenseReportOID&quot;: null,&#xd;
			&quot;amountChanged&quot;: null,&#xd;
			&quot;approvalStatus&quot;: null,&#xd;
			&quot;bankTransactionID&quot;: null,&#xd;
			&quot;expenseCreatedType&quot;: null,&#xd;
			&quot;overDue&quot;: null,&#xd;
			&quot;bankTransactionDetail&quot;: null,&#xd;
			&quot;baseCurrency&quot;: null,&#xd;
			&quot;subsidyRepeatedFlag&quot;: false,&#xd;
			&quot;orderAmount&quot;: 500,&#xd;
			&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
			&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
			&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
			&quot;receiptedStatus&quot;: 0,&#xd;
			&quot;stringCol1&quot;: null,&#xd;
			&quot;stringCol2&quot;: null,&#xd;
			&quot;vatInvoice&quot;: false,&#xd;
			&quot;stringCol3&quot;: null,&#xd;
			&quot;recognized&quot;: false,&#xd;
			&quot;status&quot;: 1000&#xd;
		},&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
		&quot;status&quot;: 1000&#xd;
	}],&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;expenseTypes&quot;: &quot;4eb0e9ab-94bc-48ba-b7db-b9c5cefeb20c&quot;,&#xd;
	&quot;filterFlag&quot;: true,&#xd;
	&quot;forceCount&quot;: 0,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;foreignCurrencyAmount&quot;: 500,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
	&quot;ignoreBudgetWarningFlag&quot;: false,&#xd;
	&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:19:47Z&quot;,&#xd;
	&quot;lastSubmittedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
	&quot;needApproval&quot;: false,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;overtimeCount&quot;: 0,&#xd;
	&quot;personalPaymentAmount&quot;: 500,&#xd;
	&quot;personalPaymentBaseAmount&quot;: 500,&#xd;
	&quot;printFree&quot;: false,&#xd;
	&quot;printable&quot;: true,&#xd;
	&quot;realPaymentAmount&quot;: 500,&#xd;
	&quot;realPaymentBaseAmount&quot;: 500,&#xd;
	&quot;rejectType&quot;: 1000,&#xd;
	&quot;reviewedFlag&quot;: false,&#xd;
	&quot;setOfBooksId&quot;: 971590973727912000,&#xd;
	&quot;splitStatus&quot;: 0,&#xd;
	&quot;status&quot;: 1001,&#xd;
	&quot;statusView&quot;: 1001,&#xd;
	&quot;subCompanyOID&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
	&quot;tenantId&quot;: 971590973585305600,&#xd;
	&quot;title&quot;: &quot;自动化日常报销单&quot;,&#xd;
	&quot;totalAmount&quot;: 500,&#xd;
	&quot;travelStandardValid&quot;: 1001,&#xd;
	&quot;travelStandardWarning&quot;: false,&#xd;
	&quot;type&quot;: 1001,&#xd;
	&quot;withReceiptAmount&quot;: 500,&#xd;
	&quot;withoutReceiptAmount&quot;: 0,&#xd;
	&quot;writeoffFlag&quot;: false,&#xd;
	&quot;warnning&quot;: null,&#xd;
	&quot;loanApplicationOID&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/expense/reports/custom/form/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">entityOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;entityOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="撤回报销单(报销单类型错误)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${expenseReportOID}&quot;,&quot;entityType&quot;:1111}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/approvals/withdraw</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1043720205">&quot;failNum&quot;:1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="撤回报销单(报销单entityOID不正确)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${applicantOID}&quot;,&quot;entityType&quot;:1002}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/approvals/withdraw</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1043720205">&quot;failNum&quot;:1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="撤回报销单" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${expenseReportOID}&quot;,&quot;entityType&quot;:1002}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/approvals/withdraw</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="282682134">{&quot;successNum&quot;:1,&quot;failNum&quot;:0,&quot;failReason&quot;:{}}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单查询（根据报销单号查询）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/search/my?businessCode=${businessCode}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1947514396">&quot;businessCode&quot;:&quot;${businessCode}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单详情" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1947514396">&quot;businessCode&quot;:&quot;${businessCode}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登出" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="删除报销单" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1522201515000</longProp>
        <longProp name="ThreadGroup.end_time">1522201515000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="模块控制器" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="23750841">工作台</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="170071582">Test Fragment</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单创建" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
	&quot;id&quot;: 8862,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: &quot;&quot;,&#xd;
	&quot;formType&quot;: 3001,&#xd;
	&quot;asSystem&quot;: true,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;2018-04-18T02:35:24Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 48623,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253101,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253102,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;&#xd;
	}, {&#xd;
		&quot;id&quot;: 48624,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253103,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253104,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: null,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1002,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: null,&#xd;
	&quot;companyOID&quot;: &quot;b634aa55-09dd-4f44-9504-4b18ab2d0556&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;form.description&quot;: &quot;{\&quot;enable\&quot;:false,\&quot;en\&quot;:{\&quot;title\&quot;:\&quot;caption\&quot;,\&quot;content\&quot;:\&quot;content\&quot;},\&quot;zh_cn\&quot;:{\&quot;title\&quot;:\&quot;说明文字\&quot;,\&quot;content\&quot;:\&quot;描述内容\&quot;}}&quot;,&#xd;
		&quot;countersignTypeForSubmitter&quot;: &quot;2&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: 971590973585305600,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 48623,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253101,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253102,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;&#xd;
	}, {&#xd;
		&quot;id&quot;: 48624,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253103,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253104,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;currencySame&quot;: false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/draft</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取新建的单据号" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">businessCode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;businessCode&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取报销单OID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseReportOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseReportOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取applicantOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">applicantOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOIDs" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOIDs</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;approverOIDs&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取bizOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">bizOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;bizOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建费用" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;roommateEnabled&quot;: false,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;ownerOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;invoiceOID&quot;: null,&#xd;
	&quot;date&quot;: &quot;2018-05-31T08:04:31.594Z&quot;,&#xd;
	&quot;time&quot;: &quot;2018-05-31T08:04:31.594Z&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;48375&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;4eb0e9ab-94bc-48ba-b7db-b9c5cefeb20c&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;类型&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;no-image&quot;,&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: 500,&#xd;
	&quot;orderAmount&quot;: null,&#xd;
	&quot;orderCurrencyCode&quot;: null,&#xd;
	&quot;originalAmount&quot;: 500,&#xd;
	&quot;firstBringAmount&quot;: 0,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;国家&quot;,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;country&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;665a22db-7a70-481f-bd84-b16c8e89e6a0&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;i18n&quot;: {}&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: null,&#xd;
	&quot;comment&quot;: null,&#xd;
	&quot;createdDate&quot;: &quot;2018-05-31T08:04:32.255Z&quot;,&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: null,&#xd;
	&quot;createTime&quot;: &quot;2018-05-31T08:04:32.255Z&quot;,&#xd;
	&quot;approvalOperateDTOList&quot;: null,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;rejectReason&quot;: null,&#xd;
	&quot;approverId&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: null,&#xd;
	&quot;paymentType&quot;: 1001,&#xd;
	&quot;payByCompany&quot;: false,&#xd;
	&quot;expenseApportion&quot;: [],&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;preCreatedDate&quot;: &quot;2018-05-31T08:04:32.255Z&quot;,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;companyOpenInvoice&quot;: true,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;baseAmount&quot;: 0,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/invoices/expense/report</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="353040032">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除报销单" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登出" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="查询报销单" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1522293022000</longProp>
        <longProp name="ThreadGroup.end_time">1522293022000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="模块控制器" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="23750841">工作台</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="170071582">Test Fragment</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单查询（无参）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/search/my</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单查询（状态为编辑中）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/search/my?rejectType=1000&amp;rejectType=1001&amp;status=1001</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="断言持续时间" enabled="true">
            <stringProp name="DurationAssertion.duration">5000</stringProp>
          </DurationAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-749828020">&quot;status&quot;:1001</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单查询（状态为审批中）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/search/my?status=1002</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="断言持续时间" enabled="true">
            <stringProp name="DurationAssertion.duration">5000</stringProp>
          </DurationAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-749828019">&quot;status&quot;:1002</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单查询（状态为已驳回）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/search/my?rejectType=1002&amp;status=1001</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="断言持续时间" enabled="true">
            <stringProp name="DurationAssertion.duration">5000</stringProp>
          </DurationAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-749828020">&quot;status&quot;:1001</stringProp>
              <stringProp name="2030560660">&quot;rejectType&quot;:1002</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单查询（状态为审批通过）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/search/my?status=1003</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="断言持续时间" enabled="true">
            <stringProp name="DurationAssertion.duration">5000</stringProp>
          </DurationAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-749828018">&quot;status&quot;:1003</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单查询（状态为开票通过）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/search/my?status=1007</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="断言持续时间" enabled="true">
            <stringProp name="DurationAssertion.duration">5000</stringProp>
          </DurationAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-749828014">&quot;status&quot;:1007</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单查询（状态为审核通过）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/search/my?status=1004</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="断言持续时间" enabled="true">
            <stringProp name="DurationAssertion.duration">5000</stringProp>
          </DurationAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-749828017">&quot;status&quot;:1004</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单查询（状态为审核驳回）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/search/my?status=1001&amp;rejectType=1003</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="断言持续时间" enabled="true">
            <stringProp name="DurationAssertion.duration">5000</stringProp>
          </DurationAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-749828020">&quot;status&quot;:1001</stringProp>
              <stringProp name="2030560661">&quot;rejectType&quot;:1003</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单查询（状态为开票驳回）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/search/my?status=1001&amp;rejectType=1004</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="断言持续时间" enabled="true">
            <stringProp name="DurationAssertion.duration">5000</stringProp>
          </DurationAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-749828020">&quot;status&quot;:1001</stringProp>
              <stringProp name="2030560662">&quot;rejectType&quot;:1004</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单查询（状态为已付款）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/search/my?status=1005</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="断言持续时间" enabled="true">
            <stringProp name="DurationAssertion.duration">5000</stringProp>
          </DurationAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-749828016">&quot;status&quot;:1005</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单查询（状态为付款中）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/search/my?status=1008</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="断言持续时间" enabled="true">
            <stringProp name="DurationAssertion.duration">5000</stringProp>
          </DurationAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-749828013">&quot;status&quot;:1008</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登出" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="工作台" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
