<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.3 r1808647">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${serviceURL}</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
        <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="protocol" elementType="Argument">
            <stringProp name="Argument.name">protocol</stringProp>
            <stringProp name="Argument.value">http</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="serviceURL" elementType="Argument">
            <stringProp name="Argument.name">serviceURL</stringProp>
            <stringProp name="Argument.value">apistage.huilianyi.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DBserver" elementType="Argument">
            <stringProp name="Argument.name">DBserver</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DBport" elementType="Argument">
            <stringProp name="Argument.name">DBport</stringProp>
            <stringProp name="Argument.value">9876</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Authorization" elementType="Argument">
            <stringProp name="Argument.name">Authorization</stringProp>
            <stringProp name="Argument.value">Basic QXJ0ZW1pc0FwcDpuTENud2RJaGl6V2J5a0h5dVpNNlRwUURkN0t3SzlJWERLOExHc2E3U09X</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="username" elementType="Argument">
            <stringProp name="Argument.name">username</stringProp>
            <stringProp name="Argument.value">13700000000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="password" elementType="Argument">
            <stringProp name="Argument.name">password</stringProp>
            <stringProp name="Argument.value">hly123</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="page" elementType="Argument">
            <stringProp name="Argument.name">page</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pagesize" elementType="Argument">
            <stringProp name="Argument.name">pagesize</stringProp>
            <stringProp name="Argument.value">10</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="month" elementType="Argument">
            <stringProp name="Argument.name">month</stringProp>
            <stringProp name="Argument.value">${__time(yyyyMM,time)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="applicantOID" elementType="Argument">
            <stringProp name="Argument.name">applicantOID</stringProp>
            <stringProp name="Argument.value">a3600170-c212-48d2-a55b-80ac3e292871</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="businessCode" elementType="Argument">
            <stringProp name="Argument.name">businessCode</stringProp>
            <stringProp name="Argument.value">ER00039150</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="businessCode1" elementType="Argument">
            <stringProp name="Argument.name">businessCode1</stringProp>
            <stringProp name="Argument.value">LA00020740</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="formOIDs" elementType="Argument">
            <stringProp name="Argument.name">formOIDs</stringProp>
            <stringProp name="Argument.value">dee6d7fb-cca4-4c42-9d58-df22a29ad434</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="formOID" elementType="Argument">
            <stringProp name="Argument.name">formOID</stringProp>
            <stringProp name="Argument.value">8e43a1cf-bfb8-4765-bcb3-2ac5742e2610</stringProp>
            <stringProp name="Argument.desc">借款单</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery">Select 1</stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">artemis</stringProp>
        <stringProp name="dbUrl">jdbc:mysql://${DBserver}:${DBport}/artemis</stringProp>
        <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">123456Ms3</stringProp>
        <stringProp name="poolMax">10</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">artemis</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
        <boolProp name="displayJMeterProperties">false</boolProp>
        <boolProp name="displayJMeterVariables">true</boolProp>
        <boolProp name="displaySamplerProperties">true</boolProp>
        <boolProp name="displaySystemProperties">false</boolProp>
      </DebugPostProcessor>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment" enabled="true"/>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">${Authorization}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取token" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${username}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${password}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="scope" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">write</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">scope</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${serviceURL}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/oauth/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="accessToken" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">accessToken</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="单据操作" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1522033928000</longProp>
        <longProp name="ThreadGroup.end_time">1522033928000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="模块控制器" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="23750841">工作台</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="170071582">Test Fragment</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
            <elementProp name="Content-Type" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="Accept" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="单据导出（起始日期，结束日期不为空）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;formOIDs&quot;:[],&quot;beginDate&quot;:&quot;2018-06-05 00:00:00&quot;,&quot;endDate&quot;:&quot;2018-07-05 23:59:59&quot;,&quot;searchCorporations&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/reimbursement/batch/detail/export/expensReportOrApplication</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="单据导出（无参）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/reimbursement/batch/detail/export/expensReportOrApplication</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="838369774">&quot;message&quot;:&quot;起始日期、结束日期不能为空&quot;,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="单据导出（单据类型为报销单）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;formOIDs&quot;:[&quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;],&quot;beginDate&quot;:&quot;2018-07-05 00:00:00&quot;,&quot;endDate&quot;:&quot;2018-07-05 23:59:59&quot;,&quot;searchCorporations&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/reimbursement/batch/detail/export/expensReportOrApplication</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="单据导出（单据类型为借款单）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;formOIDs&quot;:[&quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;],&quot;beginDate&quot;:&quot;2018-07-05 00:00:00&quot;,&quot;endDate&quot;:&quot;2018-07-05 23:59:59&quot;,&quot;searchCorporations&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/reimbursement/batch/detail/export/expensReportOrApplication</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="单据导出（状态为审批中）" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/reimbursement/batch/detail/export/expensReportOrApplication?beginDate=2018-03-01+00:00:00&amp;endDate=2018-03-31+23:59:59&amp;entityType=10021008&amp;status=submitted</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="单据导出（状态为已通过）" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/reimbursement/batch/detail/export/expensReportOrApplication?beginDate=2018-03-01+00:00:00&amp;endDate=2018-03-31+23:59:59&amp;entityType=10021008&amp;status=approval_pass</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="单据导出（状态为已驳回）" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/reimbursement/batch/detail/export/expensReportOrApplication?beginDate=2018-03-01+00:00:00&amp;endDate=2018-03-31+23:59:59&amp;entityType=10021008&amp;status=approval_reject</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="单据导出（状态为审核通过）" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/reimbursement/batch/detail/export/expensReportOrApplication?beginDate=2018-03-01+00:00:00&amp;endDate=2018-03-31+23:59:59&amp;entityType=10021008&amp;status=audit_pass</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="单据导出（状态为审核驳回）" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/reimbursement/batch/detail/export/expensReportOrApplication?beginDate=2018-03-01+00:00:00&amp;endDate=2018-03-31+23:59:59&amp;entityType=10021008&amp;status=audit_reject</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="单据导出（状态为付款中）" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/reimbursement/batch/detail/export/expensReportOrApplication?beginDate=2018-03-01+00:00:00&amp;endDate=2018-03-31+23:59:59&amp;entityType=10021008&amp;status=payment_in_process</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="单据导出（状态为已付款）" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/reimbursement/batch/detail/export/expensReportOrApplication?beginDate=2018-03-01+00:00:00&amp;endDate=2018-03-31+23:59:59&amp;entityType=10021008&amp;status=finance_loan</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="单据导出（状态为还款中）" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/reimbursement/batch/detail/export/expensReportOrApplication?beginDate=2018-03-01+00:00:00&amp;endDate=2018-03-31+23:59:59&amp;entityType=10021008&amp;status=paid_in_process</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="单据导出（状态为已核销）" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/reimbursement/batch/detail/export/expensReportOrApplication?beginDate=2018-03-01+00:00:00&amp;endDate=2018-03-31+23:59:59&amp;entityType=10021008&amp;status=status=paid_finish</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="单据导出（单据ID不为空）" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/reimbursement/batch/detail/export/expensReportOrApplication?beginDate=2018-03-01+00:00:00&amp;endDate=2018-03-31+23:59:59&amp;entityType=10021008&amp;businessCode=${businessCode}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="单据导出（员工不为空）" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/reimbursement/batch/detail/export/expensReportOrApplication?beginDate=2018-03-01+00:00:00&amp;endDate=2018-03-31+23:59:59&amp;entityType=10021008&amp;userOID=${applicantOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="单据导出（表单oid不为空）" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/reimbursement/batch/detail/export/expensReportOrApplication?beginDate=2018-03-01+00:00:00&amp;endDate=2018-03-31+23:59:59&amp;entityType=10021008&amp;formOIDs=${formOIDs}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登出" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="报销单审核通过" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <longProp name="ThreadGroup.start_time">1522048673000</longProp>
        <longProp name="ThreadGroup.end_time">1522048673000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="模块控制器" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="23750841">工作台</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="170071582">Test Fragment</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单创建" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
	&quot;id&quot;: 8862,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: &quot;&quot;,&#xd;
	&quot;formType&quot;: 3001,&#xd;
	&quot;asSystem&quot;: true,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;2018-04-18T02:35:24Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 48623,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253101,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253102,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;&#xd;
	}, {&#xd;
		&quot;id&quot;: 48624,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253103,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253104,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: null,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1002,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: null,&#xd;
	&quot;companyOID&quot;: &quot;b634aa55-09dd-4f44-9504-4b18ab2d0556&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;form.description&quot;: &quot;{\&quot;enable\&quot;:false,\&quot;en\&quot;:{\&quot;title\&quot;:\&quot;caption\&quot;,\&quot;content\&quot;:\&quot;content\&quot;},\&quot;zh_cn\&quot;:{\&quot;title\&quot;:\&quot;说明文字\&quot;,\&quot;content\&quot;:\&quot;描述内容\&quot;}}&quot;,&#xd;
		&quot;countersignTypeForSubmitter&quot;: &quot;2&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: 971590973585305600,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 48623,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253101,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253102,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;&#xd;
	}, {&#xd;
		&quot;id&quot;: 48624,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253103,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253104,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;currencySame&quot;: false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/draft</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取新建的单据号" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">businessCode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;businessCode&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取报销单OID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseReportOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseReportOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取applicantOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">applicantOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOIDs" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOIDs</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;approverOIDs&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取bizOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">bizOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;bizOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建费用" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;roommateEnabled&quot;: false,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;ownerOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;invoiceOID&quot;: null,&#xd;
	&quot;date&quot;: &quot;2018-05-31T08:04:31.594Z&quot;,&#xd;
	&quot;time&quot;: &quot;2018-05-31T08:04:31.594Z&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;48375&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;4eb0e9ab-94bc-48ba-b7db-b9c5cefeb20c&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;类型&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;no-image&quot;,&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: 500,&#xd;
	&quot;orderAmount&quot;: null,&#xd;
	&quot;orderCurrencyCode&quot;: null,&#xd;
	&quot;originalAmount&quot;: 500,&#xd;
	&quot;firstBringAmount&quot;: 0,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;国家&quot;,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;country&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;665a22db-7a70-481f-bd84-b16c8e89e6a0&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;i18n&quot;: {}&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: null,&#xd;
	&quot;comment&quot;: null,&#xd;
	&quot;createdDate&quot;: &quot;2018-05-31T08:04:32.255Z&quot;,&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: null,&#xd;
	&quot;createTime&quot;: &quot;2018-05-31T08:04:32.255Z&quot;,&#xd;
	&quot;approvalOperateDTOList&quot;: null,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;rejectReason&quot;: null,&#xd;
	&quot;approverId&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: null,&#xd;
	&quot;paymentType&quot;: 1001,&#xd;
	&quot;payByCompany&quot;: false,&#xd;
	&quot;expenseApportion&quot;: [],&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;preCreatedDate&quot;: &quot;2018-05-31T08:04:32.255Z&quot;,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;companyOpenInvoice&quot;: true,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;baseAmount&quot;: 0,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/invoices/expense/report</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="353040032">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单详情（旧）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID_1;expenseReportInvoiceOID_1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[0].invoiceOID;$.expenseReportInvoices[0].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单提交" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;applicantName&quot;: &quot;自动化测试Admin&quot;,&#xd;
	&quot;applicantOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;approverOIDs&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;baseCurrencyAmount&quot;: 500,&#xd;
	&quot;baseCurrencyRealPayAmount&quot;: 500,&#xd;
	&quot;businessCode&quot;: &quot;${businessCode}&quot;,&#xd;
	&quot;companyOID&quot;: &quot;b634aa55-09dd-4f44-9504-4b18ab2d0556&quot;,&#xd;
	&quot;corporationOID&quot;: &quot;ab577d17-9a43-4d53-90b0-a8fa2cfbfab9&quot;,&#xd;
	&quot;createdBy&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
	&quot;createdName&quot;: &quot;自动化测试Admin&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;currencyCodeName&quot;: &quot;人民币&quot;,&#xd;
	&quot;currencySame&quot;: false,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;67ff9fab-a4d6-4deb-990c-fdfd5b3b299e&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;showValue&quot;: &quot;HLY自动化测试团&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: true,&#xd;
		&quot;refCostCenterOID&quot;: null,&#xd;
		&quot;headerTmplateName&quot;: &quot;部门&quot;,&#xd;
		&quot;headerTmplateValue&quot;: &quot;HLY自动化测试团&quot;&#xd;
	}, {&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;6c6a635e-f21f-40b1-9bca-7bdaa9bbfc86&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;showValue&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: true,&#xd;
		&quot;refCostCenterOID&quot;: null,&#xd;
		&quot;headerTmplateName&quot;: &quot;事由&quot;,&#xd;
		&quot;headerTmplateValue&quot;: &quot;自动化日常报销单&quot;&#xd;
	}, {&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;e188de2c-dab7-43e8-9cde-426fa87bc36e&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;showValue&quot;: &quot;自动化测试Admin&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: null,&#xd;
		&quot;refCostCenterOID&quot;: null,&#xd;
		&quot;headerTmplateName&quot;: &quot;审批人&quot;,&#xd;
		&quot;headerTmplateValue&quot;: &quot;自动化测试Admin&quot;&#xd;
	}],&#xd;
	&quot;departmentName&quot;: &quot;HLY自动化测试团&quot;,&#xd;
	&quot;departmentOID&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
	&quot;departmentPath&quot;: &quot;HLY自动化测试团&quot;,&#xd;
	&quot;expenseReportInvoices&quot;: [{&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
		&quot;expenseReportInvoiceOID&quot;: &quot;${expenseReportInvoiceOID_1}&quot;,&#xd;
		&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;invoiceOID&quot;: &quot;${invoiceOID_1}&quot;,&#xd;
		&quot;invoiceView&quot;: {&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_1}&quot;,&#xd;
			&quot;expenseTypeId&quot;: &quot;48375&quot;,&#xd;
			&quot;expenseTypeOID&quot;: &quot;4eb0e9ab-94bc-48ba-b7db-b9c5cefeb20c&quot;,&#xd;
			&quot;expenseTypeName&quot;: &quot;餐补&quot;,&#xd;
			&quot;crossCheckStatus&quot;: null,&#xd;
			&quot;expenseTypeKey&quot;: null,&#xd;
			&quot;expenseTypeIconName&quot;: &quot;mealAllowance&quot;,&#xd;
			&quot;phoneNumber&quot;: null,&#xd;
			&quot;email&quot;: null,&#xd;
			&quot;expenseTypeIconURL&quot;: &quot;http://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//1af2a30d-9719-419b-a7ef-68078462baed/expenseIcon/6fdf86e4-9432-4546-b60b-53ea4ad922a1-mealAllowance.png&quot;,&#xd;
			&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
			&quot;expenseTypeCategoryDTO&quot;: {&#xd;
				&quot;expenseTypeCategoryOID&quot;: &quot;138e5d0c-6ea9-473f-afb7-8733eaf352c1&quot;,&#xd;
				&quot;name&quot;: &quot;费用类型&quot;,&#xd;
				&quot;code&quot;: null&#xd;
			},&#xd;
			&quot;costCenterItemOID&quot;: null,&#xd;
			&quot;costCenterItemName&quot;: null,&#xd;
			&quot;amount&quot;: 500,&#xd;
			&quot;originalAmount&quot;: 500,&#xd;
			&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;userOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
			&quot;mobile&quot;: null,&#xd;
			&quot;employeeId&quot;: null,&#xd;
			&quot;data&quot;: [{&#xd;
				&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
				&quot;name&quot;: &quot;国家&quot;,&#xd;
				&quot;value&quot;: null,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;country&quot;,&#xd;
				&quot;sequence&quot;: 1,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;665a22db-7a70-481f-bd84-b16c8e89e6a0&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: null,&#xd;
				&quot;isDefaultValueConfigurable&quot;: true,&#xd;
				&quot;isCommonField&quot;: false,&#xd;
				&quot;i18n&quot;: null&#xd;
			}],&#xd;
			&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
			&quot;comment&quot;: null,&#xd;
			&quot;warning&quot;: &quot;&quot;,&#xd;
			&quot;overtime&quot;: &quot;N&quot;,&#xd;
			&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
			&quot;createdDate&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
			&quot;attachments&quot;: [],&#xd;
			&quot;withReceipt&quot;: true,&#xd;
			&quot;readonly&quot;: false,&#xd;
			&quot;businessCode&quot;: null,&#xd;
			&quot;createLocation&quot;: null,&#xd;
			&quot;createTime&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
			&quot;rejectType&quot;: null,&#xd;
			&quot;rejectReason&quot;: null,&#xd;
			&quot;approverId&quot;: null,&#xd;
			&quot;approvalStepId&quot;: null,&#xd;
			&quot;approvalOperates&quot;: null,&#xd;
			&quot;approver&quot;: null,&#xd;
			&quot;referenceId&quot;: null,&#xd;
			&quot;unitPrice&quot;: null,&#xd;
			&quot;number&quot;: null,&#xd;
			&quot;receiptFailType&quot;: null,&#xd;
			&quot;receiptFailReason&quot;: null,&#xd;
			&quot;valid&quot;: false,&#xd;
			&quot;receiptID&quot;: null,&#xd;
			&quot;cardSignType&quot;: null,&#xd;
			&quot;nonVATinclusiveAmount&quot;: null,&#xd;
			&quot;taxAmount&quot;: null,&#xd;
			&quot;receiptType&quot;: null,&#xd;
			&quot;receiptTypeNo&quot;: null,&#xd;
			&quot;invoiceCode&quot;: null,&#xd;
			&quot;invoiceNumber&quot;: null,&#xd;
			&quot;invoiceDate&quot;: null,&#xd;
			&quot;priceTaxAmount&quot;: null,&#xd;
			&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
			&quot;receiptGoodsID&quot;: null,&#xd;
			&quot;taxRate&quot;: null,&#xd;
			&quot;checkCode&quot;: null,&#xd;
			&quot;invoiceLabelDTOS&quot;: [],&#xd;
			&quot;invoiceLabels&quot;: [],&#xd;
			&quot;companyOID&quot;: null,&#xd;
			&quot;invoiceInstead&quot;: false,&#xd;
			&quot;invoiceInsteadReason&quot;: null,&#xd;
			&quot;paymentType&quot;: 1001,&#xd;
			&quot;source&quot;: null,&#xd;
			&quot;ownerOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
			&quot;checked&quot;: null,&#xd;
			&quot;createInvoice&quot;: true,&#xd;
			&quot;checkWarning&quot;: null,&#xd;
			&quot;digitalInvoice&quot;: null,&#xd;
			&quot;digitalInvoiceId&quot;: null,&#xd;
			&quot;actualCurrencyRate&quot;: 1,&#xd;
			&quot;originalActualCurrencyRate&quot;: 1,&#xd;
			&quot;companyCurrencyRate&quot;: 1,&#xd;
			&quot;actualCurrencyAmount&quot;: 500,&#xd;
			&quot;baseAmount&quot;: 500,&#xd;
			&quot;updateRate&quot;: false,&#xd;
			&quot;flightNo&quot;: null,&#xd;
			&quot;apportionUsed&quot;: false,&#xd;
			&quot;expenseApportion&quot;: null,&#xd;
			&quot;expenseReportOID&quot;: null,&#xd;
			&quot;amountChanged&quot;: null,&#xd;
			&quot;approvalStatus&quot;: null,&#xd;
			&quot;bankTransactionID&quot;: null,&#xd;
			&quot;expenseCreatedType&quot;: null,&#xd;
			&quot;overDue&quot;: null,&#xd;
			&quot;bankTransactionDetail&quot;: null,&#xd;
			&quot;baseCurrency&quot;: null,&#xd;
			&quot;subsidyRepeatedFlag&quot;: false,&#xd;
			&quot;orderAmount&quot;: 500,&#xd;
			&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
			&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
			&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
			&quot;receiptedStatus&quot;: 0,&#xd;
			&quot;stringCol1&quot;: null,&#xd;
			&quot;stringCol2&quot;: null,&#xd;
			&quot;vatInvoice&quot;: false,&#xd;
			&quot;stringCol3&quot;: null,&#xd;
			&quot;recognized&quot;: false,&#xd;
			&quot;status&quot;: 1000&#xd;
		},&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
		&quot;status&quot;: 1000&#xd;
	}],&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;expenseTypes&quot;: &quot;4eb0e9ab-94bc-48ba-b7db-b9c5cefeb20c&quot;,&#xd;
	&quot;filterFlag&quot;: true,&#xd;
	&quot;forceCount&quot;: 0,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;foreignCurrencyAmount&quot;: 500,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
	&quot;ignoreBudgetWarningFlag&quot;: false,&#xd;
	&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:19:47Z&quot;,&#xd;
	&quot;lastSubmittedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
	&quot;needApproval&quot;: false,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;overtimeCount&quot;: 0,&#xd;
	&quot;personalPaymentAmount&quot;: 500,&#xd;
	&quot;personalPaymentBaseAmount&quot;: 500,&#xd;
	&quot;printFree&quot;: false,&#xd;
	&quot;printable&quot;: true,&#xd;
	&quot;realPaymentAmount&quot;: 500,&#xd;
	&quot;realPaymentBaseAmount&quot;: 500,&#xd;
	&quot;rejectType&quot;: 1000,&#xd;
	&quot;reviewedFlag&quot;: false,&#xd;
	&quot;setOfBooksId&quot;: 971590973727912000,&#xd;
	&quot;splitStatus&quot;: 0,&#xd;
	&quot;status&quot;: 1001,&#xd;
	&quot;statusView&quot;: 1001,&#xd;
	&quot;subCompanyOID&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
	&quot;tenantId&quot;: 971590973585305600,&#xd;
	&quot;title&quot;: &quot;自动化日常报销单&quot;,&#xd;
	&quot;totalAmount&quot;: 500,&#xd;
	&quot;travelStandardValid&quot;: 1001,&#xd;
	&quot;travelStandardWarning&quot;: false,&#xd;
	&quot;type&quot;: 1001,&#xd;
	&quot;withReceiptAmount&quot;: 500,&#xd;
	&quot;withoutReceiptAmount&quot;: 0,&#xd;
	&quot;writeoffFlag&quot;: false,&#xd;
	&quot;warnning&quot;: null,&#xd;
	&quot;loanApplicationOID&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/expense/reports/custom/form/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">entityOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;entityOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单详情（新）" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/expenses/${data2}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1947514396">&quot;businessCode&quot;:&quot;${businessCode}&quot;</stringProp>
              <stringProp name="402202526">&quot;currencyCode&quot;:&quot;CNY&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">true</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="审批通过" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${expenseReportOID}&quot;,&quot;entityType&quot;:1002,&quot;approverOID&quot;:&quot;${applicantOID}&quot;}],&quot;approvalTxt&quot;:&quot;审批通过&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/approvals/pass</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="282682134">{&quot;successNum&quot;:1,&quot;failNum&quot;:0,&quot;failReason&quot;:{}}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="审核通过" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${expenseReportOID}&quot;,&quot;entityType&quot;:1002}],&quot;approvalTxt&quot;:&quot;审核意见&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/audit/pass</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="282682134">{&quot;successNum&quot;:1,&quot;failNum&quot;:0,&quot;failReason&quot;:{}}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单确认付款" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;businessCode&quot;:null,&quot;status&quot;:&quot;prending_pay&quot;,&quot;startDate&quot;:null,&quot;endDate&quot;:null,&quot;corporationOIDs&quot;:[],&quot;formOIDs&quot;:[],&quot;selectMode&quot;:&quot;current_page&quot;,&quot;entityType&quot;:1001,&quot;entityOIDs&quot;:[&quot;${expenseReportOID}&quot;],&quot;excludedEntityOIDs&quot;:[],&quot;comment&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/reimbursement/batch/pay/processing/confirm</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取reimbursementBatchOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">reimbursementBatchOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;reimbursementBatchOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单明细导出" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/reimbursement/batch/detail/export?reimbursementBatchOID=${reimbursementBatchOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报盘文件导出" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/reimbursement/batch/nacha/export?reimbursementBatchOID=${reimbursementBatchOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
          <stringProp name="BeanShellSampler.query">byte[] result = prev.getResponseData();  //这个是获取到请求返回的数据，prev是获取上个请求的返回

String file_name = &quot;C:\\Users\\liuxix\\Desktop\\baopan.xlsx&quot;; //代表存放文件的位置和文件名
//String file_name = &quot;baopan.xlsx&quot;; //代表存放文件的位置和文件名
File file = new File(file_name);
FileOutputStream out = new FileOutputStream(file);
out.write(result);
out.close(); </stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="导入报盘文件" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="download/baopan.xlsx" elementType="HTTPFileArg">
                <stringProp name="File.path">download/baopan.xlsx</stringProp>
                <stringProp name="File.paramname">file</stringProp>
                <stringProp name="File.mimetype">application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/reimbursement/batch/pay/finished/confirm/by/nacha</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">stage.huilianyi.com</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Connection</stringProp>
                <stringProp name="Header.value">keep-alive</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://stage.huilianyi.com/old/</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Cookie</stringProp>
                <stringProp name="Header.value">_pk_ses..d4e1=*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单确认已付款" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;businessCode&quot;:null,&quot;status&quot;:&quot;pay_in_process&quot;,&quot;startDate&quot;:null,&quot;endDate&quot;:null,&quot;corporationOIDs&quot;:[],&quot;formOIDs&quot;:[],&quot;selectMode&quot;:&quot;current_page&quot;,&quot;entityType&quot;:1001,&quot;entityOIDs&quot;:[&quot;${expenseReportOID}&quot;],&quot;excludedEntityOIDs&quot;:[],&quot;comment&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/reimbursement/batch/pay/finished/confirm</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登出" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="报销单修改核定金额" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <longProp name="ThreadGroup.start_time">1522048673000</longProp>
        <longProp name="ThreadGroup.end_time">1522048673000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="模块控制器" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="23750841">工作台</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="170071582">Test Fragment</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单创建" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
	&quot;id&quot;: 8862,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: &quot;&quot;,&#xd;
	&quot;formType&quot;: 3001,&#xd;
	&quot;asSystem&quot;: true,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;2018-04-18T02:35:24Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 48623,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253101,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253102,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;&#xd;
	}, {&#xd;
		&quot;id&quot;: 48624,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253103,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253104,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: null,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1002,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: null,&#xd;
	&quot;companyOID&quot;: &quot;b634aa55-09dd-4f44-9504-4b18ab2d0556&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;form.description&quot;: &quot;{\&quot;enable\&quot;:false,\&quot;en\&quot;:{\&quot;title\&quot;:\&quot;caption\&quot;,\&quot;content\&quot;:\&quot;content\&quot;},\&quot;zh_cn\&quot;:{\&quot;title\&quot;:\&quot;说明文字\&quot;,\&quot;content\&quot;:\&quot;描述内容\&quot;}}&quot;,&#xd;
		&quot;countersignTypeForSubmitter&quot;: &quot;2&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: 971590973585305600,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 48623,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253101,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253102,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;&#xd;
	}, {&#xd;
		&quot;id&quot;: 48624,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253103,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253104,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;currencySame&quot;: false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/draft</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取新建的单据号" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">businessCode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;businessCode&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取报销单OID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseReportOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseReportOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取applicantOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">applicantOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOIDs" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOIDs</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;approverOIDs&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取bizOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">bizOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;bizOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建费用" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;roommateEnabled&quot;: false,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;ownerOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;invoiceOID&quot;: null,&#xd;
	&quot;date&quot;: &quot;2018-05-31T08:04:31.594Z&quot;,&#xd;
	&quot;time&quot;: &quot;2018-05-31T08:04:31.594Z&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;48375&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;4eb0e9ab-94bc-48ba-b7db-b9c5cefeb20c&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;类型&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;no-image&quot;,&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: 500,&#xd;
	&quot;orderAmount&quot;: null,&#xd;
	&quot;orderCurrencyCode&quot;: null,&#xd;
	&quot;originalAmount&quot;: 500,&#xd;
	&quot;firstBringAmount&quot;: 0,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;国家&quot;,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;country&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;665a22db-7a70-481f-bd84-b16c8e89e6a0&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;i18n&quot;: {}&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: null,&#xd;
	&quot;comment&quot;: null,&#xd;
	&quot;createdDate&quot;: &quot;2018-05-31T08:04:32.255Z&quot;,&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: null,&#xd;
	&quot;createTime&quot;: &quot;2018-05-31T08:04:32.255Z&quot;,&#xd;
	&quot;approvalOperateDTOList&quot;: null,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;rejectReason&quot;: null,&#xd;
	&quot;approverId&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: null,&#xd;
	&quot;paymentType&quot;: 1001,&#xd;
	&quot;payByCompany&quot;: false,&#xd;
	&quot;expenseApportion&quot;: [],&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;preCreatedDate&quot;: &quot;2018-05-31T08:04:32.255Z&quot;,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;companyOpenInvoice&quot;: true,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;baseAmount&quot;: 0,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/invoices/expense/report</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="353040032">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单详情（旧）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID_1;expenseReportInvoiceOID_1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[0].invoiceOID;$.expenseReportInvoices[0].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单提交" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;applicantName&quot;: &quot;自动化测试Admin&quot;,&#xd;
	&quot;applicantOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;approverOIDs&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;baseCurrencyAmount&quot;: 500,&#xd;
	&quot;baseCurrencyRealPayAmount&quot;: 500,&#xd;
	&quot;businessCode&quot;: &quot;${businessCode}&quot;,&#xd;
	&quot;companyOID&quot;: &quot;b634aa55-09dd-4f44-9504-4b18ab2d0556&quot;,&#xd;
	&quot;corporationOID&quot;: &quot;ab577d17-9a43-4d53-90b0-a8fa2cfbfab9&quot;,&#xd;
	&quot;createdBy&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
	&quot;createdName&quot;: &quot;自动化测试Admin&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;currencyCodeName&quot;: &quot;人民币&quot;,&#xd;
	&quot;currencySame&quot;: false,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;67ff9fab-a4d6-4deb-990c-fdfd5b3b299e&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;showValue&quot;: &quot;HLY自动化测试团&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: true,&#xd;
		&quot;refCostCenterOID&quot;: null,&#xd;
		&quot;headerTmplateName&quot;: &quot;部门&quot;,&#xd;
		&quot;headerTmplateValue&quot;: &quot;HLY自动化测试团&quot;&#xd;
	}, {&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;6c6a635e-f21f-40b1-9bca-7bdaa9bbfc86&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;showValue&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: true,&#xd;
		&quot;refCostCenterOID&quot;: null,&#xd;
		&quot;headerTmplateName&quot;: &quot;事由&quot;,&#xd;
		&quot;headerTmplateValue&quot;: &quot;自动化日常报销单&quot;&#xd;
	}, {&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;e188de2c-dab7-43e8-9cde-426fa87bc36e&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;showValue&quot;: &quot;自动化测试Admin&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: null,&#xd;
		&quot;refCostCenterOID&quot;: null,&#xd;
		&quot;headerTmplateName&quot;: &quot;审批人&quot;,&#xd;
		&quot;headerTmplateValue&quot;: &quot;自动化测试Admin&quot;&#xd;
	}],&#xd;
	&quot;departmentName&quot;: &quot;HLY自动化测试团&quot;,&#xd;
	&quot;departmentOID&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
	&quot;departmentPath&quot;: &quot;HLY自动化测试团&quot;,&#xd;
	&quot;expenseReportInvoices&quot;: [{&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
		&quot;expenseReportInvoiceOID&quot;: &quot;${expenseReportInvoiceOID_1}&quot;,&#xd;
		&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;invoiceOID&quot;: &quot;${invoiceOID_1}&quot;,&#xd;
		&quot;invoiceView&quot;: {&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_1}&quot;,&#xd;
			&quot;expenseTypeId&quot;: &quot;48375&quot;,&#xd;
			&quot;expenseTypeOID&quot;: &quot;4eb0e9ab-94bc-48ba-b7db-b9c5cefeb20c&quot;,&#xd;
			&quot;expenseTypeName&quot;: &quot;餐补&quot;,&#xd;
			&quot;crossCheckStatus&quot;: null,&#xd;
			&quot;expenseTypeKey&quot;: null,&#xd;
			&quot;expenseTypeIconName&quot;: &quot;mealAllowance&quot;,&#xd;
			&quot;phoneNumber&quot;: null,&#xd;
			&quot;email&quot;: null,&#xd;
			&quot;expenseTypeIconURL&quot;: &quot;http://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//1af2a30d-9719-419b-a7ef-68078462baed/expenseIcon/6fdf86e4-9432-4546-b60b-53ea4ad922a1-mealAllowance.png&quot;,&#xd;
			&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
			&quot;expenseTypeCategoryDTO&quot;: {&#xd;
				&quot;expenseTypeCategoryOID&quot;: &quot;138e5d0c-6ea9-473f-afb7-8733eaf352c1&quot;,&#xd;
				&quot;name&quot;: &quot;费用类型&quot;,&#xd;
				&quot;code&quot;: null&#xd;
			},&#xd;
			&quot;costCenterItemOID&quot;: null,&#xd;
			&quot;costCenterItemName&quot;: null,&#xd;
			&quot;amount&quot;: 500,&#xd;
			&quot;originalAmount&quot;: 500,&#xd;
			&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;userOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
			&quot;mobile&quot;: null,&#xd;
			&quot;employeeId&quot;: null,&#xd;
			&quot;data&quot;: [{&#xd;
				&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
				&quot;name&quot;: &quot;国家&quot;,&#xd;
				&quot;value&quot;: null,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;country&quot;,&#xd;
				&quot;sequence&quot;: 1,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;665a22db-7a70-481f-bd84-b16c8e89e6a0&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: null,&#xd;
				&quot;isDefaultValueConfigurable&quot;: true,&#xd;
				&quot;isCommonField&quot;: false,&#xd;
				&quot;i18n&quot;: null&#xd;
			}],&#xd;
			&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
			&quot;comment&quot;: null,&#xd;
			&quot;warning&quot;: &quot;&quot;,&#xd;
			&quot;overtime&quot;: &quot;N&quot;,&#xd;
			&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
			&quot;createdDate&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
			&quot;attachments&quot;: [],&#xd;
			&quot;withReceipt&quot;: true,&#xd;
			&quot;readonly&quot;: false,&#xd;
			&quot;businessCode&quot;: null,&#xd;
			&quot;createLocation&quot;: null,&#xd;
			&quot;createTime&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
			&quot;rejectType&quot;: null,&#xd;
			&quot;rejectReason&quot;: null,&#xd;
			&quot;approverId&quot;: null,&#xd;
			&quot;approvalStepId&quot;: null,&#xd;
			&quot;approvalOperates&quot;: null,&#xd;
			&quot;approver&quot;: null,&#xd;
			&quot;referenceId&quot;: null,&#xd;
			&quot;unitPrice&quot;: null,&#xd;
			&quot;number&quot;: null,&#xd;
			&quot;receiptFailType&quot;: null,&#xd;
			&quot;receiptFailReason&quot;: null,&#xd;
			&quot;valid&quot;: false,&#xd;
			&quot;receiptID&quot;: null,&#xd;
			&quot;cardSignType&quot;: null,&#xd;
			&quot;nonVATinclusiveAmount&quot;: null,&#xd;
			&quot;taxAmount&quot;: null,&#xd;
			&quot;receiptType&quot;: null,&#xd;
			&quot;receiptTypeNo&quot;: null,&#xd;
			&quot;invoiceCode&quot;: null,&#xd;
			&quot;invoiceNumber&quot;: null,&#xd;
			&quot;invoiceDate&quot;: null,&#xd;
			&quot;priceTaxAmount&quot;: null,&#xd;
			&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
			&quot;receiptGoodsID&quot;: null,&#xd;
			&quot;taxRate&quot;: null,&#xd;
			&quot;checkCode&quot;: null,&#xd;
			&quot;invoiceLabelDTOS&quot;: [],&#xd;
			&quot;invoiceLabels&quot;: [],&#xd;
			&quot;companyOID&quot;: null,&#xd;
			&quot;invoiceInstead&quot;: false,&#xd;
			&quot;invoiceInsteadReason&quot;: null,&#xd;
			&quot;paymentType&quot;: 1001,&#xd;
			&quot;source&quot;: null,&#xd;
			&quot;ownerOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
			&quot;checked&quot;: null,&#xd;
			&quot;createInvoice&quot;: true,&#xd;
			&quot;checkWarning&quot;: null,&#xd;
			&quot;digitalInvoice&quot;: null,&#xd;
			&quot;digitalInvoiceId&quot;: null,&#xd;
			&quot;actualCurrencyRate&quot;: 1,&#xd;
			&quot;originalActualCurrencyRate&quot;: 1,&#xd;
			&quot;companyCurrencyRate&quot;: 1,&#xd;
			&quot;actualCurrencyAmount&quot;: 500,&#xd;
			&quot;baseAmount&quot;: 500,&#xd;
			&quot;updateRate&quot;: false,&#xd;
			&quot;flightNo&quot;: null,&#xd;
			&quot;apportionUsed&quot;: false,&#xd;
			&quot;expenseApportion&quot;: null,&#xd;
			&quot;expenseReportOID&quot;: null,&#xd;
			&quot;amountChanged&quot;: null,&#xd;
			&quot;approvalStatus&quot;: null,&#xd;
			&quot;bankTransactionID&quot;: null,&#xd;
			&quot;expenseCreatedType&quot;: null,&#xd;
			&quot;overDue&quot;: null,&#xd;
			&quot;bankTransactionDetail&quot;: null,&#xd;
			&quot;baseCurrency&quot;: null,&#xd;
			&quot;subsidyRepeatedFlag&quot;: false,&#xd;
			&quot;orderAmount&quot;: 500,&#xd;
			&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
			&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
			&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
			&quot;receiptedStatus&quot;: 0,&#xd;
			&quot;stringCol1&quot;: null,&#xd;
			&quot;stringCol2&quot;: null,&#xd;
			&quot;vatInvoice&quot;: false,&#xd;
			&quot;stringCol3&quot;: null,&#xd;
			&quot;recognized&quot;: false,&#xd;
			&quot;status&quot;: 1000&#xd;
		},&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
		&quot;status&quot;: 1000&#xd;
	}],&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;expenseTypes&quot;: &quot;4eb0e9ab-94bc-48ba-b7db-b9c5cefeb20c&quot;,&#xd;
	&quot;filterFlag&quot;: true,&#xd;
	&quot;forceCount&quot;: 0,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;foreignCurrencyAmount&quot;: 500,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
	&quot;ignoreBudgetWarningFlag&quot;: false,&#xd;
	&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:19:47Z&quot;,&#xd;
	&quot;lastSubmittedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
	&quot;needApproval&quot;: false,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;overtimeCount&quot;: 0,&#xd;
	&quot;personalPaymentAmount&quot;: 500,&#xd;
	&quot;personalPaymentBaseAmount&quot;: 500,&#xd;
	&quot;printFree&quot;: false,&#xd;
	&quot;printable&quot;: true,&#xd;
	&quot;realPaymentAmount&quot;: 500,&#xd;
	&quot;realPaymentBaseAmount&quot;: 500,&#xd;
	&quot;rejectType&quot;: 1000,&#xd;
	&quot;reviewedFlag&quot;: false,&#xd;
	&quot;setOfBooksId&quot;: 971590973727912000,&#xd;
	&quot;splitStatus&quot;: 0,&#xd;
	&quot;status&quot;: 1001,&#xd;
	&quot;statusView&quot;: 1001,&#xd;
	&quot;subCompanyOID&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
	&quot;tenantId&quot;: 971590973585305600,&#xd;
	&quot;title&quot;: &quot;自动化日常报销单&quot;,&#xd;
	&quot;totalAmount&quot;: 500,&#xd;
	&quot;travelStandardValid&quot;: 1001,&#xd;
	&quot;travelStandardWarning&quot;: false,&#xd;
	&quot;type&quot;: 1001,&#xd;
	&quot;withReceiptAmount&quot;: 500,&#xd;
	&quot;withoutReceiptAmount&quot;: 0,&#xd;
	&quot;writeoffFlag&quot;: false,&#xd;
	&quot;warnning&quot;: null,&#xd;
	&quot;loanApplicationOID&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/expense/reports/custom/form/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">entityOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;entityOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单详情（新）" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/expenses/${data2}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1947514396">&quot;businessCode&quot;:&quot;${businessCode}&quot;</stringProp>
              <stringProp name="402202526">&quot;currencyCode&quot;:&quot;CNY&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="审批通过" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${expenseReportOID}&quot;,&quot;entityType&quot;:1002,&quot;approverOID&quot;:&quot;${applicantOID}&quot;}],&quot;approvalTxt&quot;:&quot;审批通过&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/approvals/pass</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="282682134">{&quot;successNum&quot;:1,&quot;failNum&quot;:0,&quot;failReason&quot;:{}}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="026修改核定金额(正常入参)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;amount&quot;: 200,&#xd;
	&quot;originalActualCurrencyRate&quot;: 1,&#xd;
	&quot;originalAmount&quot;: 500,&#xd;
	&quot;invoiceOID&quot;: &quot;${invoiceOID_1}&quot;,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/invoices/review/amount</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="断言持续时间" enabled="true">
            <stringProp name="DurationAssertion.duration">10000</stringProp>
          </DurationAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="353040032">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="027修改核定金额（核定金额大于金额）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;amount&quot;: 1000,&#xd;
	&quot;originalActualCurrencyRate&quot;: 1,&#xd;
	&quot;originalAmount&quot;: 500,&#xd;
	&quot;invoiceOID&quot;: &quot;${invoiceOID_1}&quot;,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/invoices/review/amount</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="329035797">errorCode</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="028修改核定金额（核定金额为0)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">	{&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;amount&quot;: 0,&#xd;
	&quot;originalActualCurrencyRate&quot;: 1,&#xd;
	&quot;originalAmount&quot;: 500,&#xd;
	&quot;invoiceOID&quot;: &quot;${invoiceOID_1}&quot;,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/invoices/review/amount</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2025245861">&quot;message&quot;:&quot;请输入金额(核定金额不能为0)&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="029修改核定金额（核定金额为空)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">	{&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;amount&quot;:&quot;&quot;,&#xd;
	&quot;originalActualCurrencyRate&quot;: 1,&#xd;
	&quot;originalAmount&quot;: 500,&#xd;
	&quot;invoiceOID&quot;: &quot;${invoiceOID_1}&quot;,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/invoices/review/amount</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-436251180">&quot;message&quot;:&quot;验证失败&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登出" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">true</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="报销单审核驳回(有驳回意见)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <longProp name="ThreadGroup.start_time">1522048673000</longProp>
        <longProp name="ThreadGroup.end_time">1522048673000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="模块控制器" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="23750841">工作台</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="170071582">Test Fragment</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单创建" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
	&quot;id&quot;: 8862,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: &quot;&quot;,&#xd;
	&quot;formType&quot;: 3001,&#xd;
	&quot;asSystem&quot;: true,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;2018-04-18T02:35:24Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 48623,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253101,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253102,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;&#xd;
	}, {&#xd;
		&quot;id&quot;: 48624,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253103,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253104,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: null,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1002,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: null,&#xd;
	&quot;companyOID&quot;: &quot;b634aa55-09dd-4f44-9504-4b18ab2d0556&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;form.description&quot;: &quot;{\&quot;enable\&quot;:false,\&quot;en\&quot;:{\&quot;title\&quot;:\&quot;caption\&quot;,\&quot;content\&quot;:\&quot;content\&quot;},\&quot;zh_cn\&quot;:{\&quot;title\&quot;:\&quot;说明文字\&quot;,\&quot;content\&quot;:\&quot;描述内容\&quot;}}&quot;,&#xd;
		&quot;countersignTypeForSubmitter&quot;: &quot;2&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: 971590973585305600,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 48623,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253101,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253102,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;&#xd;
	}, {&#xd;
		&quot;id&quot;: 48624,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253103,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253104,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;currencySame&quot;: false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/draft</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取新建的单据号" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">businessCode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;businessCode&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取报销单OID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseReportOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseReportOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取applicantOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">applicantOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOIDs" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOIDs</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;approverOIDs&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取bizOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">bizOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;bizOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建费用" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;roommateEnabled&quot;: false,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;ownerOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;invoiceOID&quot;: null,&#xd;
	&quot;date&quot;: &quot;2018-05-31T08:04:31.594Z&quot;,&#xd;
	&quot;time&quot;: &quot;2018-05-31T08:04:31.594Z&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;48375&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;4eb0e9ab-94bc-48ba-b7db-b9c5cefeb20c&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;类型&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;no-image&quot;,&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: 500,&#xd;
	&quot;orderAmount&quot;: null,&#xd;
	&quot;orderCurrencyCode&quot;: null,&#xd;
	&quot;originalAmount&quot;: 500,&#xd;
	&quot;firstBringAmount&quot;: 0,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;国家&quot;,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;country&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;665a22db-7a70-481f-bd84-b16c8e89e6a0&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;i18n&quot;: {}&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: null,&#xd;
	&quot;comment&quot;: null,&#xd;
	&quot;createdDate&quot;: &quot;2018-05-31T08:04:32.255Z&quot;,&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: null,&#xd;
	&quot;createTime&quot;: &quot;2018-05-31T08:04:32.255Z&quot;,&#xd;
	&quot;approvalOperateDTOList&quot;: null,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;rejectReason&quot;: null,&#xd;
	&quot;approverId&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: null,&#xd;
	&quot;paymentType&quot;: 1001,&#xd;
	&quot;payByCompany&quot;: false,&#xd;
	&quot;expenseApportion&quot;: [],&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;preCreatedDate&quot;: &quot;2018-05-31T08:04:32.255Z&quot;,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;companyOpenInvoice&quot;: true,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;baseAmount&quot;: 0,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/invoices/expense/report</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="353040032">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单详情（旧）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取费用信息" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID_1;expenseReportInvoiceOID_1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[0].invoiceOID;$.expenseReportInvoices[0].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单提交" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;applicantName&quot;: &quot;自动化测试Admin&quot;,&#xd;
	&quot;applicantOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;approverOIDs&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;baseCurrencyAmount&quot;: 500,&#xd;
	&quot;baseCurrencyRealPayAmount&quot;: 500,&#xd;
	&quot;businessCode&quot;: &quot;${businessCode}&quot;,&#xd;
	&quot;companyOID&quot;: &quot;b634aa55-09dd-4f44-9504-4b18ab2d0556&quot;,&#xd;
	&quot;corporationOID&quot;: &quot;ab577d17-9a43-4d53-90b0-a8fa2cfbfab9&quot;,&#xd;
	&quot;createdBy&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
	&quot;createdName&quot;: &quot;自动化测试Admin&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;currencyCodeName&quot;: &quot;人民币&quot;,&#xd;
	&quot;currencySame&quot;: false,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;67ff9fab-a4d6-4deb-990c-fdfd5b3b299e&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;showValue&quot;: &quot;HLY自动化测试团&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: true,&#xd;
		&quot;refCostCenterOID&quot;: null,&#xd;
		&quot;headerTmplateName&quot;: &quot;部门&quot;,&#xd;
		&quot;headerTmplateValue&quot;: &quot;HLY自动化测试团&quot;&#xd;
	}, {&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;6c6a635e-f21f-40b1-9bca-7bdaa9bbfc86&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;showValue&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: true,&#xd;
		&quot;refCostCenterOID&quot;: null,&#xd;
		&quot;headerTmplateName&quot;: &quot;事由&quot;,&#xd;
		&quot;headerTmplateValue&quot;: &quot;自动化日常报销单&quot;&#xd;
	}, {&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;e188de2c-dab7-43e8-9cde-426fa87bc36e&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;showValue&quot;: &quot;自动化测试Admin&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: null,&#xd;
		&quot;refCostCenterOID&quot;: null,&#xd;
		&quot;headerTmplateName&quot;: &quot;审批人&quot;,&#xd;
		&quot;headerTmplateValue&quot;: &quot;自动化测试Admin&quot;&#xd;
	}],&#xd;
	&quot;departmentName&quot;: &quot;HLY自动化测试团&quot;,&#xd;
	&quot;departmentOID&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
	&quot;departmentPath&quot;: &quot;HLY自动化测试团&quot;,&#xd;
	&quot;expenseReportInvoices&quot;: [{&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
		&quot;expenseReportInvoiceOID&quot;: &quot;${expenseReportInvoiceOID_1}&quot;,&#xd;
		&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;invoiceOID&quot;: &quot;${invoiceOID_1}&quot;,&#xd;
		&quot;invoiceView&quot;: {&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_1}&quot;,&#xd;
			&quot;expenseTypeId&quot;: &quot;48375&quot;,&#xd;
			&quot;expenseTypeOID&quot;: &quot;4eb0e9ab-94bc-48ba-b7db-b9c5cefeb20c&quot;,&#xd;
			&quot;expenseTypeName&quot;: &quot;餐补&quot;,&#xd;
			&quot;crossCheckStatus&quot;: null,&#xd;
			&quot;expenseTypeKey&quot;: null,&#xd;
			&quot;expenseTypeIconName&quot;: &quot;mealAllowance&quot;,&#xd;
			&quot;phoneNumber&quot;: null,&#xd;
			&quot;email&quot;: null,&#xd;
			&quot;expenseTypeIconURL&quot;: &quot;http://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//1af2a30d-9719-419b-a7ef-68078462baed/expenseIcon/6fdf86e4-9432-4546-b60b-53ea4ad922a1-mealAllowance.png&quot;,&#xd;
			&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
			&quot;expenseTypeCategoryDTO&quot;: {&#xd;
				&quot;expenseTypeCategoryOID&quot;: &quot;138e5d0c-6ea9-473f-afb7-8733eaf352c1&quot;,&#xd;
				&quot;name&quot;: &quot;费用类型&quot;,&#xd;
				&quot;code&quot;: null&#xd;
			},&#xd;
			&quot;costCenterItemOID&quot;: null,&#xd;
			&quot;costCenterItemName&quot;: null,&#xd;
			&quot;amount&quot;: 500,&#xd;
			&quot;originalAmount&quot;: 500,&#xd;
			&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;userOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
			&quot;mobile&quot;: null,&#xd;
			&quot;employeeId&quot;: null,&#xd;
			&quot;data&quot;: [{&#xd;
				&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
				&quot;name&quot;: &quot;国家&quot;,&#xd;
				&quot;value&quot;: null,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;country&quot;,&#xd;
				&quot;sequence&quot;: 1,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;665a22db-7a70-481f-bd84-b16c8e89e6a0&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: null,&#xd;
				&quot;isDefaultValueConfigurable&quot;: true,&#xd;
				&quot;isCommonField&quot;: false,&#xd;
				&quot;i18n&quot;: null&#xd;
			}],&#xd;
			&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
			&quot;comment&quot;: null,&#xd;
			&quot;warning&quot;: &quot;&quot;,&#xd;
			&quot;overtime&quot;: &quot;N&quot;,&#xd;
			&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
			&quot;createdDate&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
			&quot;attachments&quot;: [],&#xd;
			&quot;withReceipt&quot;: true,&#xd;
			&quot;readonly&quot;: false,&#xd;
			&quot;businessCode&quot;: null,&#xd;
			&quot;createLocation&quot;: null,&#xd;
			&quot;createTime&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
			&quot;rejectType&quot;: null,&#xd;
			&quot;rejectReason&quot;: null,&#xd;
			&quot;approverId&quot;: null,&#xd;
			&quot;approvalStepId&quot;: null,&#xd;
			&quot;approvalOperates&quot;: null,&#xd;
			&quot;approver&quot;: null,&#xd;
			&quot;referenceId&quot;: null,&#xd;
			&quot;unitPrice&quot;: null,&#xd;
			&quot;number&quot;: null,&#xd;
			&quot;receiptFailType&quot;: null,&#xd;
			&quot;receiptFailReason&quot;: null,&#xd;
			&quot;valid&quot;: false,&#xd;
			&quot;receiptID&quot;: null,&#xd;
			&quot;cardSignType&quot;: null,&#xd;
			&quot;nonVATinclusiveAmount&quot;: null,&#xd;
			&quot;taxAmount&quot;: null,&#xd;
			&quot;receiptType&quot;: null,&#xd;
			&quot;receiptTypeNo&quot;: null,&#xd;
			&quot;invoiceCode&quot;: null,&#xd;
			&quot;invoiceNumber&quot;: null,&#xd;
			&quot;invoiceDate&quot;: null,&#xd;
			&quot;priceTaxAmount&quot;: null,&#xd;
			&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
			&quot;receiptGoodsID&quot;: null,&#xd;
			&quot;taxRate&quot;: null,&#xd;
			&quot;checkCode&quot;: null,&#xd;
			&quot;invoiceLabelDTOS&quot;: [],&#xd;
			&quot;invoiceLabels&quot;: [],&#xd;
			&quot;companyOID&quot;: null,&#xd;
			&quot;invoiceInstead&quot;: false,&#xd;
			&quot;invoiceInsteadReason&quot;: null,&#xd;
			&quot;paymentType&quot;: 1001,&#xd;
			&quot;source&quot;: null,&#xd;
			&quot;ownerOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
			&quot;checked&quot;: null,&#xd;
			&quot;createInvoice&quot;: true,&#xd;
			&quot;checkWarning&quot;: null,&#xd;
			&quot;digitalInvoice&quot;: null,&#xd;
			&quot;digitalInvoiceId&quot;: null,&#xd;
			&quot;actualCurrencyRate&quot;: 1,&#xd;
			&quot;originalActualCurrencyRate&quot;: 1,&#xd;
			&quot;companyCurrencyRate&quot;: 1,&#xd;
			&quot;actualCurrencyAmount&quot;: 500,&#xd;
			&quot;baseAmount&quot;: 500,&#xd;
			&quot;updateRate&quot;: false,&#xd;
			&quot;flightNo&quot;: null,&#xd;
			&quot;apportionUsed&quot;: false,&#xd;
			&quot;expenseApportion&quot;: null,&#xd;
			&quot;expenseReportOID&quot;: null,&#xd;
			&quot;amountChanged&quot;: null,&#xd;
			&quot;approvalStatus&quot;: null,&#xd;
			&quot;bankTransactionID&quot;: null,&#xd;
			&quot;expenseCreatedType&quot;: null,&#xd;
			&quot;overDue&quot;: null,&#xd;
			&quot;bankTransactionDetail&quot;: null,&#xd;
			&quot;baseCurrency&quot;: null,&#xd;
			&quot;subsidyRepeatedFlag&quot;: false,&#xd;
			&quot;orderAmount&quot;: 500,&#xd;
			&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
			&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
			&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
			&quot;receiptedStatus&quot;: 0,&#xd;
			&quot;stringCol1&quot;: null,&#xd;
			&quot;stringCol2&quot;: null,&#xd;
			&quot;vatInvoice&quot;: false,&#xd;
			&quot;stringCol3&quot;: null,&#xd;
			&quot;recognized&quot;: false,&#xd;
			&quot;status&quot;: 1000&#xd;
		},&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
		&quot;status&quot;: 1000&#xd;
	}],&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;expenseTypes&quot;: &quot;4eb0e9ab-94bc-48ba-b7db-b9c5cefeb20c&quot;,&#xd;
	&quot;filterFlag&quot;: true,&#xd;
	&quot;forceCount&quot;: 0,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;foreignCurrencyAmount&quot;: 500,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
	&quot;ignoreBudgetWarningFlag&quot;: false,&#xd;
	&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:19:47Z&quot;,&#xd;
	&quot;lastSubmittedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
	&quot;needApproval&quot;: false,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;overtimeCount&quot;: 0,&#xd;
	&quot;personalPaymentAmount&quot;: 500,&#xd;
	&quot;personalPaymentBaseAmount&quot;: 500,&#xd;
	&quot;printFree&quot;: false,&#xd;
	&quot;printable&quot;: true,&#xd;
	&quot;realPaymentAmount&quot;: 500,&#xd;
	&quot;realPaymentBaseAmount&quot;: 500,&#xd;
	&quot;rejectType&quot;: 1000,&#xd;
	&quot;reviewedFlag&quot;: false,&#xd;
	&quot;setOfBooksId&quot;: 971590973727912000,&#xd;
	&quot;splitStatus&quot;: 0,&#xd;
	&quot;status&quot;: 1001,&#xd;
	&quot;statusView&quot;: 1001,&#xd;
	&quot;subCompanyOID&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
	&quot;tenantId&quot;: 971590973585305600,&#xd;
	&quot;title&quot;: &quot;自动化日常报销单&quot;,&#xd;
	&quot;totalAmount&quot;: 500,&#xd;
	&quot;travelStandardValid&quot;: 1001,&#xd;
	&quot;travelStandardWarning&quot;: false,&#xd;
	&quot;type&quot;: 1001,&#xd;
	&quot;withReceiptAmount&quot;: 500,&#xd;
	&quot;withoutReceiptAmount&quot;: 0,&#xd;
	&quot;writeoffFlag&quot;: false,&#xd;
	&quot;warnning&quot;: null,&#xd;
	&quot;loanApplicationOID&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/expense/reports/custom/form/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">entityOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;entityOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="审批通过" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${expenseReportOID}&quot;,&quot;entityType&quot;:1002,&quot;approverOID&quot;:&quot;${applicantOID}&quot;}],&quot;approvalTxt&quot;:&quot;审批通过&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/approvals/pass</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="282682134">{&quot;successNum&quot;:1,&quot;failNum&quot;:0,&quot;failReason&quot;:{}}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="审核驳回（有驳回意见）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${expenseReportOID}&quot;,&quot;entityType&quot;:1002}],&quot;approvalTxt&quot;:&quot;审核驳回&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/audit/reject</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="282682134">{&quot;successNum&quot;:1,&quot;failNum&quot;:0,&quot;failReason&quot;:{}}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登出" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="报销单审核驳回(无驳回意见)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <longProp name="ThreadGroup.start_time">1522048673000</longProp>
        <longProp name="ThreadGroup.end_time">1522048673000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="模块控制器" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="23750841">工作台</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="170071582">Test Fragment</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单创建" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
	&quot;id&quot;: 8862,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: &quot;&quot;,&#xd;
	&quot;formType&quot;: 3001,&#xd;
	&quot;asSystem&quot;: true,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;2018-04-18T02:35:24Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 48623,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253101,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253102,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;&#xd;
	}, {&#xd;
		&quot;id&quot;: 48624,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253103,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253104,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: null,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1002,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: null,&#xd;
	&quot;companyOID&quot;: &quot;b634aa55-09dd-4f44-9504-4b18ab2d0556&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;form.description&quot;: &quot;{\&quot;enable\&quot;:false,\&quot;en\&quot;:{\&quot;title\&quot;:\&quot;caption\&quot;,\&quot;content\&quot;:\&quot;content\&quot;},\&quot;zh_cn\&quot;:{\&quot;title\&quot;:\&quot;说明文字\&quot;,\&quot;content\&quot;:\&quot;描述内容\&quot;}}&quot;,&#xd;
		&quot;countersignTypeForSubmitter&quot;: &quot;2&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: 971590973585305600,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 48623,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253101,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253102,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;&#xd;
	}, {&#xd;
		&quot;id&quot;: 48624,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253103,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253104,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;currencySame&quot;: false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/draft</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取新建的单据号" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">businessCode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;businessCode&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取报销单OID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseReportOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseReportOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取applicantOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">applicantOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOIDs" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOIDs</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;approverOIDs&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取bizOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">bizOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;bizOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建费用" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;roommateEnabled&quot;: false,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;ownerOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;invoiceOID&quot;: null,&#xd;
	&quot;date&quot;: &quot;2018-05-31T08:04:31.594Z&quot;,&#xd;
	&quot;time&quot;: &quot;2018-05-31T08:04:31.594Z&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;48375&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;4eb0e9ab-94bc-48ba-b7db-b9c5cefeb20c&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;类型&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;no-image&quot;,&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: 500,&#xd;
	&quot;orderAmount&quot;: null,&#xd;
	&quot;orderCurrencyCode&quot;: null,&#xd;
	&quot;originalAmount&quot;: 500,&#xd;
	&quot;firstBringAmount&quot;: 0,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;国家&quot;,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;country&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;665a22db-7a70-481f-bd84-b16c8e89e6a0&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;i18n&quot;: {}&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: null,&#xd;
	&quot;comment&quot;: null,&#xd;
	&quot;createdDate&quot;: &quot;2018-05-31T08:04:32.255Z&quot;,&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: null,&#xd;
	&quot;createTime&quot;: &quot;2018-05-31T08:04:32.255Z&quot;,&#xd;
	&quot;approvalOperateDTOList&quot;: null,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;rejectReason&quot;: null,&#xd;
	&quot;approverId&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: null,&#xd;
	&quot;paymentType&quot;: 1001,&#xd;
	&quot;payByCompany&quot;: false,&#xd;
	&quot;expenseApportion&quot;: [],&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;preCreatedDate&quot;: &quot;2018-05-31T08:04:32.255Z&quot;,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;companyOpenInvoice&quot;: true,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;baseAmount&quot;: 0,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/invoices/expense/report</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="353040032">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单详情（旧）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取费用信息" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID_1;expenseReportInvoiceOID_1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[0].invoiceOID;$.expenseReportInvoices[0].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单提交" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;applicantName&quot;: &quot;自动化测试Admin&quot;,&#xd;
	&quot;applicantOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;approverOIDs&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;baseCurrencyAmount&quot;: 500,&#xd;
	&quot;baseCurrencyRealPayAmount&quot;: 500,&#xd;
	&quot;businessCode&quot;: &quot;${businessCode}&quot;,&#xd;
	&quot;companyOID&quot;: &quot;b634aa55-09dd-4f44-9504-4b18ab2d0556&quot;,&#xd;
	&quot;corporationOID&quot;: &quot;ab577d17-9a43-4d53-90b0-a8fa2cfbfab9&quot;,&#xd;
	&quot;createdBy&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
	&quot;createdName&quot;: &quot;自动化测试Admin&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;currencyCodeName&quot;: &quot;人民币&quot;,&#xd;
	&quot;currencySame&quot;: false,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;67ff9fab-a4d6-4deb-990c-fdfd5b3b299e&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;showValue&quot;: &quot;HLY自动化测试团&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: true,&#xd;
		&quot;refCostCenterOID&quot;: null,&#xd;
		&quot;headerTmplateName&quot;: &quot;部门&quot;,&#xd;
		&quot;headerTmplateValue&quot;: &quot;HLY自动化测试团&quot;&#xd;
	}, {&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;6c6a635e-f21f-40b1-9bca-7bdaa9bbfc86&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;showValue&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: true,&#xd;
		&quot;refCostCenterOID&quot;: null,&#xd;
		&quot;headerTmplateName&quot;: &quot;事由&quot;,&#xd;
		&quot;headerTmplateValue&quot;: &quot;自动化日常报销单&quot;&#xd;
	}, {&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;e188de2c-dab7-43e8-9cde-426fa87bc36e&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;showValue&quot;: &quot;自动化测试Admin&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: null,&#xd;
		&quot;refCostCenterOID&quot;: null,&#xd;
		&quot;headerTmplateName&quot;: &quot;审批人&quot;,&#xd;
		&quot;headerTmplateValue&quot;: &quot;自动化测试Admin&quot;&#xd;
	}],&#xd;
	&quot;departmentName&quot;: &quot;HLY自动化测试团&quot;,&#xd;
	&quot;departmentOID&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
	&quot;departmentPath&quot;: &quot;HLY自动化测试团&quot;,&#xd;
	&quot;expenseReportInvoices&quot;: [{&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
		&quot;expenseReportInvoiceOID&quot;: &quot;${expenseReportInvoiceOID_1}&quot;,&#xd;
		&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;invoiceOID&quot;: &quot;${invoiceOID_1}&quot;,&#xd;
		&quot;invoiceView&quot;: {&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_1}&quot;,&#xd;
			&quot;expenseTypeId&quot;: &quot;48375&quot;,&#xd;
			&quot;expenseTypeOID&quot;: &quot;4eb0e9ab-94bc-48ba-b7db-b9c5cefeb20c&quot;,&#xd;
			&quot;expenseTypeName&quot;: &quot;餐补&quot;,&#xd;
			&quot;crossCheckStatus&quot;: null,&#xd;
			&quot;expenseTypeKey&quot;: null,&#xd;
			&quot;expenseTypeIconName&quot;: &quot;mealAllowance&quot;,&#xd;
			&quot;phoneNumber&quot;: null,&#xd;
			&quot;email&quot;: null,&#xd;
			&quot;expenseTypeIconURL&quot;: &quot;http://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//1af2a30d-9719-419b-a7ef-68078462baed/expenseIcon/6fdf86e4-9432-4546-b60b-53ea4ad922a1-mealAllowance.png&quot;,&#xd;
			&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
			&quot;expenseTypeCategoryDTO&quot;: {&#xd;
				&quot;expenseTypeCategoryOID&quot;: &quot;138e5d0c-6ea9-473f-afb7-8733eaf352c1&quot;,&#xd;
				&quot;name&quot;: &quot;费用类型&quot;,&#xd;
				&quot;code&quot;: null&#xd;
			},&#xd;
			&quot;costCenterItemOID&quot;: null,&#xd;
			&quot;costCenterItemName&quot;: null,&#xd;
			&quot;amount&quot;: 500,&#xd;
			&quot;originalAmount&quot;: 500,&#xd;
			&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;userOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
			&quot;mobile&quot;: null,&#xd;
			&quot;employeeId&quot;: null,&#xd;
			&quot;data&quot;: [{&#xd;
				&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
				&quot;name&quot;: &quot;国家&quot;,&#xd;
				&quot;value&quot;: null,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;country&quot;,&#xd;
				&quot;sequence&quot;: 1,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;665a22db-7a70-481f-bd84-b16c8e89e6a0&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: null,&#xd;
				&quot;isDefaultValueConfigurable&quot;: true,&#xd;
				&quot;isCommonField&quot;: false,&#xd;
				&quot;i18n&quot;: null&#xd;
			}],&#xd;
			&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
			&quot;comment&quot;: null,&#xd;
			&quot;warning&quot;: &quot;&quot;,&#xd;
			&quot;overtime&quot;: &quot;N&quot;,&#xd;
			&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
			&quot;createdDate&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
			&quot;attachments&quot;: [],&#xd;
			&quot;withReceipt&quot;: true,&#xd;
			&quot;readonly&quot;: false,&#xd;
			&quot;businessCode&quot;: null,&#xd;
			&quot;createLocation&quot;: null,&#xd;
			&quot;createTime&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
			&quot;rejectType&quot;: null,&#xd;
			&quot;rejectReason&quot;: null,&#xd;
			&quot;approverId&quot;: null,&#xd;
			&quot;approvalStepId&quot;: null,&#xd;
			&quot;approvalOperates&quot;: null,&#xd;
			&quot;approver&quot;: null,&#xd;
			&quot;referenceId&quot;: null,&#xd;
			&quot;unitPrice&quot;: null,&#xd;
			&quot;number&quot;: null,&#xd;
			&quot;receiptFailType&quot;: null,&#xd;
			&quot;receiptFailReason&quot;: null,&#xd;
			&quot;valid&quot;: false,&#xd;
			&quot;receiptID&quot;: null,&#xd;
			&quot;cardSignType&quot;: null,&#xd;
			&quot;nonVATinclusiveAmount&quot;: null,&#xd;
			&quot;taxAmount&quot;: null,&#xd;
			&quot;receiptType&quot;: null,&#xd;
			&quot;receiptTypeNo&quot;: null,&#xd;
			&quot;invoiceCode&quot;: null,&#xd;
			&quot;invoiceNumber&quot;: null,&#xd;
			&quot;invoiceDate&quot;: null,&#xd;
			&quot;priceTaxAmount&quot;: null,&#xd;
			&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
			&quot;receiptGoodsID&quot;: null,&#xd;
			&quot;taxRate&quot;: null,&#xd;
			&quot;checkCode&quot;: null,&#xd;
			&quot;invoiceLabelDTOS&quot;: [],&#xd;
			&quot;invoiceLabels&quot;: [],&#xd;
			&quot;companyOID&quot;: null,&#xd;
			&quot;invoiceInstead&quot;: false,&#xd;
			&quot;invoiceInsteadReason&quot;: null,&#xd;
			&quot;paymentType&quot;: 1001,&#xd;
			&quot;source&quot;: null,&#xd;
			&quot;ownerOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
			&quot;checked&quot;: null,&#xd;
			&quot;createInvoice&quot;: true,&#xd;
			&quot;checkWarning&quot;: null,&#xd;
			&quot;digitalInvoice&quot;: null,&#xd;
			&quot;digitalInvoiceId&quot;: null,&#xd;
			&quot;actualCurrencyRate&quot;: 1,&#xd;
			&quot;originalActualCurrencyRate&quot;: 1,&#xd;
			&quot;companyCurrencyRate&quot;: 1,&#xd;
			&quot;actualCurrencyAmount&quot;: 500,&#xd;
			&quot;baseAmount&quot;: 500,&#xd;
			&quot;updateRate&quot;: false,&#xd;
			&quot;flightNo&quot;: null,&#xd;
			&quot;apportionUsed&quot;: false,&#xd;
			&quot;expenseApportion&quot;: null,&#xd;
			&quot;expenseReportOID&quot;: null,&#xd;
			&quot;amountChanged&quot;: null,&#xd;
			&quot;approvalStatus&quot;: null,&#xd;
			&quot;bankTransactionID&quot;: null,&#xd;
			&quot;expenseCreatedType&quot;: null,&#xd;
			&quot;overDue&quot;: null,&#xd;
			&quot;bankTransactionDetail&quot;: null,&#xd;
			&quot;baseCurrency&quot;: null,&#xd;
			&quot;subsidyRepeatedFlag&quot;: false,&#xd;
			&quot;orderAmount&quot;: 500,&#xd;
			&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
			&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
			&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
			&quot;receiptedStatus&quot;: 0,&#xd;
			&quot;stringCol1&quot;: null,&#xd;
			&quot;stringCol2&quot;: null,&#xd;
			&quot;vatInvoice&quot;: false,&#xd;
			&quot;stringCol3&quot;: null,&#xd;
			&quot;recognized&quot;: false,&#xd;
			&quot;status&quot;: 1000&#xd;
		},&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
		&quot;status&quot;: 1000&#xd;
	}],&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;expenseTypes&quot;: &quot;4eb0e9ab-94bc-48ba-b7db-b9c5cefeb20c&quot;,&#xd;
	&quot;filterFlag&quot;: true,&#xd;
	&quot;forceCount&quot;: 0,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;foreignCurrencyAmount&quot;: 500,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
	&quot;ignoreBudgetWarningFlag&quot;: false,&#xd;
	&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:19:47Z&quot;,&#xd;
	&quot;lastSubmittedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
	&quot;needApproval&quot;: false,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;overtimeCount&quot;: 0,&#xd;
	&quot;personalPaymentAmount&quot;: 500,&#xd;
	&quot;personalPaymentBaseAmount&quot;: 500,&#xd;
	&quot;printFree&quot;: false,&#xd;
	&quot;printable&quot;: true,&#xd;
	&quot;realPaymentAmount&quot;: 500,&#xd;
	&quot;realPaymentBaseAmount&quot;: 500,&#xd;
	&quot;rejectType&quot;: 1000,&#xd;
	&quot;reviewedFlag&quot;: false,&#xd;
	&quot;setOfBooksId&quot;: 971590973727912000,&#xd;
	&quot;splitStatus&quot;: 0,&#xd;
	&quot;status&quot;: 1001,&#xd;
	&quot;statusView&quot;: 1001,&#xd;
	&quot;subCompanyOID&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
	&quot;tenantId&quot;: 971590973585305600,&#xd;
	&quot;title&quot;: &quot;自动化日常报销单&quot;,&#xd;
	&quot;totalAmount&quot;: 500,&#xd;
	&quot;travelStandardValid&quot;: 1001,&#xd;
	&quot;travelStandardWarning&quot;: false,&#xd;
	&quot;type&quot;: 1001,&#xd;
	&quot;withReceiptAmount&quot;: 500,&#xd;
	&quot;withoutReceiptAmount&quot;: 0,&#xd;
	&quot;writeoffFlag&quot;: false,&#xd;
	&quot;warnning&quot;: null,&#xd;
	&quot;loanApplicationOID&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/expense/reports/custom/form/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">entityOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;entityOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="审批通过" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${expenseReportOID}&quot;,&quot;entityType&quot;:1002,&quot;approverOID&quot;:&quot;${applicantOID}&quot;}],&quot;approvalTxt&quot;:&quot;审批通过&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/approvals/pass</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="282682134">{&quot;successNum&quot;:1,&quot;failNum&quot;:0,&quot;failReason&quot;:{}}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="审核驳回（无驳回意见）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${expenseReportOID}&quot;,&quot;entityType&quot;:1002}],&quot;approvalTxt&quot;:&quot;&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/audit/reject</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-950563175">&quot;message&quot;:&quot;审核驳回意见不能为空&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登出" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="报销单通知(有通知消息)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <longProp name="ThreadGroup.start_time">1522048673000</longProp>
        <longProp name="ThreadGroup.end_time">1522048673000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="模块控制器" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="23750841">工作台</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="170071582">Test Fragment</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单创建" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
	&quot;id&quot;: 8862,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: &quot;&quot;,&#xd;
	&quot;formType&quot;: 3001,&#xd;
	&quot;asSystem&quot;: true,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;2018-04-18T02:35:24Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 48623,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253101,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253102,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;&#xd;
	}, {&#xd;
		&quot;id&quot;: 48624,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253103,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253104,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: null,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1002,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: null,&#xd;
	&quot;companyOID&quot;: &quot;b634aa55-09dd-4f44-9504-4b18ab2d0556&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;form.description&quot;: &quot;{\&quot;enable\&quot;:false,\&quot;en\&quot;:{\&quot;title\&quot;:\&quot;caption\&quot;,\&quot;content\&quot;:\&quot;content\&quot;},\&quot;zh_cn\&quot;:{\&quot;title\&quot;:\&quot;说明文字\&quot;,\&quot;content\&quot;:\&quot;描述内容\&quot;}}&quot;,&#xd;
		&quot;countersignTypeForSubmitter&quot;: &quot;2&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: 971590973585305600,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 48623,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253101,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253102,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;&#xd;
	}, {&#xd;
		&quot;id&quot;: 48624,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253103,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253104,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;currencySame&quot;: false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/draft</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取新建的单据号" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">businessCode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;businessCode&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取报销单OID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseReportOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseReportOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取applicantOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">applicantOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOIDs" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOIDs</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;approverOIDs&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取bizOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">bizOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;bizOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建费用" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;roommateEnabled&quot;: false,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;ownerOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;invoiceOID&quot;: null,&#xd;
	&quot;date&quot;: &quot;2018-05-31T08:04:31.594Z&quot;,&#xd;
	&quot;time&quot;: &quot;2018-05-31T08:04:31.594Z&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;48375&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;4eb0e9ab-94bc-48ba-b7db-b9c5cefeb20c&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;类型&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;no-image&quot;,&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: 500,&#xd;
	&quot;orderAmount&quot;: null,&#xd;
	&quot;orderCurrencyCode&quot;: null,&#xd;
	&quot;originalAmount&quot;: 500,&#xd;
	&quot;firstBringAmount&quot;: 0,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;国家&quot;,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;country&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;665a22db-7a70-481f-bd84-b16c8e89e6a0&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;i18n&quot;: {}&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: null,&#xd;
	&quot;comment&quot;: null,&#xd;
	&quot;createdDate&quot;: &quot;2018-05-31T08:04:32.255Z&quot;,&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: null,&#xd;
	&quot;createTime&quot;: &quot;2018-05-31T08:04:32.255Z&quot;,&#xd;
	&quot;approvalOperateDTOList&quot;: null,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;rejectReason&quot;: null,&#xd;
	&quot;approverId&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: null,&#xd;
	&quot;paymentType&quot;: 1001,&#xd;
	&quot;payByCompany&quot;: false,&#xd;
	&quot;expenseApportion&quot;: [],&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;preCreatedDate&quot;: &quot;2018-05-31T08:04:32.255Z&quot;,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;companyOpenInvoice&quot;: true,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;baseAmount&quot;: 0,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/invoices/expense/report</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="353040032">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单详情（旧）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取费用信息" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID_1;expenseReportInvoiceOID_1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[0].invoiceOID;$.expenseReportInvoices[0].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单提交" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;applicantName&quot;: &quot;自动化测试Admin&quot;,&#xd;
	&quot;applicantOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;approverOIDs&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;baseCurrencyAmount&quot;: 500,&#xd;
	&quot;baseCurrencyRealPayAmount&quot;: 500,&#xd;
	&quot;businessCode&quot;: &quot;${businessCode}&quot;,&#xd;
	&quot;companyOID&quot;: &quot;b634aa55-09dd-4f44-9504-4b18ab2d0556&quot;,&#xd;
	&quot;corporationOID&quot;: &quot;ab577d17-9a43-4d53-90b0-a8fa2cfbfab9&quot;,&#xd;
	&quot;createdBy&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
	&quot;createdName&quot;: &quot;自动化测试Admin&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;currencyCodeName&quot;: &quot;人民币&quot;,&#xd;
	&quot;currencySame&quot;: false,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;67ff9fab-a4d6-4deb-990c-fdfd5b3b299e&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;showValue&quot;: &quot;HLY自动化测试团&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: true,&#xd;
		&quot;refCostCenterOID&quot;: null,&#xd;
		&quot;headerTmplateName&quot;: &quot;部门&quot;,&#xd;
		&quot;headerTmplateValue&quot;: &quot;HLY自动化测试团&quot;&#xd;
	}, {&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;6c6a635e-f21f-40b1-9bca-7bdaa9bbfc86&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;showValue&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: true,&#xd;
		&quot;refCostCenterOID&quot;: null,&#xd;
		&quot;headerTmplateName&quot;: &quot;事由&quot;,&#xd;
		&quot;headerTmplateValue&quot;: &quot;自动化日常报销单&quot;&#xd;
	}, {&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;e188de2c-dab7-43e8-9cde-426fa87bc36e&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;showValue&quot;: &quot;自动化测试Admin&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: null,&#xd;
		&quot;refCostCenterOID&quot;: null,&#xd;
		&quot;headerTmplateName&quot;: &quot;审批人&quot;,&#xd;
		&quot;headerTmplateValue&quot;: &quot;自动化测试Admin&quot;&#xd;
	}],&#xd;
	&quot;departmentName&quot;: &quot;HLY自动化测试团&quot;,&#xd;
	&quot;departmentOID&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
	&quot;departmentPath&quot;: &quot;HLY自动化测试团&quot;,&#xd;
	&quot;expenseReportInvoices&quot;: [{&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
		&quot;expenseReportInvoiceOID&quot;: &quot;${expenseReportInvoiceOID_1}&quot;,&#xd;
		&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;invoiceOID&quot;: &quot;${invoiceOID_1}&quot;,&#xd;
		&quot;invoiceView&quot;: {&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_1}&quot;,&#xd;
			&quot;expenseTypeId&quot;: &quot;48375&quot;,&#xd;
			&quot;expenseTypeOID&quot;: &quot;4eb0e9ab-94bc-48ba-b7db-b9c5cefeb20c&quot;,&#xd;
			&quot;expenseTypeName&quot;: &quot;餐补&quot;,&#xd;
			&quot;crossCheckStatus&quot;: null,&#xd;
			&quot;expenseTypeKey&quot;: null,&#xd;
			&quot;expenseTypeIconName&quot;: &quot;mealAllowance&quot;,&#xd;
			&quot;phoneNumber&quot;: null,&#xd;
			&quot;email&quot;: null,&#xd;
			&quot;expenseTypeIconURL&quot;: &quot;http://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//1af2a30d-9719-419b-a7ef-68078462baed/expenseIcon/6fdf86e4-9432-4546-b60b-53ea4ad922a1-mealAllowance.png&quot;,&#xd;
			&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
			&quot;expenseTypeCategoryDTO&quot;: {&#xd;
				&quot;expenseTypeCategoryOID&quot;: &quot;138e5d0c-6ea9-473f-afb7-8733eaf352c1&quot;,&#xd;
				&quot;name&quot;: &quot;费用类型&quot;,&#xd;
				&quot;code&quot;: null&#xd;
			},&#xd;
			&quot;costCenterItemOID&quot;: null,&#xd;
			&quot;costCenterItemName&quot;: null,&#xd;
			&quot;amount&quot;: 500,&#xd;
			&quot;originalAmount&quot;: 500,&#xd;
			&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;userOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
			&quot;mobile&quot;: null,&#xd;
			&quot;employeeId&quot;: null,&#xd;
			&quot;data&quot;: [{&#xd;
				&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
				&quot;name&quot;: &quot;国家&quot;,&#xd;
				&quot;value&quot;: null,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;country&quot;,&#xd;
				&quot;sequence&quot;: 1,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;665a22db-7a70-481f-bd84-b16c8e89e6a0&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: null,&#xd;
				&quot;isDefaultValueConfigurable&quot;: true,&#xd;
				&quot;isCommonField&quot;: false,&#xd;
				&quot;i18n&quot;: null&#xd;
			}],&#xd;
			&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
			&quot;comment&quot;: null,&#xd;
			&quot;warning&quot;: &quot;&quot;,&#xd;
			&quot;overtime&quot;: &quot;N&quot;,&#xd;
			&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
			&quot;createdDate&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
			&quot;attachments&quot;: [],&#xd;
			&quot;withReceipt&quot;: true,&#xd;
			&quot;readonly&quot;: false,&#xd;
			&quot;businessCode&quot;: null,&#xd;
			&quot;createLocation&quot;: null,&#xd;
			&quot;createTime&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
			&quot;rejectType&quot;: null,&#xd;
			&quot;rejectReason&quot;: null,&#xd;
			&quot;approverId&quot;: null,&#xd;
			&quot;approvalStepId&quot;: null,&#xd;
			&quot;approvalOperates&quot;: null,&#xd;
			&quot;approver&quot;: null,&#xd;
			&quot;referenceId&quot;: null,&#xd;
			&quot;unitPrice&quot;: null,&#xd;
			&quot;number&quot;: null,&#xd;
			&quot;receiptFailType&quot;: null,&#xd;
			&quot;receiptFailReason&quot;: null,&#xd;
			&quot;valid&quot;: false,&#xd;
			&quot;receiptID&quot;: null,&#xd;
			&quot;cardSignType&quot;: null,&#xd;
			&quot;nonVATinclusiveAmount&quot;: null,&#xd;
			&quot;taxAmount&quot;: null,&#xd;
			&quot;receiptType&quot;: null,&#xd;
			&quot;receiptTypeNo&quot;: null,&#xd;
			&quot;invoiceCode&quot;: null,&#xd;
			&quot;invoiceNumber&quot;: null,&#xd;
			&quot;invoiceDate&quot;: null,&#xd;
			&quot;priceTaxAmount&quot;: null,&#xd;
			&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
			&quot;receiptGoodsID&quot;: null,&#xd;
			&quot;taxRate&quot;: null,&#xd;
			&quot;checkCode&quot;: null,&#xd;
			&quot;invoiceLabelDTOS&quot;: [],&#xd;
			&quot;invoiceLabels&quot;: [],&#xd;
			&quot;companyOID&quot;: null,&#xd;
			&quot;invoiceInstead&quot;: false,&#xd;
			&quot;invoiceInsteadReason&quot;: null,&#xd;
			&quot;paymentType&quot;: 1001,&#xd;
			&quot;source&quot;: null,&#xd;
			&quot;ownerOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
			&quot;checked&quot;: null,&#xd;
			&quot;createInvoice&quot;: true,&#xd;
			&quot;checkWarning&quot;: null,&#xd;
			&quot;digitalInvoice&quot;: null,&#xd;
			&quot;digitalInvoiceId&quot;: null,&#xd;
			&quot;actualCurrencyRate&quot;: 1,&#xd;
			&quot;originalActualCurrencyRate&quot;: 1,&#xd;
			&quot;companyCurrencyRate&quot;: 1,&#xd;
			&quot;actualCurrencyAmount&quot;: 500,&#xd;
			&quot;baseAmount&quot;: 500,&#xd;
			&quot;updateRate&quot;: false,&#xd;
			&quot;flightNo&quot;: null,&#xd;
			&quot;apportionUsed&quot;: false,&#xd;
			&quot;expenseApportion&quot;: null,&#xd;
			&quot;expenseReportOID&quot;: null,&#xd;
			&quot;amountChanged&quot;: null,&#xd;
			&quot;approvalStatus&quot;: null,&#xd;
			&quot;bankTransactionID&quot;: null,&#xd;
			&quot;expenseCreatedType&quot;: null,&#xd;
			&quot;overDue&quot;: null,&#xd;
			&quot;bankTransactionDetail&quot;: null,&#xd;
			&quot;baseCurrency&quot;: null,&#xd;
			&quot;subsidyRepeatedFlag&quot;: false,&#xd;
			&quot;orderAmount&quot;: 500,&#xd;
			&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
			&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
			&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
			&quot;receiptedStatus&quot;: 0,&#xd;
			&quot;stringCol1&quot;: null,&#xd;
			&quot;stringCol2&quot;: null,&#xd;
			&quot;vatInvoice&quot;: false,&#xd;
			&quot;stringCol3&quot;: null,&#xd;
			&quot;recognized&quot;: false,&#xd;
			&quot;status&quot;: 1000&#xd;
		},&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
		&quot;status&quot;: 1000&#xd;
	}],&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;expenseTypes&quot;: &quot;4eb0e9ab-94bc-48ba-b7db-b9c5cefeb20c&quot;,&#xd;
	&quot;filterFlag&quot;: true,&#xd;
	&quot;forceCount&quot;: 0,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;foreignCurrencyAmount&quot;: 500,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
	&quot;ignoreBudgetWarningFlag&quot;: false,&#xd;
	&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:19:47Z&quot;,&#xd;
	&quot;lastSubmittedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
	&quot;needApproval&quot;: false,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;overtimeCount&quot;: 0,&#xd;
	&quot;personalPaymentAmount&quot;: 500,&#xd;
	&quot;personalPaymentBaseAmount&quot;: 500,&#xd;
	&quot;printFree&quot;: false,&#xd;
	&quot;printable&quot;: true,&#xd;
	&quot;realPaymentAmount&quot;: 500,&#xd;
	&quot;realPaymentBaseAmount&quot;: 500,&#xd;
	&quot;rejectType&quot;: 1000,&#xd;
	&quot;reviewedFlag&quot;: false,&#xd;
	&quot;setOfBooksId&quot;: 971590973727912000,&#xd;
	&quot;splitStatus&quot;: 0,&#xd;
	&quot;status&quot;: 1001,&#xd;
	&quot;statusView&quot;: 1001,&#xd;
	&quot;subCompanyOID&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
	&quot;tenantId&quot;: 971590973585305600,&#xd;
	&quot;title&quot;: &quot;自动化日常报销单&quot;,&#xd;
	&quot;totalAmount&quot;: 500,&#xd;
	&quot;travelStandardValid&quot;: 1001,&#xd;
	&quot;travelStandardWarning&quot;: false,&#xd;
	&quot;type&quot;: 1001,&#xd;
	&quot;withReceiptAmount&quot;: 500,&#xd;
	&quot;withoutReceiptAmount&quot;: 0,&#xd;
	&quot;writeoffFlag&quot;: false,&#xd;
	&quot;warnning&quot;: null,&#xd;
	&quot;loanApplicationOID&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/expense/reports/custom/form/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">entityOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;entityOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="审批通过" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${expenseReportOID}&quot;,&quot;entityType&quot;:1002,&quot;approverOID&quot;:&quot;${applicantOID}&quot;}],&quot;approvalTxt&quot;:&quot;审批通过&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/approvals/pass</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="282682134">{&quot;successNum&quot;:1,&quot;failNum&quot;:0,&quot;failReason&quot;:{}}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="通知（有通知消息）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entityType&quot;:1002,&quot;entityOID&quot;:&quot;${expenseReportOID}&quot;,&quot;notice&quot;:&quot;通知内容&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/approval/send/notice</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="3569038">true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登出" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="报销单通知(无通知消息)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <longProp name="ThreadGroup.start_time">1522048673000</longProp>
        <longProp name="ThreadGroup.end_time">1522048673000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="模块控制器" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="23750841">工作台</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="170071582">Test Fragment</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单创建" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
	&quot;id&quot;: 8862,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: &quot;&quot;,&#xd;
	&quot;formType&quot;: 3001,&#xd;
	&quot;asSystem&quot;: true,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;2018-04-18T02:35:24Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 48623,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253101,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253102,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;&#xd;
	}, {&#xd;
		&quot;id&quot;: 48624,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253103,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253104,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: null,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1002,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: null,&#xd;
	&quot;companyOID&quot;: &quot;b634aa55-09dd-4f44-9504-4b18ab2d0556&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;form.description&quot;: &quot;{\&quot;enable\&quot;:false,\&quot;en\&quot;:{\&quot;title\&quot;:\&quot;caption\&quot;,\&quot;content\&quot;:\&quot;content\&quot;},\&quot;zh_cn\&quot;:{\&quot;title\&quot;:\&quot;说明文字\&quot;,\&quot;content\&quot;:\&quot;描述内容\&quot;}}&quot;,&#xd;
		&quot;countersignTypeForSubmitter&quot;: &quot;2&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: 971590973585305600,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 48623,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253101,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253102,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;&#xd;
	}, {&#xd;
		&quot;id&quot;: 48624,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253103,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253104,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;currencySame&quot;: false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/draft</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取新建的单据号" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">businessCode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;businessCode&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取报销单OID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseReportOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseReportOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取applicantOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">applicantOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOIDs" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOIDs</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;approverOIDs&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取bizOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">bizOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;bizOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建费用" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;roommateEnabled&quot;: false,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;ownerOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;invoiceOID&quot;: null,&#xd;
	&quot;date&quot;: &quot;2018-05-31T08:04:31.594Z&quot;,&#xd;
	&quot;time&quot;: &quot;2018-05-31T08:04:31.594Z&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;48375&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;4eb0e9ab-94bc-48ba-b7db-b9c5cefeb20c&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;类型&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;no-image&quot;,&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: 500,&#xd;
	&quot;orderAmount&quot;: null,&#xd;
	&quot;orderCurrencyCode&quot;: null,&#xd;
	&quot;originalAmount&quot;: 500,&#xd;
	&quot;firstBringAmount&quot;: 0,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;国家&quot;,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;country&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;665a22db-7a70-481f-bd84-b16c8e89e6a0&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;i18n&quot;: {}&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: null,&#xd;
	&quot;comment&quot;: null,&#xd;
	&quot;createdDate&quot;: &quot;2018-05-31T08:04:32.255Z&quot;,&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: null,&#xd;
	&quot;createTime&quot;: &quot;2018-05-31T08:04:32.255Z&quot;,&#xd;
	&quot;approvalOperateDTOList&quot;: null,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;rejectReason&quot;: null,&#xd;
	&quot;approverId&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: null,&#xd;
	&quot;paymentType&quot;: 1001,&#xd;
	&quot;payByCompany&quot;: false,&#xd;
	&quot;expenseApportion&quot;: [],&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;preCreatedDate&quot;: &quot;2018-05-31T08:04:32.255Z&quot;,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;companyOpenInvoice&quot;: true,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;baseAmount&quot;: 0,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/invoices/expense/report</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="353040032">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单详情（旧）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取费用信息" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID_1;expenseReportInvoiceOID_1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[0].invoiceOID;$.expenseReportInvoices[0].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单提交" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;applicantName&quot;: &quot;自动化测试Admin&quot;,&#xd;
	&quot;applicantOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;approverOIDs&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;baseCurrencyAmount&quot;: 500,&#xd;
	&quot;baseCurrencyRealPayAmount&quot;: 500,&#xd;
	&quot;businessCode&quot;: &quot;${businessCode}&quot;,&#xd;
	&quot;companyOID&quot;: &quot;b634aa55-09dd-4f44-9504-4b18ab2d0556&quot;,&#xd;
	&quot;corporationOID&quot;: &quot;ab577d17-9a43-4d53-90b0-a8fa2cfbfab9&quot;,&#xd;
	&quot;createdBy&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
	&quot;createdName&quot;: &quot;自动化测试Admin&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;currencyCodeName&quot;: &quot;人民币&quot;,&#xd;
	&quot;currencySame&quot;: false,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;67ff9fab-a4d6-4deb-990c-fdfd5b3b299e&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;showValue&quot;: &quot;HLY自动化测试团&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: true,&#xd;
		&quot;refCostCenterOID&quot;: null,&#xd;
		&quot;headerTmplateName&quot;: &quot;部门&quot;,&#xd;
		&quot;headerTmplateValue&quot;: &quot;HLY自动化测试团&quot;&#xd;
	}, {&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;6c6a635e-f21f-40b1-9bca-7bdaa9bbfc86&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;showValue&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: true,&#xd;
		&quot;refCostCenterOID&quot;: null,&#xd;
		&quot;headerTmplateName&quot;: &quot;事由&quot;,&#xd;
		&quot;headerTmplateValue&quot;: &quot;自动化日常报销单&quot;&#xd;
	}, {&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;e188de2c-dab7-43e8-9cde-426fa87bc36e&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;showValue&quot;: &quot;自动化测试Admin&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: null,&#xd;
		&quot;refCostCenterOID&quot;: null,&#xd;
		&quot;headerTmplateName&quot;: &quot;审批人&quot;,&#xd;
		&quot;headerTmplateValue&quot;: &quot;自动化测试Admin&quot;&#xd;
	}],&#xd;
	&quot;departmentName&quot;: &quot;HLY自动化测试团&quot;,&#xd;
	&quot;departmentOID&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
	&quot;departmentPath&quot;: &quot;HLY自动化测试团&quot;,&#xd;
	&quot;expenseReportInvoices&quot;: [{&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
		&quot;expenseReportInvoiceOID&quot;: &quot;${expenseReportInvoiceOID_1}&quot;,&#xd;
		&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;invoiceOID&quot;: &quot;${invoiceOID_1}&quot;,&#xd;
		&quot;invoiceView&quot;: {&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_1}&quot;,&#xd;
			&quot;expenseTypeId&quot;: &quot;48375&quot;,&#xd;
			&quot;expenseTypeOID&quot;: &quot;4eb0e9ab-94bc-48ba-b7db-b9c5cefeb20c&quot;,&#xd;
			&quot;expenseTypeName&quot;: &quot;餐补&quot;,&#xd;
			&quot;crossCheckStatus&quot;: null,&#xd;
			&quot;expenseTypeKey&quot;: null,&#xd;
			&quot;expenseTypeIconName&quot;: &quot;mealAllowance&quot;,&#xd;
			&quot;phoneNumber&quot;: null,&#xd;
			&quot;email&quot;: null,&#xd;
			&quot;expenseTypeIconURL&quot;: &quot;http://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//1af2a30d-9719-419b-a7ef-68078462baed/expenseIcon/6fdf86e4-9432-4546-b60b-53ea4ad922a1-mealAllowance.png&quot;,&#xd;
			&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
			&quot;expenseTypeCategoryDTO&quot;: {&#xd;
				&quot;expenseTypeCategoryOID&quot;: &quot;138e5d0c-6ea9-473f-afb7-8733eaf352c1&quot;,&#xd;
				&quot;name&quot;: &quot;费用类型&quot;,&#xd;
				&quot;code&quot;: null&#xd;
			},&#xd;
			&quot;costCenterItemOID&quot;: null,&#xd;
			&quot;costCenterItemName&quot;: null,&#xd;
			&quot;amount&quot;: 500,&#xd;
			&quot;originalAmount&quot;: 500,&#xd;
			&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;userOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
			&quot;mobile&quot;: null,&#xd;
			&quot;employeeId&quot;: null,&#xd;
			&quot;data&quot;: [{&#xd;
				&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
				&quot;name&quot;: &quot;国家&quot;,&#xd;
				&quot;value&quot;: null,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;country&quot;,&#xd;
				&quot;sequence&quot;: 1,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;665a22db-7a70-481f-bd84-b16c8e89e6a0&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: null,&#xd;
				&quot;isDefaultValueConfigurable&quot;: true,&#xd;
				&quot;isCommonField&quot;: false,&#xd;
				&quot;i18n&quot;: null&#xd;
			}],&#xd;
			&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
			&quot;comment&quot;: null,&#xd;
			&quot;warning&quot;: &quot;&quot;,&#xd;
			&quot;overtime&quot;: &quot;N&quot;,&#xd;
			&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
			&quot;createdDate&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
			&quot;attachments&quot;: [],&#xd;
			&quot;withReceipt&quot;: true,&#xd;
			&quot;readonly&quot;: false,&#xd;
			&quot;businessCode&quot;: null,&#xd;
			&quot;createLocation&quot;: null,&#xd;
			&quot;createTime&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
			&quot;rejectType&quot;: null,&#xd;
			&quot;rejectReason&quot;: null,&#xd;
			&quot;approverId&quot;: null,&#xd;
			&quot;approvalStepId&quot;: null,&#xd;
			&quot;approvalOperates&quot;: null,&#xd;
			&quot;approver&quot;: null,&#xd;
			&quot;referenceId&quot;: null,&#xd;
			&quot;unitPrice&quot;: null,&#xd;
			&quot;number&quot;: null,&#xd;
			&quot;receiptFailType&quot;: null,&#xd;
			&quot;receiptFailReason&quot;: null,&#xd;
			&quot;valid&quot;: false,&#xd;
			&quot;receiptID&quot;: null,&#xd;
			&quot;cardSignType&quot;: null,&#xd;
			&quot;nonVATinclusiveAmount&quot;: null,&#xd;
			&quot;taxAmount&quot;: null,&#xd;
			&quot;receiptType&quot;: null,&#xd;
			&quot;receiptTypeNo&quot;: null,&#xd;
			&quot;invoiceCode&quot;: null,&#xd;
			&quot;invoiceNumber&quot;: null,&#xd;
			&quot;invoiceDate&quot;: null,&#xd;
			&quot;priceTaxAmount&quot;: null,&#xd;
			&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
			&quot;receiptGoodsID&quot;: null,&#xd;
			&quot;taxRate&quot;: null,&#xd;
			&quot;checkCode&quot;: null,&#xd;
			&quot;invoiceLabelDTOS&quot;: [],&#xd;
			&quot;invoiceLabels&quot;: [],&#xd;
			&quot;companyOID&quot;: null,&#xd;
			&quot;invoiceInstead&quot;: false,&#xd;
			&quot;invoiceInsteadReason&quot;: null,&#xd;
			&quot;paymentType&quot;: 1001,&#xd;
			&quot;source&quot;: null,&#xd;
			&quot;ownerOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
			&quot;checked&quot;: null,&#xd;
			&quot;createInvoice&quot;: true,&#xd;
			&quot;checkWarning&quot;: null,&#xd;
			&quot;digitalInvoice&quot;: null,&#xd;
			&quot;digitalInvoiceId&quot;: null,&#xd;
			&quot;actualCurrencyRate&quot;: 1,&#xd;
			&quot;originalActualCurrencyRate&quot;: 1,&#xd;
			&quot;companyCurrencyRate&quot;: 1,&#xd;
			&quot;actualCurrencyAmount&quot;: 500,&#xd;
			&quot;baseAmount&quot;: 500,&#xd;
			&quot;updateRate&quot;: false,&#xd;
			&quot;flightNo&quot;: null,&#xd;
			&quot;apportionUsed&quot;: false,&#xd;
			&quot;expenseApportion&quot;: null,&#xd;
			&quot;expenseReportOID&quot;: null,&#xd;
			&quot;amountChanged&quot;: null,&#xd;
			&quot;approvalStatus&quot;: null,&#xd;
			&quot;bankTransactionID&quot;: null,&#xd;
			&quot;expenseCreatedType&quot;: null,&#xd;
			&quot;overDue&quot;: null,&#xd;
			&quot;bankTransactionDetail&quot;: null,&#xd;
			&quot;baseCurrency&quot;: null,&#xd;
			&quot;subsidyRepeatedFlag&quot;: false,&#xd;
			&quot;orderAmount&quot;: 500,&#xd;
			&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
			&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
			&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
			&quot;receiptedStatus&quot;: 0,&#xd;
			&quot;stringCol1&quot;: null,&#xd;
			&quot;stringCol2&quot;: null,&#xd;
			&quot;vatInvoice&quot;: false,&#xd;
			&quot;stringCol3&quot;: null,&#xd;
			&quot;recognized&quot;: false,&#xd;
			&quot;status&quot;: 1000&#xd;
		},&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
		&quot;status&quot;: 1000&#xd;
	}],&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;expenseTypes&quot;: &quot;4eb0e9ab-94bc-48ba-b7db-b9c5cefeb20c&quot;,&#xd;
	&quot;filterFlag&quot;: true,&#xd;
	&quot;forceCount&quot;: 0,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;foreignCurrencyAmount&quot;: 500,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
	&quot;ignoreBudgetWarningFlag&quot;: false,&#xd;
	&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:19:47Z&quot;,&#xd;
	&quot;lastSubmittedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
	&quot;needApproval&quot;: false,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;overtimeCount&quot;: 0,&#xd;
	&quot;personalPaymentAmount&quot;: 500,&#xd;
	&quot;personalPaymentBaseAmount&quot;: 500,&#xd;
	&quot;printFree&quot;: false,&#xd;
	&quot;printable&quot;: true,&#xd;
	&quot;realPaymentAmount&quot;: 500,&#xd;
	&quot;realPaymentBaseAmount&quot;: 500,&#xd;
	&quot;rejectType&quot;: 1000,&#xd;
	&quot;reviewedFlag&quot;: false,&#xd;
	&quot;setOfBooksId&quot;: 971590973727912000,&#xd;
	&quot;splitStatus&quot;: 0,&#xd;
	&quot;status&quot;: 1001,&#xd;
	&quot;statusView&quot;: 1001,&#xd;
	&quot;subCompanyOID&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
	&quot;tenantId&quot;: 971590973585305600,&#xd;
	&quot;title&quot;: &quot;自动化日常报销单&quot;,&#xd;
	&quot;totalAmount&quot;: 500,&#xd;
	&quot;travelStandardValid&quot;: 1001,&#xd;
	&quot;travelStandardWarning&quot;: false,&#xd;
	&quot;type&quot;: 1001,&#xd;
	&quot;withReceiptAmount&quot;: 500,&#xd;
	&quot;withoutReceiptAmount&quot;: 0,&#xd;
	&quot;writeoffFlag&quot;: false,&#xd;
	&quot;warnning&quot;: null,&#xd;
	&quot;loanApplicationOID&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/expense/reports/custom/form/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">entityOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;entityOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="审批通过" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${expenseReportOID}&quot;,&quot;entityType&quot;:1002,&quot;approverOID&quot;:&quot;${applicantOID}&quot;}],&quot;approvalTxt&quot;:&quot;审批通过&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/approvals/pass</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="282682134">{&quot;successNum&quot;:1,&quot;failNum&quot;:0,&quot;failReason&quot;:{}}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="通知（无通知消息）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entityType&quot;:1002,&quot;entityOID&quot;:&quot;${expenseReportOID}&quot;,&quot;notice&quot;:&quot;&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/approval/send/notice</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-436251180">&quot;message&quot;:&quot;验证失败&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登出" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="报销单财务打印" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <longProp name="ThreadGroup.start_time">1522048673000</longProp>
        <longProp name="ThreadGroup.end_time">1522048673000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="模块控制器" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="23750841">工作台</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="170071582">Test Fragment</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单创建" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
	&quot;id&quot;: 8862,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: &quot;&quot;,&#xd;
	&quot;formType&quot;: 3001,&#xd;
	&quot;asSystem&quot;: true,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;2018-04-18T02:35:24Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 48623,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253101,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253102,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;&#xd;
	}, {&#xd;
		&quot;id&quot;: 48624,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253103,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253104,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: null,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1002,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: null,&#xd;
	&quot;companyOID&quot;: &quot;b634aa55-09dd-4f44-9504-4b18ab2d0556&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;form.description&quot;: &quot;{\&quot;enable\&quot;:false,\&quot;en\&quot;:{\&quot;title\&quot;:\&quot;caption\&quot;,\&quot;content\&quot;:\&quot;content\&quot;},\&quot;zh_cn\&quot;:{\&quot;title\&quot;:\&quot;说明文字\&quot;,\&quot;content\&quot;:\&quot;描述内容\&quot;}}&quot;,&#xd;
		&quot;countersignTypeForSubmitter&quot;: &quot;2&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: 971590973585305600,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 48623,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253101,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253102,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;&#xd;
	}, {&#xd;
		&quot;id&quot;: 48624,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T04:00:45Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253103,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 253104,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;currencySame&quot;: false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/draft</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取新建的单据号" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">businessCode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;businessCode&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取报销单OID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseReportOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseReportOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取applicantOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">applicantOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOIDs" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOIDs</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;approverOIDs&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取bizOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">bizOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;bizOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建费用" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;roommateEnabled&quot;: false,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;ownerOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;invoiceOID&quot;: null,&#xd;
	&quot;date&quot;: &quot;2018-05-31T08:04:31.594Z&quot;,&#xd;
	&quot;time&quot;: &quot;2018-05-31T08:04:31.594Z&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;48375&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;4eb0e9ab-94bc-48ba-b7db-b9c5cefeb20c&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;类型&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;no-image&quot;,&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: 500,&#xd;
	&quot;orderAmount&quot;: null,&#xd;
	&quot;orderCurrencyCode&quot;: null,&#xd;
	&quot;originalAmount&quot;: 500,&#xd;
	&quot;firstBringAmount&quot;: 0,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;国家&quot;,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;country&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;665a22db-7a70-481f-bd84-b16c8e89e6a0&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;i18n&quot;: {}&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: null,&#xd;
	&quot;comment&quot;: null,&#xd;
	&quot;createdDate&quot;: &quot;2018-05-31T08:04:32.255Z&quot;,&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: null,&#xd;
	&quot;createTime&quot;: &quot;2018-05-31T08:04:32.255Z&quot;,&#xd;
	&quot;approvalOperateDTOList&quot;: null,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;rejectReason&quot;: null,&#xd;
	&quot;approverId&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: null,&#xd;
	&quot;paymentType&quot;: 1001,&#xd;
	&quot;payByCompany&quot;: false,&#xd;
	&quot;expenseApportion&quot;: [],&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;preCreatedDate&quot;: &quot;2018-05-31T08:04:32.255Z&quot;,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;companyOpenInvoice&quot;: true,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;baseAmount&quot;: 0,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/invoices/expense/report</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="353040032">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单详情（旧）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取费用信息" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID_1;expenseReportInvoiceOID_1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[0].invoiceOID;$.expenseReportInvoices[0].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单提交" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;applicantName&quot;: &quot;自动化测试Admin&quot;,&#xd;
	&quot;applicantOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;approverOIDs&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;baseCurrencyAmount&quot;: 500,&#xd;
	&quot;baseCurrencyRealPayAmount&quot;: 500,&#xd;
	&quot;businessCode&quot;: &quot;${businessCode}&quot;,&#xd;
	&quot;companyOID&quot;: &quot;b634aa55-09dd-4f44-9504-4b18ab2d0556&quot;,&#xd;
	&quot;corporationOID&quot;: &quot;ab577d17-9a43-4d53-90b0-a8fa2cfbfab9&quot;,&#xd;
	&quot;createdBy&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
	&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
	&quot;createdName&quot;: &quot;自动化测试Admin&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;currencyCodeName&quot;: &quot;人民币&quot;,&#xd;
	&quot;currencySame&quot;: false,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;67ff9fab-a4d6-4deb-990c-fdfd5b3b299e&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;e8dbf1dc-07d6-420c-90a9-542ccec45748&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;showValue&quot;: &quot;HLY自动化测试团&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: true,&#xd;
		&quot;refCostCenterOID&quot;: null,&#xd;
		&quot;headerTmplateName&quot;: &quot;部门&quot;,&#xd;
		&quot;headerTmplateValue&quot;: &quot;HLY自动化测试团&quot;&#xd;
	}, {&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;6c6a635e-f21f-40b1-9bca-7bdaa9bbfc86&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;10c7201b-aa56-42f2-865c-88b87ec8af60&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;showValue&quot;: &quot;自动化日常报销单&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: true,&#xd;
		&quot;refCostCenterOID&quot;: null,&#xd;
		&quot;headerTmplateName&quot;: &quot;事由&quot;,&#xd;
		&quot;headerTmplateValue&quot;: &quot;自动化日常报销单&quot;&#xd;
	}, {&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;e188de2c-dab7-43e8-9cde-426fa87bc36e&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;showValue&quot;: &quot;自动化测试Admin&quot;,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: null,&#xd;
		&quot;refCostCenterOID&quot;: null,&#xd;
		&quot;headerTmplateName&quot;: &quot;审批人&quot;,&#xd;
		&quot;headerTmplateValue&quot;: &quot;自动化测试Admin&quot;&#xd;
	}],&#xd;
	&quot;departmentName&quot;: &quot;HLY自动化测试团&quot;,&#xd;
	&quot;departmentOID&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
	&quot;departmentPath&quot;: &quot;HLY自动化测试团&quot;,&#xd;
	&quot;expenseReportInvoices&quot;: [{&#xd;
		&quot;createdDate&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
		&quot;expenseReportInvoiceOID&quot;: &quot;${expenseReportInvoiceOID_1}&quot;,&#xd;
		&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;invoiceOID&quot;: &quot;${invoiceOID_1}&quot;,&#xd;
		&quot;invoiceView&quot;: {&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_1}&quot;,&#xd;
			&quot;expenseTypeId&quot;: &quot;48375&quot;,&#xd;
			&quot;expenseTypeOID&quot;: &quot;4eb0e9ab-94bc-48ba-b7db-b9c5cefeb20c&quot;,&#xd;
			&quot;expenseTypeName&quot;: &quot;餐补&quot;,&#xd;
			&quot;crossCheckStatus&quot;: null,&#xd;
			&quot;expenseTypeKey&quot;: null,&#xd;
			&quot;expenseTypeIconName&quot;: &quot;mealAllowance&quot;,&#xd;
			&quot;phoneNumber&quot;: null,&#xd;
			&quot;email&quot;: null,&#xd;
			&quot;expenseTypeIconURL&quot;: &quot;http://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//1af2a30d-9719-419b-a7ef-68078462baed/expenseIcon/6fdf86e4-9432-4546-b60b-53ea4ad922a1-mealAllowance.png&quot;,&#xd;
			&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
			&quot;expenseTypeCategoryDTO&quot;: {&#xd;
				&quot;expenseTypeCategoryOID&quot;: &quot;138e5d0c-6ea9-473f-afb7-8733eaf352c1&quot;,&#xd;
				&quot;name&quot;: &quot;费用类型&quot;,&#xd;
				&quot;code&quot;: null&#xd;
			},&#xd;
			&quot;costCenterItemOID&quot;: null,&#xd;
			&quot;costCenterItemName&quot;: null,&#xd;
			&quot;amount&quot;: 500,&#xd;
			&quot;originalAmount&quot;: 500,&#xd;
			&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;userOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
			&quot;mobile&quot;: null,&#xd;
			&quot;employeeId&quot;: null,&#xd;
			&quot;data&quot;: [{&#xd;
				&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
				&quot;name&quot;: &quot;国家&quot;,&#xd;
				&quot;value&quot;: null,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;country&quot;,&#xd;
				&quot;sequence&quot;: 1,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;665a22db-7a70-481f-bd84-b16c8e89e6a0&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: null,&#xd;
				&quot;isDefaultValueConfigurable&quot;: true,&#xd;
				&quot;isCommonField&quot;: false,&#xd;
				&quot;i18n&quot;: null&#xd;
			}],&#xd;
			&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
			&quot;comment&quot;: null,&#xd;
			&quot;warning&quot;: &quot;&quot;,&#xd;
			&quot;overtime&quot;: &quot;N&quot;,&#xd;
			&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
			&quot;createdDate&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
			&quot;attachments&quot;: [],&#xd;
			&quot;withReceipt&quot;: true,&#xd;
			&quot;readonly&quot;: false,&#xd;
			&quot;businessCode&quot;: null,&#xd;
			&quot;createLocation&quot;: null,&#xd;
			&quot;createTime&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
			&quot;rejectType&quot;: null,&#xd;
			&quot;rejectReason&quot;: null,&#xd;
			&quot;approverId&quot;: null,&#xd;
			&quot;approvalStepId&quot;: null,&#xd;
			&quot;approvalOperates&quot;: null,&#xd;
			&quot;approver&quot;: null,&#xd;
			&quot;referenceId&quot;: null,&#xd;
			&quot;unitPrice&quot;: null,&#xd;
			&quot;number&quot;: null,&#xd;
			&quot;receiptFailType&quot;: null,&#xd;
			&quot;receiptFailReason&quot;: null,&#xd;
			&quot;valid&quot;: false,&#xd;
			&quot;receiptID&quot;: null,&#xd;
			&quot;cardSignType&quot;: null,&#xd;
			&quot;nonVATinclusiveAmount&quot;: null,&#xd;
			&quot;taxAmount&quot;: null,&#xd;
			&quot;receiptType&quot;: null,&#xd;
			&quot;receiptTypeNo&quot;: null,&#xd;
			&quot;invoiceCode&quot;: null,&#xd;
			&quot;invoiceNumber&quot;: null,&#xd;
			&quot;invoiceDate&quot;: null,&#xd;
			&quot;priceTaxAmount&quot;: null,&#xd;
			&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
			&quot;receiptGoodsID&quot;: null,&#xd;
			&quot;taxRate&quot;: null,&#xd;
			&quot;checkCode&quot;: null,&#xd;
			&quot;invoiceLabelDTOS&quot;: [],&#xd;
			&quot;invoiceLabels&quot;: [],&#xd;
			&quot;companyOID&quot;: null,&#xd;
			&quot;invoiceInstead&quot;: false,&#xd;
			&quot;invoiceInsteadReason&quot;: null,&#xd;
			&quot;paymentType&quot;: 1001,&#xd;
			&quot;source&quot;: null,&#xd;
			&quot;ownerOID&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
			&quot;checked&quot;: null,&#xd;
			&quot;createInvoice&quot;: true,&#xd;
			&quot;checkWarning&quot;: null,&#xd;
			&quot;digitalInvoice&quot;: null,&#xd;
			&quot;digitalInvoiceId&quot;: null,&#xd;
			&quot;actualCurrencyRate&quot;: 1,&#xd;
			&quot;originalActualCurrencyRate&quot;: 1,&#xd;
			&quot;companyCurrencyRate&quot;: 1,&#xd;
			&quot;actualCurrencyAmount&quot;: 500,&#xd;
			&quot;baseAmount&quot;: 500,&#xd;
			&quot;updateRate&quot;: false,&#xd;
			&quot;flightNo&quot;: null,&#xd;
			&quot;apportionUsed&quot;: false,&#xd;
			&quot;expenseApportion&quot;: null,&#xd;
			&quot;expenseReportOID&quot;: null,&#xd;
			&quot;amountChanged&quot;: null,&#xd;
			&quot;approvalStatus&quot;: null,&#xd;
			&quot;bankTransactionID&quot;: null,&#xd;
			&quot;expenseCreatedType&quot;: null,&#xd;
			&quot;overDue&quot;: null,&#xd;
			&quot;bankTransactionDetail&quot;: null,&#xd;
			&quot;baseCurrency&quot;: null,&#xd;
			&quot;subsidyRepeatedFlag&quot;: false,&#xd;
			&quot;orderAmount&quot;: 500,&#xd;
			&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
			&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
			&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
			&quot;receiptedStatus&quot;: 0,&#xd;
			&quot;stringCol1&quot;: null,&#xd;
			&quot;stringCol2&quot;: null,&#xd;
			&quot;vatInvoice&quot;: false,&#xd;
			&quot;stringCol3&quot;: null,&#xd;
			&quot;recognized&quot;: false,&#xd;
			&quot;status&quot;: 1000&#xd;
		},&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:04:45Z&quot;,&#xd;
		&quot;status&quot;: 1000&#xd;
	}],&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;expenseTypes&quot;: &quot;4eb0e9ab-94bc-48ba-b7db-b9c5cefeb20c&quot;,&#xd;
	&quot;filterFlag&quot;: true,&#xd;
	&quot;forceCount&quot;: 0,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;foreignCurrencyAmount&quot;: 500,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;formOID&quot;: &quot;181edfd0-2aee-486a-8a7b-8bb76ac7be0d&quot;,&#xd;
	&quot;ignoreBudgetWarningFlag&quot;: false,&#xd;
	&quot;lastModifiedDate&quot;: &quot;2018-05-31T08:19:47Z&quot;,&#xd;
	&quot;lastSubmittedDate&quot;: &quot;2018-05-31T08:02:28Z&quot;,&#xd;
	&quot;needApproval&quot;: false,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;overtimeCount&quot;: 0,&#xd;
	&quot;personalPaymentAmount&quot;: 500,&#xd;
	&quot;personalPaymentBaseAmount&quot;: 500,&#xd;
	&quot;printFree&quot;: false,&#xd;
	&quot;printable&quot;: true,&#xd;
	&quot;realPaymentAmount&quot;: 500,&#xd;
	&quot;realPaymentBaseAmount&quot;: 500,&#xd;
	&quot;rejectType&quot;: 1000,&#xd;
	&quot;reviewedFlag&quot;: false,&#xd;
	&quot;setOfBooksId&quot;: 971590973727912000,&#xd;
	&quot;splitStatus&quot;: 0,&#xd;
	&quot;status&quot;: 1001,&#xd;
	&quot;statusView&quot;: 1001,&#xd;
	&quot;subCompanyOID&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
	&quot;tenantId&quot;: 971590973585305600,&#xd;
	&quot;title&quot;: &quot;自动化日常报销单&quot;,&#xd;
	&quot;totalAmount&quot;: 500,&#xd;
	&quot;travelStandardValid&quot;: 1001,&#xd;
	&quot;travelStandardWarning&quot;: false,&#xd;
	&quot;type&quot;: 1001,&#xd;
	&quot;withReceiptAmount&quot;: 500,&#xd;
	&quot;withoutReceiptAmount&quot;: 0,&#xd;
	&quot;writeoffFlag&quot;: false,&#xd;
	&quot;warnning&quot;: null,&#xd;
	&quot;loanApplicationOID&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/expense/reports/custom/form/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">entityOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;entityOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="审批通过" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${expenseReportOID}&quot;,&quot;entityType&quot;:1002,&quot;approverOID&quot;:&quot;${applicantOID}&quot;}],&quot;approvalTxt&quot;:&quot;审批通过&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/approvals/pass</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="282682134">{&quot;successNum&quot;:1,&quot;failNum&quot;:0,&quot;failReason&quot;:{}}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="财务打印" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/expense/reports/generate/pdf/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登出" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="借款单审核通过" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1522132842000</longProp>
        <longProp name="ThreadGroup.end_time">1522132842000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="模块控制器" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="23750841">工作台</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="170071582">Test Fragment</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建申请借款单" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
	&quot;id&quot;: 8861,&#xd;
	&quot;formName&quot;: &quot;借款申请单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: &quot;loan_application_form&quot;,&#xd;
	&quot;formType&quot;: 2005,&#xd;
	&quot;asSystem&quot;: true,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;2018-04-18T02:35:24Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 48619,&#xd;
		&quot;fieldOID&quot;: &quot;04eabd7b-9486-4b44-aa58-2e900014a027&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-01-25T22:04:44Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请输入&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;借钱&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: &quot;title&quot;,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;04eabd7b-9486-4b44-aa58-2e900014a027&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145407,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;04eabd7b-9486-4b44-aa58-2e900014a027&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145408,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 48620,&#xd;
		&quot;fieldOID&quot;: &quot;a5264031-d54b-4cc1-9653-2c2abf94c51f&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-01-25T22:04:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: &quot;department&quot;,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;a5264031-d54b-4cc1-9653-2c2abf94c51f&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145409,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;a5264031-d54b-4cc1-9653-2c2abf94c51f&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145410,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;,&#xd;
		&quot;selected&quot;: null&#xd;
	}, {&#xd;
		&quot;id&quot;: 48621,&#xd;
		&quot;fieldOID&quot;: &quot;86f1fe45-b27b-46f2-b531-3deaf7638fbd&quot;,&#xd;
		&quot;sequence&quot;: 4,&#xd;
		&quot;messageKey&quot;: &quot;total_budget&quot;,&#xd;
		&quot;fieldName&quot;: &quot;借款金额&quot;,&#xd;
		&quot;fieldType&quot;: &quot;DOUBLE&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-02-03T02:30:12Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: 1000,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: &quot;department&quot;,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;86f1fe45-b27b-46f2-b531-3deaf7638fbd&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145411,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;借款金额&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;86f1fe45-b27b-46f2-b531-3deaf7638fbd&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145412,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Loan amount&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}],&#xd;
		&quot;integerMaxLength&quot;: 100,&#xd;
		&quot;decimalMaxLength&quot;: 2&#xd;
	}, {&#xd;
		&quot;id&quot;: 48622,&#xd;
		&quot;fieldOID&quot;: &quot;2c1cbaa1-378d-459c-97f1-16d1b7421f88&quot;,&#xd;
		&quot;sequence&quot;: 5,&#xd;
		&quot;messageKey&quot;: &quot;date&quot;,&#xd;
		&quot;fieldName&quot;: &quot;预计还款日期&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-01-25T22:04:48Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;2018-05-30T16:00:00.000Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;2c1cbaa1-378d-459c-97f1-16d1b7421f88&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145413,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;预计还款日期&quot;,&#xd;
			&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;2c1cbaa1-378d-459c-97f1-16d1b7421f88&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145414,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;date&quot;,&#xd;
			&quot;promptInfo&quot;: &quot;Please select&quot;,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [],&#xd;
		&quot;approvalSelectedName&quot;: null,&#xd;
		&quot;maxApprovalChain&quot;: 3,&#xd;
		&quot;personName&quot;: &quot;自动化测试Admin&quot;&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: &quot;系统默认申请单，不可修改&quot;,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1001,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: &quot;loan_application&quot;,&#xd;
	&quot;companyOID&quot;: &quot;b634aa55-09dd-4f44-9504-4b18ab2d0556&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;countersignTypeForSubmitter&quot;: &quot;2&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: 971590973585305600,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 48619,&#xd;
		&quot;fieldOID&quot;: &quot;04eabd7b-9486-4b44-aa58-2e900014a027&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-01-25T22:04:44Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请输入&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;借钱&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: &quot;title&quot;,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;04eabd7b-9486-4b44-aa58-2e900014a027&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145407,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;04eabd7b-9486-4b44-aa58-2e900014a027&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145408,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 48620,&#xd;
		&quot;fieldOID&quot;: &quot;a5264031-d54b-4cc1-9653-2c2abf94c51f&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-01-25T22:04:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: &quot;department&quot;,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;a5264031-d54b-4cc1-9653-2c2abf94c51f&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145409,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;a5264031-d54b-4cc1-9653-2c2abf94c51f&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145410,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;,&#xd;
		&quot;selected&quot;: null&#xd;
	}, {&#xd;
		&quot;id&quot;: 48621,&#xd;
		&quot;fieldOID&quot;: &quot;86f1fe45-b27b-46f2-b531-3deaf7638fbd&quot;,&#xd;
		&quot;sequence&quot;: 4,&#xd;
		&quot;messageKey&quot;: &quot;total_budget&quot;,&#xd;
		&quot;fieldName&quot;: &quot;借款金额&quot;,&#xd;
		&quot;fieldType&quot;: &quot;DOUBLE&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-02-03T02:30:12Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: 1000,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: &quot;department&quot;,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;86f1fe45-b27b-46f2-b531-3deaf7638fbd&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145411,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;借款金额&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;86f1fe45-b27b-46f2-b531-3deaf7638fbd&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145412,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Loan amount&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}],&#xd;
		&quot;integerMaxLength&quot;: 100,&#xd;
		&quot;decimalMaxLength&quot;: 2&#xd;
	}, {&#xd;
		&quot;id&quot;: 48622,&#xd;
		&quot;fieldOID&quot;: &quot;2c1cbaa1-378d-459c-97f1-16d1b7421f88&quot;,&#xd;
		&quot;sequence&quot;: 5,&#xd;
		&quot;messageKey&quot;: &quot;date&quot;,&#xd;
		&quot;fieldName&quot;: &quot;预计还款日期&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-01-25T22:04:48Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;2018-05-30T16:00:00.000Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;2c1cbaa1-378d-459c-97f1-16d1b7421f88&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145413,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;预计还款日期&quot;,&#xd;
			&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;2c1cbaa1-378d-459c-97f1-16d1b7421f88&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145414,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;date&quot;,&#xd;
			&quot;promptInfo&quot;: &quot;Please select&quot;,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [],&#xd;
		&quot;approvalSelectedName&quot;: null,&#xd;
		&quot;maxApprovalChain&quot;: 3,&#xd;
		&quot;personName&quot;: &quot;自动化测试Admin&quot;&#xd;
	}],&#xd;
	&quot;personalPaymentAmount&quot;: 0,&#xd;
	&quot;companyPaymentAmount&quot;: 0,&#xd;
	&quot;totalBudget&quot;: 0&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/loan/application/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取entityOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">entityOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicationOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="借款单审批" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${entityOID}&quot;,&quot;entityType&quot;:1001,&quot;approverOID&quot;:&quot;${approverOID}&quot;}],&quot;approvalTxt&quot;:&quot;借款单审批&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/approvals/pass</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="282682134">{&quot;successNum&quot;:1,&quot;failNum&quot;:0,&quot;failReason&quot;:{}}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="借款单审核通过" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${entityOID}&quot;,&quot;entityType&quot;:1001}],&quot;approvalTxt&quot;:&quot;借款单审核通过&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/audit/pass</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="282682134">{&quot;successNum&quot;:1,&quot;failNum&quot;:0,&quot;failReason&quot;:{}}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="借款单确认付款" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;businessCode&quot;:null,&quot;status&quot;:&quot;prending_pay&quot;,&quot;startDate&quot;:null,&quot;endDate&quot;:null,&quot;corporationOIDs&quot;:[],&quot;formOIDs&quot;:[],&quot;selectMode&quot;:&quot;current_page&quot;,&quot;entityType&quot;:1002,&quot;entityOIDs&quot;:[&quot;${entityOID}&quot;],&quot;excludedEntityOIDs&quot;:[],&quot;comment&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/reimbursement/batch/pay/processing/confirm</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取reimbursementBatchOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">reimbursementBatchOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;reimbursementBatchOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="借款单确认已付款" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;businessCode&quot;:null,&quot;status&quot;:&quot;pay_in_process&quot;,&quot;startDate&quot;:null,&quot;endDate&quot;:null,&quot;corporationOIDs&quot;:[],&quot;formOIDs&quot;:[],&quot;selectMode&quot;:&quot;current_page&quot;,&quot;entityType&quot;:1002,&quot;entityOIDs&quot;:[&quot;${entityOID}&quot;],&quot;excludedEntityOIDs&quot;:[],&quot;comment&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/reimbursement/batch/pay/finished/confirm</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="借款单明细导出" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/reimbursement/batch/detail/export?reimbursementBatchOID=${reimbursementBatchOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登出" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="借款单审核驳回（有驳回意见）" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1522132842000</longProp>
        <longProp name="ThreadGroup.end_time">1522132842000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="模块控制器" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="23750841">工作台</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="170071582">Test Fragment</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建申请借款单" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
	&quot;id&quot;: 8861,&#xd;
	&quot;formName&quot;: &quot;借款申请单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: &quot;loan_application_form&quot;,&#xd;
	&quot;formType&quot;: 2005,&#xd;
	&quot;asSystem&quot;: true,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;2018-04-18T02:35:24Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 48619,&#xd;
		&quot;fieldOID&quot;: &quot;04eabd7b-9486-4b44-aa58-2e900014a027&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-01-25T22:04:44Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请输入&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;借钱&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: &quot;title&quot;,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;04eabd7b-9486-4b44-aa58-2e900014a027&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145407,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;04eabd7b-9486-4b44-aa58-2e900014a027&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145408,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 48620,&#xd;
		&quot;fieldOID&quot;: &quot;a5264031-d54b-4cc1-9653-2c2abf94c51f&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-01-25T22:04:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: &quot;department&quot;,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;a5264031-d54b-4cc1-9653-2c2abf94c51f&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145409,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;a5264031-d54b-4cc1-9653-2c2abf94c51f&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145410,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;,&#xd;
		&quot;selected&quot;: null&#xd;
	}, {&#xd;
		&quot;id&quot;: 48621,&#xd;
		&quot;fieldOID&quot;: &quot;86f1fe45-b27b-46f2-b531-3deaf7638fbd&quot;,&#xd;
		&quot;sequence&quot;: 4,&#xd;
		&quot;messageKey&quot;: &quot;total_budget&quot;,&#xd;
		&quot;fieldName&quot;: &quot;借款金额&quot;,&#xd;
		&quot;fieldType&quot;: &quot;DOUBLE&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-02-03T02:30:12Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: 1000,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: &quot;department&quot;,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;86f1fe45-b27b-46f2-b531-3deaf7638fbd&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145411,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;借款金额&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;86f1fe45-b27b-46f2-b531-3deaf7638fbd&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145412,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Loan amount&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}],&#xd;
		&quot;integerMaxLength&quot;: 100,&#xd;
		&quot;decimalMaxLength&quot;: 2&#xd;
	}, {&#xd;
		&quot;id&quot;: 48622,&#xd;
		&quot;fieldOID&quot;: &quot;2c1cbaa1-378d-459c-97f1-16d1b7421f88&quot;,&#xd;
		&quot;sequence&quot;: 5,&#xd;
		&quot;messageKey&quot;: &quot;date&quot;,&#xd;
		&quot;fieldName&quot;: &quot;预计还款日期&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-01-25T22:04:48Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;2018-05-30T16:00:00.000Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;2c1cbaa1-378d-459c-97f1-16d1b7421f88&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145413,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;预计还款日期&quot;,&#xd;
			&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;2c1cbaa1-378d-459c-97f1-16d1b7421f88&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145414,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;date&quot;,&#xd;
			&quot;promptInfo&quot;: &quot;Please select&quot;,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [],&#xd;
		&quot;approvalSelectedName&quot;: null,&#xd;
		&quot;maxApprovalChain&quot;: 3,&#xd;
		&quot;personName&quot;: &quot;自动化测试Admin&quot;&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: &quot;系统默认申请单，不可修改&quot;,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1001,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: &quot;loan_application&quot;,&#xd;
	&quot;companyOID&quot;: &quot;b634aa55-09dd-4f44-9504-4b18ab2d0556&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;countersignTypeForSubmitter&quot;: &quot;2&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: 971590973585305600,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 48619,&#xd;
		&quot;fieldOID&quot;: &quot;04eabd7b-9486-4b44-aa58-2e900014a027&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-01-25T22:04:44Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请输入&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;借钱&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: &quot;title&quot;,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;04eabd7b-9486-4b44-aa58-2e900014a027&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145407,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;04eabd7b-9486-4b44-aa58-2e900014a027&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145408,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 48620,&#xd;
		&quot;fieldOID&quot;: &quot;a5264031-d54b-4cc1-9653-2c2abf94c51f&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-01-25T22:04:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: &quot;department&quot;,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;a5264031-d54b-4cc1-9653-2c2abf94c51f&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145409,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;a5264031-d54b-4cc1-9653-2c2abf94c51f&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145410,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;,&#xd;
		&quot;selected&quot;: null&#xd;
	}, {&#xd;
		&quot;id&quot;: 48621,&#xd;
		&quot;fieldOID&quot;: &quot;86f1fe45-b27b-46f2-b531-3deaf7638fbd&quot;,&#xd;
		&quot;sequence&quot;: 4,&#xd;
		&quot;messageKey&quot;: &quot;total_budget&quot;,&#xd;
		&quot;fieldName&quot;: &quot;借款金额&quot;,&#xd;
		&quot;fieldType&quot;: &quot;DOUBLE&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-02-03T02:30:12Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: 1000,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: &quot;department&quot;,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;86f1fe45-b27b-46f2-b531-3deaf7638fbd&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145411,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;借款金额&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;86f1fe45-b27b-46f2-b531-3deaf7638fbd&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145412,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Loan amount&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}],&#xd;
		&quot;integerMaxLength&quot;: 100,&#xd;
		&quot;decimalMaxLength&quot;: 2&#xd;
	}, {&#xd;
		&quot;id&quot;: 48622,&#xd;
		&quot;fieldOID&quot;: &quot;2c1cbaa1-378d-459c-97f1-16d1b7421f88&quot;,&#xd;
		&quot;sequence&quot;: 5,&#xd;
		&quot;messageKey&quot;: &quot;date&quot;,&#xd;
		&quot;fieldName&quot;: &quot;预计还款日期&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-01-25T22:04:48Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;2018-05-30T16:00:00.000Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;2c1cbaa1-378d-459c-97f1-16d1b7421f88&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145413,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;预计还款日期&quot;,&#xd;
			&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;2c1cbaa1-378d-459c-97f1-16d1b7421f88&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145414,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;date&quot;,&#xd;
			&quot;promptInfo&quot;: &quot;Please select&quot;,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [],&#xd;
		&quot;approvalSelectedName&quot;: null,&#xd;
		&quot;maxApprovalChain&quot;: 3,&#xd;
		&quot;personName&quot;: &quot;自动化测试Admin&quot;&#xd;
	}],&#xd;
	&quot;personalPaymentAmount&quot;: 0,&#xd;
	&quot;companyPaymentAmount&quot;: 0,&#xd;
	&quot;totalBudget&quot;: 0&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/loan/application/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取entityOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">entityOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicationOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="借款单审批" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${entityOID}&quot;,&quot;entityType&quot;:1001,&quot;approverOID&quot;:&quot;${approverOID}&quot;}],&quot;approvalTxt&quot;:&quot;借款单审批&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/approvals/pass</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="282682134">{&quot;successNum&quot;:1,&quot;failNum&quot;:0,&quot;failReason&quot;:{}}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="审核驳回（有驳回意见）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${entityOID}&quot;,&quot;entityType&quot;:1001}],&quot;approvalTxt&quot;:&quot;审核驳回&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/audit/reject</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登出" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="借款单审核驳回(无驳回意见)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <longProp name="ThreadGroup.start_time">1522048673000</longProp>
        <longProp name="ThreadGroup.end_time">1522048673000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="模块控制器" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="23750841">工作台</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="170071582">Test Fragment</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建申请借款单" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
	&quot;id&quot;: 8861,&#xd;
	&quot;formName&quot;: &quot;借款申请单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: &quot;loan_application_form&quot;,&#xd;
	&quot;formType&quot;: 2005,&#xd;
	&quot;asSystem&quot;: true,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;2018-04-18T02:35:24Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 48619,&#xd;
		&quot;fieldOID&quot;: &quot;04eabd7b-9486-4b44-aa58-2e900014a027&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-01-25T22:04:44Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请输入&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;借钱&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: &quot;title&quot;,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;04eabd7b-9486-4b44-aa58-2e900014a027&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145407,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;04eabd7b-9486-4b44-aa58-2e900014a027&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145408,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 48620,&#xd;
		&quot;fieldOID&quot;: &quot;a5264031-d54b-4cc1-9653-2c2abf94c51f&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-01-25T22:04:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: &quot;department&quot;,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;a5264031-d54b-4cc1-9653-2c2abf94c51f&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145409,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;a5264031-d54b-4cc1-9653-2c2abf94c51f&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145410,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;,&#xd;
		&quot;selected&quot;: null&#xd;
	}, {&#xd;
		&quot;id&quot;: 48621,&#xd;
		&quot;fieldOID&quot;: &quot;86f1fe45-b27b-46f2-b531-3deaf7638fbd&quot;,&#xd;
		&quot;sequence&quot;: 4,&#xd;
		&quot;messageKey&quot;: &quot;total_budget&quot;,&#xd;
		&quot;fieldName&quot;: &quot;借款金额&quot;,&#xd;
		&quot;fieldType&quot;: &quot;DOUBLE&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-02-03T02:30:12Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: 1000,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: &quot;department&quot;,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;86f1fe45-b27b-46f2-b531-3deaf7638fbd&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145411,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;借款金额&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;86f1fe45-b27b-46f2-b531-3deaf7638fbd&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145412,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Loan amount&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}],&#xd;
		&quot;integerMaxLength&quot;: 100,&#xd;
		&quot;decimalMaxLength&quot;: 2&#xd;
	}, {&#xd;
		&quot;id&quot;: 48622,&#xd;
		&quot;fieldOID&quot;: &quot;2c1cbaa1-378d-459c-97f1-16d1b7421f88&quot;,&#xd;
		&quot;sequence&quot;: 5,&#xd;
		&quot;messageKey&quot;: &quot;date&quot;,&#xd;
		&quot;fieldName&quot;: &quot;预计还款日期&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-01-25T22:04:48Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;2018-05-30T16:00:00.000Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;2c1cbaa1-378d-459c-97f1-16d1b7421f88&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145413,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;预计还款日期&quot;,&#xd;
			&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;2c1cbaa1-378d-459c-97f1-16d1b7421f88&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145414,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;date&quot;,&#xd;
			&quot;promptInfo&quot;: &quot;Please select&quot;,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [],&#xd;
		&quot;approvalSelectedName&quot;: null,&#xd;
		&quot;maxApprovalChain&quot;: 3,&#xd;
		&quot;personName&quot;: &quot;自动化测试Admin&quot;&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: &quot;系统默认申请单，不可修改&quot;,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1001,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: &quot;loan_application&quot;,&#xd;
	&quot;companyOID&quot;: &quot;b634aa55-09dd-4f44-9504-4b18ab2d0556&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;countersignTypeForSubmitter&quot;: &quot;2&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: 971590973585305600,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 48619,&#xd;
		&quot;fieldOID&quot;: &quot;04eabd7b-9486-4b44-aa58-2e900014a027&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-01-25T22:04:44Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请输入&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;借钱&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: &quot;title&quot;,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;04eabd7b-9486-4b44-aa58-2e900014a027&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145407,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;04eabd7b-9486-4b44-aa58-2e900014a027&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145408,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 48620,&#xd;
		&quot;fieldOID&quot;: &quot;a5264031-d54b-4cc1-9653-2c2abf94c51f&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-01-25T22:04:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: &quot;department&quot;,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;a5264031-d54b-4cc1-9653-2c2abf94c51f&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145409,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;a5264031-d54b-4cc1-9653-2c2abf94c51f&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145410,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;,&#xd;
		&quot;selected&quot;: null&#xd;
	}, {&#xd;
		&quot;id&quot;: 48621,&#xd;
		&quot;fieldOID&quot;: &quot;86f1fe45-b27b-46f2-b531-3deaf7638fbd&quot;,&#xd;
		&quot;sequence&quot;: 4,&#xd;
		&quot;messageKey&quot;: &quot;total_budget&quot;,&#xd;
		&quot;fieldName&quot;: &quot;借款金额&quot;,&#xd;
		&quot;fieldType&quot;: &quot;DOUBLE&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-02-03T02:30:12Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: 1000,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: &quot;department&quot;,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;86f1fe45-b27b-46f2-b531-3deaf7638fbd&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145411,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;借款金额&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;86f1fe45-b27b-46f2-b531-3deaf7638fbd&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145412,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Loan amount&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}],&#xd;
		&quot;integerMaxLength&quot;: 100,&#xd;
		&quot;decimalMaxLength&quot;: 2&#xd;
	}, {&#xd;
		&quot;id&quot;: 48622,&#xd;
		&quot;fieldOID&quot;: &quot;2c1cbaa1-378d-459c-97f1-16d1b7421f88&quot;,&#xd;
		&quot;sequence&quot;: 5,&#xd;
		&quot;messageKey&quot;: &quot;date&quot;,&#xd;
		&quot;fieldName&quot;: &quot;预计还款日期&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-01-25T22:04:48Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;2018-05-30T16:00:00.000Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;2c1cbaa1-378d-459c-97f1-16d1b7421f88&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145413,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;预计还款日期&quot;,&#xd;
			&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;2c1cbaa1-378d-459c-97f1-16d1b7421f88&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145414,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;date&quot;,&#xd;
			&quot;promptInfo&quot;: &quot;Please select&quot;,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [],&#xd;
		&quot;approvalSelectedName&quot;: null,&#xd;
		&quot;maxApprovalChain&quot;: 3,&#xd;
		&quot;personName&quot;: &quot;自动化测试Admin&quot;&#xd;
	}],&#xd;
	&quot;personalPaymentAmount&quot;: 0,&#xd;
	&quot;companyPaymentAmount&quot;: 0,&#xd;
	&quot;totalBudget&quot;: 0&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/loan/application/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取entityOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">entityOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicationOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="借款单审批" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${entityOID}&quot;,&quot;entityType&quot;:1001,&quot;approverOID&quot;:&quot;${approverOID}&quot;}],&quot;approvalTxt&quot;:&quot;借款单审批&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/approvals/pass</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="282682134">{&quot;successNum&quot;:1,&quot;failNum&quot;:0,&quot;failReason&quot;:{}}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="审核驳回（无驳回意见）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${entityOID}&quot;,&quot;entityType&quot;:1001}],&quot;approvalTxt&quot;:&quot;&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/audit/reject</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-950563175">&quot;message&quot;:&quot;审核驳回意见不能为空&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登出" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="借款单通知(有通知消息)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <longProp name="ThreadGroup.start_time">1522048673000</longProp>
        <longProp name="ThreadGroup.end_time">1522048673000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="模块控制器" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="23750841">工作台</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="170071582">Test Fragment</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建申请借款单" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
	&quot;id&quot;: 8861,&#xd;
	&quot;formName&quot;: &quot;借款申请单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: &quot;loan_application_form&quot;,&#xd;
	&quot;formType&quot;: 2005,&#xd;
	&quot;asSystem&quot;: true,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;2018-04-18T02:35:24Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 48619,&#xd;
		&quot;fieldOID&quot;: &quot;04eabd7b-9486-4b44-aa58-2e900014a027&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-01-25T22:04:44Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请输入&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;借钱&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: &quot;title&quot;,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;04eabd7b-9486-4b44-aa58-2e900014a027&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145407,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;04eabd7b-9486-4b44-aa58-2e900014a027&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145408,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 48620,&#xd;
		&quot;fieldOID&quot;: &quot;a5264031-d54b-4cc1-9653-2c2abf94c51f&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-01-25T22:04:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: &quot;department&quot;,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;a5264031-d54b-4cc1-9653-2c2abf94c51f&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145409,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;a5264031-d54b-4cc1-9653-2c2abf94c51f&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145410,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;,&#xd;
		&quot;selected&quot;: null&#xd;
	}, {&#xd;
		&quot;id&quot;: 48621,&#xd;
		&quot;fieldOID&quot;: &quot;86f1fe45-b27b-46f2-b531-3deaf7638fbd&quot;,&#xd;
		&quot;sequence&quot;: 4,&#xd;
		&quot;messageKey&quot;: &quot;total_budget&quot;,&#xd;
		&quot;fieldName&quot;: &quot;借款金额&quot;,&#xd;
		&quot;fieldType&quot;: &quot;DOUBLE&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-02-03T02:30:12Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: 1000,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: &quot;department&quot;,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;86f1fe45-b27b-46f2-b531-3deaf7638fbd&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145411,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;借款金额&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;86f1fe45-b27b-46f2-b531-3deaf7638fbd&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145412,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Loan amount&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}],&#xd;
		&quot;integerMaxLength&quot;: 100,&#xd;
		&quot;decimalMaxLength&quot;: 2&#xd;
	}, {&#xd;
		&quot;id&quot;: 48622,&#xd;
		&quot;fieldOID&quot;: &quot;2c1cbaa1-378d-459c-97f1-16d1b7421f88&quot;,&#xd;
		&quot;sequence&quot;: 5,&#xd;
		&quot;messageKey&quot;: &quot;date&quot;,&#xd;
		&quot;fieldName&quot;: &quot;预计还款日期&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-01-25T22:04:48Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;2018-05-30T16:00:00.000Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;2c1cbaa1-378d-459c-97f1-16d1b7421f88&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145413,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;预计还款日期&quot;,&#xd;
			&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;2c1cbaa1-378d-459c-97f1-16d1b7421f88&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145414,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;date&quot;,&#xd;
			&quot;promptInfo&quot;: &quot;Please select&quot;,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [],&#xd;
		&quot;approvalSelectedName&quot;: null,&#xd;
		&quot;maxApprovalChain&quot;: 3,&#xd;
		&quot;personName&quot;: &quot;自动化测试Admin&quot;&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: &quot;系统默认申请单，不可修改&quot;,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1001,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: &quot;loan_application&quot;,&#xd;
	&quot;companyOID&quot;: &quot;b634aa55-09dd-4f44-9504-4b18ab2d0556&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;countersignTypeForSubmitter&quot;: &quot;2&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: 971590973585305600,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 48619,&#xd;
		&quot;fieldOID&quot;: &quot;04eabd7b-9486-4b44-aa58-2e900014a027&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-01-25T22:04:44Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请输入&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;借钱&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: &quot;title&quot;,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;04eabd7b-9486-4b44-aa58-2e900014a027&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145407,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;04eabd7b-9486-4b44-aa58-2e900014a027&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145408,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 48620,&#xd;
		&quot;fieldOID&quot;: &quot;a5264031-d54b-4cc1-9653-2c2abf94c51f&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-01-25T22:04:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: &quot;department&quot;,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;a5264031-d54b-4cc1-9653-2c2abf94c51f&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145409,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;a5264031-d54b-4cc1-9653-2c2abf94c51f&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145410,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;,&#xd;
		&quot;selected&quot;: null&#xd;
	}, {&#xd;
		&quot;id&quot;: 48621,&#xd;
		&quot;fieldOID&quot;: &quot;86f1fe45-b27b-46f2-b531-3deaf7638fbd&quot;,&#xd;
		&quot;sequence&quot;: 4,&#xd;
		&quot;messageKey&quot;: &quot;total_budget&quot;,&#xd;
		&quot;fieldName&quot;: &quot;借款金额&quot;,&#xd;
		&quot;fieldType&quot;: &quot;DOUBLE&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-02-03T02:30:12Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: 1000,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: &quot;department&quot;,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;86f1fe45-b27b-46f2-b531-3deaf7638fbd&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145411,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;借款金额&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;86f1fe45-b27b-46f2-b531-3deaf7638fbd&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145412,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Loan amount&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}],&#xd;
		&quot;integerMaxLength&quot;: 100,&#xd;
		&quot;decimalMaxLength&quot;: 2&#xd;
	}, {&#xd;
		&quot;id&quot;: 48622,&#xd;
		&quot;fieldOID&quot;: &quot;2c1cbaa1-378d-459c-97f1-16d1b7421f88&quot;,&#xd;
		&quot;sequence&quot;: 5,&#xd;
		&quot;messageKey&quot;: &quot;date&quot;,&#xd;
		&quot;fieldName&quot;: &quot;预计还款日期&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-01-25T22:04:48Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;2018-05-30T16:00:00.000Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;2c1cbaa1-378d-459c-97f1-16d1b7421f88&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145413,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;预计还款日期&quot;,&#xd;
			&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;2c1cbaa1-378d-459c-97f1-16d1b7421f88&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145414,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;date&quot;,&#xd;
			&quot;promptInfo&quot;: &quot;Please select&quot;,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [],&#xd;
		&quot;approvalSelectedName&quot;: null,&#xd;
		&quot;maxApprovalChain&quot;: 3,&#xd;
		&quot;personName&quot;: &quot;自动化测试Admin&quot;&#xd;
	}],&#xd;
	&quot;personalPaymentAmount&quot;: 0,&#xd;
	&quot;companyPaymentAmount&quot;: 0,&#xd;
	&quot;totalBudget&quot;: 0&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/loan/application/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取entityOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">entityOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicationOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="借款单审批" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${entityOID}&quot;,&quot;entityType&quot;:1001,&quot;approverOID&quot;:&quot;${approverOID}&quot;}],&quot;approvalTxt&quot;:&quot;借款单审批&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/approvals/pass</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="282682134">{&quot;successNum&quot;:1,&quot;failNum&quot;:0,&quot;failReason&quot;:{}}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="通知（有通知消息）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entityType&quot;:1001,&quot;entityOID&quot;:&quot;${entityOID}&quot;,&quot;notice&quot;:&quot;通知内容&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/approval/send/notice</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="3569038">true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登出" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="借款单财务打印" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1522132842000</longProp>
        <longProp name="ThreadGroup.end_time">1522132842000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="模块控制器" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="23750841">工作台</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="170071582">Test Fragment</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建申请借款单" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
	&quot;id&quot;: 8861,&#xd;
	&quot;formName&quot;: &quot;借款申请单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: &quot;loan_application_form&quot;,&#xd;
	&quot;formType&quot;: 2005,&#xd;
	&quot;asSystem&quot;: true,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;2018-04-18T02:35:24Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 48619,&#xd;
		&quot;fieldOID&quot;: &quot;04eabd7b-9486-4b44-aa58-2e900014a027&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-01-25T22:04:44Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请输入&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;借钱&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: &quot;title&quot;,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;04eabd7b-9486-4b44-aa58-2e900014a027&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145407,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;04eabd7b-9486-4b44-aa58-2e900014a027&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145408,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 48620,&#xd;
		&quot;fieldOID&quot;: &quot;a5264031-d54b-4cc1-9653-2c2abf94c51f&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-01-25T22:04:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: &quot;department&quot;,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;a5264031-d54b-4cc1-9653-2c2abf94c51f&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145409,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;a5264031-d54b-4cc1-9653-2c2abf94c51f&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145410,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;,&#xd;
		&quot;selected&quot;: null&#xd;
	}, {&#xd;
		&quot;id&quot;: 48621,&#xd;
		&quot;fieldOID&quot;: &quot;86f1fe45-b27b-46f2-b531-3deaf7638fbd&quot;,&#xd;
		&quot;sequence&quot;: 4,&#xd;
		&quot;messageKey&quot;: &quot;total_budget&quot;,&#xd;
		&quot;fieldName&quot;: &quot;借款金额&quot;,&#xd;
		&quot;fieldType&quot;: &quot;DOUBLE&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-02-03T02:30:12Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: 1000,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: &quot;department&quot;,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;86f1fe45-b27b-46f2-b531-3deaf7638fbd&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145411,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;借款金额&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;86f1fe45-b27b-46f2-b531-3deaf7638fbd&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145412,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Loan amount&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}],&#xd;
		&quot;integerMaxLength&quot;: 100,&#xd;
		&quot;decimalMaxLength&quot;: 2&#xd;
	}, {&#xd;
		&quot;id&quot;: 48622,&#xd;
		&quot;fieldOID&quot;: &quot;2c1cbaa1-378d-459c-97f1-16d1b7421f88&quot;,&#xd;
		&quot;sequence&quot;: 5,&#xd;
		&quot;messageKey&quot;: &quot;date&quot;,&#xd;
		&quot;fieldName&quot;: &quot;预计还款日期&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-01-25T22:04:48Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;2018-05-30T16:00:00.000Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;2c1cbaa1-378d-459c-97f1-16d1b7421f88&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145413,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;预计还款日期&quot;,&#xd;
			&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;2c1cbaa1-378d-459c-97f1-16d1b7421f88&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145414,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;date&quot;,&#xd;
			&quot;promptInfo&quot;: &quot;Please select&quot;,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [],&#xd;
		&quot;approvalSelectedName&quot;: null,&#xd;
		&quot;maxApprovalChain&quot;: 3,&#xd;
		&quot;personName&quot;: &quot;自动化测试Admin&quot;&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: &quot;系统默认申请单，不可修改&quot;,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1001,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: &quot;loan_application&quot;,&#xd;
	&quot;companyOID&quot;: &quot;b634aa55-09dd-4f44-9504-4b18ab2d0556&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;countersignTypeForSubmitter&quot;: &quot;2&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: 971590973585305600,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 48619,&#xd;
		&quot;fieldOID&quot;: &quot;04eabd7b-9486-4b44-aa58-2e900014a027&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-01-25T22:04:44Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请输入&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;借钱&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: &quot;title&quot;,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;04eabd7b-9486-4b44-aa58-2e900014a027&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145407,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;04eabd7b-9486-4b44-aa58-2e900014a027&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145408,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 48620,&#xd;
		&quot;fieldOID&quot;: &quot;a5264031-d54b-4cc1-9653-2c2abf94c51f&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-01-25T22:04:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;ed2fc258-1ef4-46cd-8cca-f64027913bb3&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: &quot;department&quot;,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;a5264031-d54b-4cc1-9653-2c2abf94c51f&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145409,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;a5264031-d54b-4cc1-9653-2c2abf94c51f&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145410,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}],&#xd;
		&quot;path&quot;: &quot;HLY自动化测试团&quot;,&#xd;
		&quot;selected&quot;: null&#xd;
	}, {&#xd;
		&quot;id&quot;: 48621,&#xd;
		&quot;fieldOID&quot;: &quot;86f1fe45-b27b-46f2-b531-3deaf7638fbd&quot;,&#xd;
		&quot;sequence&quot;: 4,&#xd;
		&quot;messageKey&quot;: &quot;total_budget&quot;,&#xd;
		&quot;fieldName&quot;: &quot;借款金额&quot;,&#xd;
		&quot;fieldType&quot;: &quot;DOUBLE&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-02-03T02:30:12Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: 1000,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: &quot;department&quot;,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;86f1fe45-b27b-46f2-b531-3deaf7638fbd&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145411,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;借款金额&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;86f1fe45-b27b-46f2-b531-3deaf7638fbd&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145412,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Loan amount&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}],&#xd;
		&quot;integerMaxLength&quot;: 100,&#xd;
		&quot;decimalMaxLength&quot;: 2&#xd;
	}, {&#xd;
		&quot;id&quot;: 48622,&#xd;
		&quot;fieldOID&quot;: &quot;2c1cbaa1-378d-459c-97f1-16d1b7421f88&quot;,&#xd;
		&quot;sequence&quot;: 5,&#xd;
		&quot;messageKey&quot;: &quot;date&quot;,&#xd;
		&quot;fieldName&quot;: &quot;预计还款日期&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-01-25T22:04:48Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-03-08T03:38:35Z&quot;,&#xd;
		&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;2018-05-30T16:00:00.000Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;2c1cbaa1-378d-459c-97f1-16d1b7421f88&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145413,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;预计还款日期&quot;,&#xd;
			&quot;promptInfo&quot;: &quot;请选择&quot;,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;2c1cbaa1-378d-459c-97f1-16d1b7421f88&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 145414,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;date&quot;,&#xd;
			&quot;promptInfo&quot;: &quot;Please select&quot;,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;87f979b0-4163-4481-8313-1cda2f844001&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:3}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;a3600170-c212-48d2-a55b-80ac3e292871&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;5ea9d372-cd18-4e8c-b17d-ec50990838b0&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [],&#xd;
		&quot;approvalSelectedName&quot;: null,&#xd;
		&quot;maxApprovalChain&quot;: 3,&#xd;
		&quot;personName&quot;: &quot;自动化测试Admin&quot;&#xd;
	}],&#xd;
	&quot;personalPaymentAmount&quot;: 0,&#xd;
	&quot;companyPaymentAmount&quot;: 0,&#xd;
	&quot;totalBudget&quot;: 0&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/loan/application/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取entityOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">entityOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicationOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="借款单审批" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${entityOID}&quot;,&quot;entityType&quot;:1001,&quot;approverOID&quot;:&quot;${approverOID}&quot;}],&quot;approvalTxt&quot;:&quot;借款单审批&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/approvals/pass</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="282682134">{&quot;successNum&quot;:1,&quot;failNum&quot;:0,&quot;failReason&quot;:{}}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="财务打印" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/loan/application/generate/pdf/${entityOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登出" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="工作台" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
