<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="预算" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="protocol" elementType="Argument">
            <stringProp name="Argument.name">protocol</stringProp>
            <stringProp name="Argument.value">${__P(protocol,https)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="serviceURL" elementType="Argument">
            <stringProp name="Argument.name">serviceURL</stringProp>
            <stringProp name="Argument.value">${__P(serviceURL,stage.huilianyi.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="username1" elementType="Argument">
            <stringProp name="Argument.name">username1</stringProp>
            <stringProp name="Argument.value">${__P(user1,18630000000)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="username2" elementType="Argument">
            <stringProp name="Argument.name">username2</stringProp>
            <stringProp name="Argument.value">${__P(user1,18620000000)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="username3" elementType="Argument">
            <stringProp name="Argument.name">username3</stringProp>
            <stringProp name="Argument.value">${__P(user1,18610000000)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="username4" elementType="Argument">
            <stringProp name="Argument.name">username4</stringProp>
            <stringProp name="Argument.value">${__P(user1,18650000000)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="password" elementType="Argument">
            <stringProp name="Argument.name">password</stringProp>
            <stringProp name="Argument.value">${__P(password,hly123456)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="表单名称" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="applicationForm001" elementType="Argument">
            <stringProp name="Argument.name">applicationForm001</stringProp>
            <stringProp name="Argument.value">预算费用申请单</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="applicationForm002" elementType="Argument">
            <stringProp name="Argument.name">applicationForm002</stringProp>
            <stringProp name="Argument.value">预算差旅申请单</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="applicationForm003" elementType="Argument">
            <stringProp name="Argument.name">applicationForm003</stringProp>
            <stringProp name="Argument.value">预算费用申请单_成本中心分摊</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="expenseForm001" elementType="Argument">
            <stringProp name="Argument.name">expenseForm001</stringProp>
            <stringProp name="Argument.value">预算日常报销单</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="expenseForm002" elementType="Argument">
            <stringProp name="Argument.name">expenseForm002</stringProp>
            <stringProp name="Argument.value">预算费用报销单</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="expenseForm003" elementType="Argument">
            <stringProp name="Argument.name">expenseForm003</stringProp>
            <stringProp name="Argument.value">预算差旅报销单</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="expenseForm004" elementType="Argument">
            <stringProp name="Argument.name">expenseForm004</stringProp>
            <stringProp name="Argument.value">预算费用报销单_成本中心分摊</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="组织架构" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="Authorization" elementType="Argument">
            <stringProp name="Argument.name">Authorization</stringProp>
            <stringProp name="Argument.value">Basic QXJ0ZW1pc1dlQ2hhdDpuTENud2RJaGl6V2J5a0h5dVpNNlRwUURkN0t3SzlJWERLOExHc2E3U09X</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="books" elementType="Argument">
            <stringProp name="Argument.name">books</stringProp>
            <stringProp name="Argument.value">默认账套</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="books1" elementType="Argument">
            <stringProp name="Argument.name">books1</stringProp>
            <stringProp name="Argument.value">账套001</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="books2" elementType="Argument">
            <stringProp name="Argument.name">books2</stringProp>
            <stringProp name="Argument.value">账套002</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="company" elementType="Argument">
            <stringProp name="Argument.name">company</stringProp>
            <stringProp name="Argument.value">公司预算有限公司</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">公司预算公司名称</stringProp>
          </elementProp>
          <elementProp name="company001" elementType="Argument">
            <stringProp name="Argument.name">company001</stringProp>
            <stringProp name="Argument.value">部门预算有限公司</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">部门预算公司名称</stringProp>
          </elementProp>
          <elementProp name="company002" elementType="Argument">
            <stringProp name="Argument.name">company002</stringProp>
            <stringProp name="Argument.value">员工预算有限公司</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">员工预算公司名称</stringProp>
          </elementProp>
          <elementProp name="company003" elementType="Argument">
            <stringProp name="Argument.name">company003</stringProp>
            <stringProp name="Argument.value">公司003</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="department" elementType="Argument">
            <stringProp name="Argument.name">department</stringProp>
            <stringProp name="Argument.value">公司预算部门</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="department001" elementType="Argument">
            <stringProp name="Argument.name">department001</stringProp>
            <stringProp name="Argument.value">公司预算部门1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">公司预算部门1</stringProp>
          </elementProp>
          <elementProp name="department002" elementType="Argument">
            <stringProp name="Argument.name">department002</stringProp>
            <stringProp name="Argument.value">公司预算部门2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">公司预算部门2</stringProp>
          </elementProp>
          <elementProp name="department003" elementType="Argument">
            <stringProp name="Argument.name">department003</stringProp>
            <stringProp name="Argument.value">部门预算部门1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">部门预算占预算部门</stringProp>
          </elementProp>
          <elementProp name="department004" elementType="Argument">
            <stringProp name="Argument.name">department004</stringProp>
            <stringProp name="Argument.value">部门预算部门2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">部门预算不占预算部门</stringProp>
          </elementProp>
          <elementProp name="department005" elementType="Argument">
            <stringProp name="Argument.name">department005</stringProp>
            <stringProp name="Argument.value">员工预算部门</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="employee" elementType="Argument">
            <stringProp name="Argument.name">employee</stringProp>
            <stringProp name="Argument.value">公司预算管理员</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="employee1" elementType="Argument">
            <stringProp name="Argument.name">employee1</stringProp>
            <stringProp name="Argument.value">部门预算管理员</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">部门预算admin</stringProp>
          </elementProp>
          <elementProp name="employee2" elementType="Argument">
            <stringProp name="Argument.name">employee2</stringProp>
            <stringProp name="Argument.value">员工预算管理员</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="employee3" elementType="Argument">
            <stringProp name="Argument.name">employee3</stringProp>
            <stringProp name="Argument.value">员工预算管理员</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="employee4" elementType="Argument">
            <stringProp name="Argument.name">employee4</stringProp>
            <stringProp name="Argument.value">预算员工2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="employee5" elementType="Argument">
            <stringProp name="Argument.name">employee5</stringProp>
            <stringProp name="Argument.value">预算员工4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="costCenter" elementType="Argument">
            <stringProp name="Argument.name">costCenter</stringProp>
            <stringProp name="Argument.value">项目</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="costCenterItem1" elementType="Argument">
            <stringProp name="Argument.name">costCenterItem1</stringProp>
            <stringProp name="Argument.value">成本中心项001</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="costCenterItem2" elementType="Argument">
            <stringProp name="Argument.name">costCenterItem2</stringProp>
            <stringProp name="Argument.value">成本中心项002</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="company01" elementType="Argument">
            <stringProp name="Argument.name">company01</stringProp>
            <stringProp name="Argument.value">预算有限公司</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="company02" elementType="Argument">
            <stringProp name="Argument.name">company02</stringProp>
            <stringProp name="Argument.value">预算有子公司</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="department01" elementType="Argument">
            <stringProp name="Argument.name">department01</stringProp>
            <stringProp name="Argument.value">预算部门1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="department02" elementType="Argument">
            <stringProp name="Argument.name">department02</stringProp>
            <stringProp name="Argument.value">预算部门2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="employee01" elementType="Argument">
            <stringProp name="Argument.name">employee01</stringProp>
            <stringProp name="Argument.value">预算员工1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="employee02" elementType="Argument">
            <stringProp name="Argument.name">employee02</stringProp>
            <stringProp name="Argument.value">预算员工2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="employee03" elementType="Argument">
            <stringProp name="Argument.name">employee03</stringProp>
            <stringProp name="Argument.value">预算员工3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="employee04" elementType="Argument">
            <stringProp name="Argument.name">employee04</stringProp>
            <stringProp name="Argument.value">预算员工4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="employee05" elementType="Argument">
            <stringProp name="Argument.name">employee05</stringProp>
            <stringProp name="Argument.value">预算员工5</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="费用类型" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="expenseType001" elementType="Argument">
            <stringProp name="Argument.name">expenseType001</stringProp>
            <stringProp name="Argument.value">YS出租车</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="expenseType002" elementType="Argument">
            <stringProp name="Argument.name">expenseType002</stringProp>
            <stringProp name="Argument.value">机票</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="expenseType003" elementType="Argument">
            <stringProp name="Argument.name">expenseType003</stringProp>
            <stringProp name="Argument.value">大巴</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="currency" elementType="Argument">
            <stringProp name="Argument.name">currency</stringProp>
            <stringProp name="Argument.value">CNY</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="tax" elementType="Argument">
            <stringProp name="Argument.name">tax</stringProp>
            <stringProp name="Argument.value">消费税10%截尾法</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="currencyCodeName" elementType="Argument">
            <stringProp name="Argument.name">currencyCodeName</stringProp>
            <stringProp name="Argument.value">Japanese Yen</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="setOfBooks" elementType="Argument">
            <stringProp name="Argument.name">setOfBooks</stringProp>
            <stringProp name="Argument.value">默认账套</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="预算配置" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="YSORG001" elementType="Argument">
            <stringProp name="Argument.name">YSORG001</stringProp>
            <stringProp name="Argument.value">公司预算组织</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="YSORG002" elementType="Argument">
            <stringProp name="Argument.name">YSORG002</stringProp>
            <stringProp name="Argument.value">部门预算组织</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="YSORG003" elementType="Argument">
            <stringProp name="Argument.name">YSORG003</stringProp>
            <stringProp name="Argument.value">员工预算组织</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="YSVN001" elementType="Argument">
            <stringProp name="Argument.name">YSVN001</stringProp>
            <stringProp name="Argument.value">公司预算_当前版本</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="YSVN002" elementType="Argument">
            <stringProp name="Argument.name">YSVN002</stringProp>
            <stringProp name="Argument.value">部门预算_当前版本</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="YSVN003" elementType="Argument">
            <stringProp name="Argument.name">YSVN003</stringProp>
            <stringProp name="Argument.value">员工预算_当前版本</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="YSSCR001" elementType="Argument">
            <stringProp name="Argument.name">YSSCR001</stringProp>
            <stringProp name="Argument.value">公司预算场景</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="YSSCR002" elementType="Argument">
            <stringProp name="Argument.name">YSSCR002</stringProp>
            <stringProp name="Argument.value">部门预算场景</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="YSSCR003" elementType="Argument">
            <stringProp name="Argument.name">YSSCR003</stringProp>
            <stringProp name="Argument.value">员工预算场景</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="YSJNType001" elementType="Argument">
            <stringProp name="Argument.name">YSJNType001</stringProp>
            <stringProp name="Argument.value">公司预算日记账类型</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="YSJNType002" elementType="Argument">
            <stringProp name="Argument.name">YSJNType002</stringProp>
            <stringProp name="Argument.value">部门预算日记账类型</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="YSJNType003" elementType="Argument">
            <stringProp name="Argument.name">YSJNType003</stringProp>
            <stringProp name="Argument.value">员工预算日记账类型</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="YSstructure001" elementType="Argument">
            <stringProp name="Argument.name">YSstructure001</stringProp>
            <stringProp name="Argument.value">公司预算表</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="YSstructure002" elementType="Argument">
            <stringProp name="Argument.name">YSstructure002</stringProp>
            <stringProp name="Argument.value">部门预算表</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="YSstructure003" elementType="Argument">
            <stringProp name="Argument.name">YSstructure003</stringProp>
            <stringProp name="Argument.value">员工预算表</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="YSProduct001" elementType="Argument">
            <stringProp name="Argument.name">YSProduct001</stringProp>
            <stringProp name="Argument.value">公司预算项目</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="YSProduct002" elementType="Argument">
            <stringProp name="Argument.name">YSProduct002</stringProp>
            <stringProp name="Argument.value">部门预算项目</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="YSProduct003" elementType="Argument">
            <stringProp name="Argument.name">YSProduct003</stringProp>
            <stringProp name="Argument.value">员工预算项目</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="YSORG000" elementType="Argument">
            <stringProp name="Argument.name">YSORG000</stringProp>
            <stringProp name="Argument.value">YS_ORG_0001</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="YSVN000" elementType="Argument">
            <stringProp name="Argument.name">YSVN000</stringProp>
            <stringProp name="Argument.value">预算_当前版本</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="YSSCR000" elementType="Argument">
            <stringProp name="Argument.name">YSSCR000</stringProp>
            <stringProp name="Argument.value">预算场景</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="YSJNType000" elementType="Argument">
            <stringProp name="Argument.name">YSJNType000</stringProp>
            <stringProp name="Argument.value">日记账类型</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="YSstructure000" elementType="Argument">
            <stringProp name="Argument.name">YSstructure000</stringProp>
            <stringProp name="Argument.value">预算表</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="YSProduct000" elementType="Argument">
            <stringProp name="Argument.name">YSProduct000</stringProp>
            <stringProp name="Argument.value">预算项目</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Semiannual" elementType="Argument">
            <stringProp name="Argument.name">Semiannual</stringProp>
            <stringProp name="Argument.value">下半年</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="预算日记账" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="periodName" elementType="Argument">
            <stringProp name="Argument.name">periodName</stringProp>
            <stringProp name="Argument.value">2019-YS_9</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">期间</stringProp>
          </elementProp>
          <elementProp name="periodYear" elementType="Argument">
            <stringProp name="Argument.name">periodYear</stringProp>
            <stringProp name="Argument.value">2019</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">年费</stringProp>
          </elementProp>
          <elementProp name="periodQuarter" elementType="Argument">
            <stringProp name="Argument.name">periodQuarter</stringProp>
            <stringProp name="Argument.value">3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">季度</stringProp>
          </elementProp>
          <elementProp name="periodQuarterName" elementType="Argument">
            <stringProp name="Argument.name">periodQuarterName</stringProp>
            <stringProp name="Argument.value">3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">季度</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="预算提示信息中文版" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="forbidTip" elementType="Argument">
            <stringProp name="Argument.name">forbidTip</stringProp>
            <stringProp name="Argument.value">单据金额已超过当前可用预算,不能提交!请联系预算管理员</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="warnTip" elementType="Argument">
            <stringProp name="Argument.name">warnTip</stringProp>
            <stringProp name="Argument.value">单据金额超过当前可用预算的80%,是否确定提交</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="overApplication" elementType="Argument">
            <stringProp name="Argument.name">overApplication</stringProp>
            <stringProp name="Argument.value">关联金额超过申请金额，请检查</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="提示信息中文版" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="bxSuccessful" elementType="Argument">
            <stringProp name="Argument.name">bxSuccessful</stringProp>
            <stringProp name="Argument.value">{&quot;passFlag&quot;:true,&quot;submitSuccess&quot;:true,&quot;checkResultList&quot;:[],&quot;needConfirm&quot;:false}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="bxSuccessful1" elementType="Argument">
            <stringProp name="Argument.name">bxSuccessful1</stringProp>
            <stringProp name="Argument.value">{&quot;passFlag&quot;:true,&quot;checkResultList&quot;:[]}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SuccessSubmit" elementType="Argument">
            <stringProp name="Argument.name">SuccessSubmit</stringProp>
            <stringProp name="Argument.value">{&quot;passFlag&quot;:true,&quot;submitSuccess&quot;:true,&quot;checkResultList&quot;:[],&quot;needConfirm&quot;:false}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="approvalsSuccessful" elementType="Argument">
            <stringProp name="Argument.name">approvalsSuccessful</stringProp>
            <stringProp name="Argument.value">{&quot;successNum&quot;:1,&quot;failNum&quot;:0,&quot;failReason&quot;:{},&quot;transmitWarning&quot;:null}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="auditSuccessful" elementType="Argument">
            <stringProp name="Argument.name">auditSuccessful</stringProp>
            <stringProp name="Argument.value">{&quot;successNum&quot;:1,&quot;failNum&quot;:0,&quot;failReason&quot;:{},&quot;transmitWarning&quot;:null}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="withdrawSuccessful" elementType="Argument">
            <stringProp name="Argument.name">withdrawSuccessful</stringProp>
            <stringProp name="Argument.value">{&quot;successNum&quot;:1,&quot;failNum&quot;:0,&quot;failReason&quot;:{},&quot;transmitWarning&quot;:null}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
          </elementProp>
          <elementProp name="Content-Type" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">x-helios-client</stringProp>
            <stringProp name="Header.value">helios-jemter</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${serviceURL}</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
        <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="获取日期" enabled="true">
        <stringProp name="filename"></stringProp>
        <stringProp name="parameters"></stringProp>
        <boolProp name="resetInterpreter">false</boolProp>
        <stringProp name="script">import java.text.SimpleDateFormat;
import java.util.Date;

Date date = new Date();
Calendar calendar = new GregorianCalendar();
calendar.setTime(date);
calendar.add(calendar.DATE, 0);
date = calendar.getTime();
SimpleDateFormat formatter = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
String today = formatter.format(date);
vars.put(&quot;today&quot;, today);

Date date = new Date();
Calendar calendar = new GregorianCalendar();
calendar.setTime(date);
calendar.add(calendar.DATE, 1);
date = calendar.getTime();
SimpleDateFormat formatter = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
String today = formatter.format(date);
vars.put(&quot;nextday&quot;, today);</stringProp>
      </BeanShellPreProcessor>
      <hashTree/>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="员工预算登录" enabled="true">
        <stringProp name="TestPlan.comments">员工预算登录</stringProp>
      </TestFragmentController>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">${Authorization}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="员工预算管理员登录" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${username3}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${password}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="scope" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">read write</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">scope</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/oauth/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="accessToken" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">accessToken</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="获得相关时间" enabled="true">
          <stringProp name="BeanShellSampler.query">import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.*;

import java.text.SimpleDateFormat;
import java.util.Date;

Date date = new Date();
Calendar calendar = new GregorianCalendar();
calendar.setTime(date);
calendar.add(calendar.DATE, 0);
date = calendar.getTime();
SimpleDateFormat formatter = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);
String localTime = formatter.format(date);
vars.put(&quot;NewBJstartDate&quot;,localTime);
SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);
Date localDate= null;
try {
localDate = sdf.parse(localTime);
} catch (ParseException e) {
e.printStackTrace();
}
long localTimeInMillis=localDate.getTime();
/** long时间转换成Calendar */
Calendar calendar= Calendar.getInstance();
calendar.setTimeInMillis(localTimeInMillis);
/** 取得时间偏移量 */
int zoneOffset = calendar.get(java.util.Calendar.ZONE_OFFSET);
/** 取得夏令时差 */
int dstOffset = calendar.get(java.util.Calendar.DST_OFFSET);
/** 从本地时间里扣除这些差量，即可以取得UTC时间*/
calendar.add(java.util.Calendar.MILLISECOND, -(zoneOffset + dstOffset));
/** 取得的时间就是UTC标准时间 */
Date utcDate=new Date(calendar.getTimeInMillis());


SimpleDateFormat formatter = new SimpleDateFormat(&quot;yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;&quot;);
Date date = new Date();
String startDate = formatter.format(utcDate);
//log.info(&quot;需要修改的UTC开始日期是&quot;+startDate);
vars.put(&quot;NewUTCstartDate&quot;,startDate);



Date date = new Date();
Calendar calendar = new GregorianCalendar();
calendar.setTime(date);
calendar.add(calendar.DATE,-1);
date = calendar.getTime();
SimpleDateFormat formatter = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);
String localTime = formatter.format(date);
vars.put(&quot;YestDay&quot;,localTime);


SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);
Date localDate= null;
try {
localDate = sdf.parse(localTime);
} catch (ParseException e) {
e.printStackTrace();
}
long localTimeInMillis=localDate.getTime();
/** long时间转换成Calendar */
Calendar calendar= Calendar.getInstance();
calendar.setTimeInMillis(localTimeInMillis);
/** 取得时间偏移量 */
int zoneOffset = calendar.get(java.util.Calendar.ZONE_OFFSET);
/** 取得夏令时差 */
int dstOffset = calendar.get(java.util.Calendar.DST_OFFSET);
/** 从本地时间里扣除这些差量，即可以取得UTC时间*/
calendar.add(java.util.Calendar.MILLISECOND, -(zoneOffset + dstOffset));
/** 取得的时间就是UTC标准时间 */
Date utcDate=new Date(calendar.getTimeInMillis());




SimpleDateFormat formatter = new SimpleDateFormat(&quot;yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;&quot;);
Date date = new Date();
String startDate = formatter.format(utcDate);
//log.info(&quot;需要修改的UTC截止日期是&quot;+startDate);
vars.put(&quot;NewUTCYestDay&quot;,startDate);


Date date = new Date();
Calendar calendar = new GregorianCalendar();
calendar.setTime(date);
calendar.add(calendar.DATE,1);
date = calendar.getTime();
SimpleDateFormat formatter = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
String localTime = formatter.format(date);
vars.put(&quot;startDate&quot;,localTime);


Date date = new Date();
Calendar calendar = new GregorianCalendar();
calendar.setTime(date);
calendar.add(calendar.DATE,0);
date = calendar.getTime();
SimpleDateFormat formatter = new SimpleDateFormat(&quot;mm:ss&quot;);
String localTime = formatter.format(date);
vars.put(&quot;NewBJEndDate&quot;,localTime);


</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="001员工预算_日常报销单_管控员工" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1551168261000</longProp>
        <longProp name="ThreadGroup.end_time">1551168261000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="-508582744">companyName</stringProp>
            <stringProp name="-1728524711">employeeName</stringProp>
            <stringProp name="-2044658440">employeeName1</stringProp>
            <stringProp name="-2044658439">employeeName2</stringProp>
            <stringProp name="-1829107106">organizationName</stringProp>
            <stringProp name="-222811490">structureName</stringProp>
            <stringProp name="688906115">versionName</stringProp>
            <stringProp name="-1008330181">scenarioName</stringProp>
            <stringProp name="-2055127748">journalTypeName</stringProp>
            <stringProp name="1177331774">itemName</stringProp>
            <stringProp name="1171462780">setOfBooksName</stringProp>
            <stringProp name="-1915237698">apFormName</stringProp>
            <stringProp name="608482277">bxFormName</stringProp>
            <stringProp name="-262326019">departmentName</stringProp>
            <stringProp name="-944069283">expenseTypeName</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-1311040009">
              <stringProp name="510173521">${company002}</stringProp>
              <stringProp name="-1461641776">${employee2}</stringProp>
              <stringProp name="-1461641745">${employee3}</stringProp>
              <stringProp name="-1461641714">${employee4}</stringProp>
              <stringProp name="1815567901">${YSORG003}</stringProp>
              <stringProp name="601025036">${YSstructure003}</stringProp>
              <stringProp name="1917159635">${YSVN003}</stringProp>
              <stringProp name="651336795">${YSSCR003}</stringProp>
              <stringProp name="-191183559">${YSJNType003}</stringProp>
              <stringProp name="-1660902616">${YSProduct003}</stringProp>
              <stringProp name="-1277953366">${books}</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="-986661391">${expenseForm001}</stringProp>
              <stringProp name="-717350959">${department005}</stringProp>
              <stringProp name="-2136664729">${expenseType001}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="租户登录" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="1242003">预算</stringProp>
            <stringProp name="1603705114">员工预算登录</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="查询基础数据" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询登录账号" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/account?roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="tenantId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">tenantId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.tenantId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询账套" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/setOfBooks/query/dto?setOfBooksCode=&amp;setOfBooksName=&amp;page=0&amp;size=10&amp;roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="booksId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">setOfBooksId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.setOfBooksName==&quot;${setOfBooksName}&quot;)].setOfBooksId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询公司" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/company/by/term?page=0&amp;size=10&amp;roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="companyId;companyCode;companyOID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">companyId;companyCode;companyOID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;${companyName}&quot;)].id;$..[?(@.name==&quot;${companyName}&quot;)].companyCode;$..[?(@.name==&quot;${companyName}&quot;)].companyOID</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询部门" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/department/tenant/all?roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="departmentId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">departmentId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;${departmentName}&quot;)].id;</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="departmentOid" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">departmentOID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;${departmentName}&quot;)].departmentOID</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询员工" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/users/v3/search?sort=status&amp;page=0&amp;size=10&amp;keyword=&amp;status=all&amp;roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="employeeId;userOID;employeeID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">employeeId;userOID;employeeID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fullName==&quot;${employeeName}&quot;)].id;$..[?(@.fullName==&quot;${employeeName}&quot;)].userOID;$..[?(@.fullName==&quot;${employeeName}&quot;)].employeeID;</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="employeeId1;userOID1" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">employeeId1;userOID1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fullName==&quot;${employeeName1}&quot;)].id;$..[?(@.fullName==&quot;${employeeName1}&quot;)].userOID;</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="employeeId2;userOID2" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">employeeId2;userOID2</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fullName==&quot;${employeeName2}&quot;)].id;$..[?(@.fullName==&quot;${employeeName2}&quot;)].userOID;</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询费用类型" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/invoice/api/expense/types/groupby/category?setOfBooksId=${setOfBooksId}&amp;createdManually=&amp;enabled=&amp;roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="bxExpenseId;bxExpenseTypeOID;bxExpenseTypeIconName;iconURL;bxExpenseTypeKey" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">bxExpenseId;bxExpenseTypeOID;bxExpenseTypeIconName;iconURL;bxExpenseTypeKey</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;${expenseTypeName}&quot;)].id;$..[?(@.name==&quot;${expenseTypeName}&quot;)].expenseTypeOID;$..[?(@.name==&quot;${expenseTypeName}&quot;)].iconName;$..[?(@.name==&quot;${expenseTypeName}&quot;)].iconURL;$..[?(@.name==&quot;${expenseTypeName}&quot;)].messageKey;</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found;Not found;Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="查询预算配置参数" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询预算组织" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/organizations/query?page=0&amp;pageSize=10&amp;roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="organizationId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">organizationId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.organizationName==&quot;${organizationName}&quot;)].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询预算场景" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/scenarios/query?page=0&amp;size=10&amp;organizationId=${organizationId}&amp;roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="scenarioId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">scenarioId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.scenarioName==&quot;${scenarioName}&quot;)].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询预算版本" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/versions/query?organizationId=${organizationId}&amp;page=0&amp;size=10&amp;roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="versionId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">versionId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.versionName==&quot;${versionName}&quot;)].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询预算表" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/structures/query?organizationId=${organizationId}&amp;page=0&amp;size=10&amp;roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="structureId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">structureId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.structureName==&quot;${structureName}&quot;)].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询项目类型" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/itemType/query?organizationId=${organizationId}&amp;page=0&amp;size=10&amp;roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询项目" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/items/query?organizationId=${organizationId}&amp;page=0&amp;size=10&amp;roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="itemId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">itemId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.itemName==&quot;${itemName}&quot;)].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询项目组" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/groups/query?page=0&amp;pageSize=10&amp;organizationId=${organizationId}&amp;roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询控制策略" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/control/strategies/query?page=0&amp;size=10&amp;organizationId=${organizationId}&amp;roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询控制规则" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/control/rules/query?organizationId=${organizationId}&amp;page=0&amp;size=10&amp;roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询项目映射" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/mapping/match/group?orgId=${organizationId}&amp;groupCode=&amp;groupName=&amp;page=0&amp;size=10&amp;roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询日记账类型" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/journal/types/query?&amp;page=0&amp;size=10&amp;organizationId=${organizationId}&amp;roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="journalTypeId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">journalTypeId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.journalTypeName==&quot;${journalTypeName}&quot;)].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询预算半年度" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/custom/enumerations/template/by/type?type=2031</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="periodSemiannual" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">periodSemiannual</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.messageKey==&quot;${Semiannual}&quot;)].value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Notfound</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="查询预算余额_工预算管理员预算" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交查询参数" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;versionId&quot;: &quot;${versionId}&quot;,&#xd;
	&quot;structureId&quot;: &quot;${structureId}&quot;,&#xd;
	&quot;scenarioId&quot;: &quot;${scenarioId}&quot;,&#xd;
	&quot;yearLimit&quot;: &quot;${periodYear}&quot;,&#xd;
	&quot;periodLowerLimit&quot;: &quot;${periodName}&quot;,&#xd;
	&quot;periodUpperLimit&quot;: &quot;${periodName}&quot;,&#xd;
	&quot;quarterLowerLimit&quot;: null,&#xd;
	&quot;quarterUpperLimit&quot;: null,&#xd;
	&quot;periodSummaryFlag&quot;: false,&#xd;
	&quot;amountQuarterFlag&quot;: &quot;AMOUNT&quot;,&#xd;
	&quot;queryLineList&quot;: [{&#xd;
		&quot;isAll&quot;: false,&#xd;
		&quot;parameterType&quot;: &quot;BGT_RULE_PARAMETER_ORG&quot;,&#xd;
		&quot;parameterCode&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;queryParameterList&quot;: [{&#xd;
		&quot;parameterValueId&quot;: ${employeeId1},&#xd;
			&quot;parameterValueCode&quot;: ${employeeId1},&#xd;
			&quot;parameterValueName&quot;: &quot;${employeeName1}&quot;&#xd;
		}]&#xd;
	}],&#xd;
	&quot;organizationId&quot;: &quot;${organizationId}&quot;,&#xd;
	&quot;companyId&quot;: ${companyId}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/balance/query/header/user</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">queryID</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;(.*)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Not found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询预算余额" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/balance/query/results/${queryID}?page=0&amp;size=10</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="totalNumber;bgtAmount;expReserveAmount;expUsedAmount;expAvailableAmount" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">totalNumber;bgtAmount;expReserveAmount;expUsedAmount;expAvailableAmount</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.queryResultCurrencyList[0].totalNumber;$.queryResultCurrencyList[0].bgtAmount;$.queryResultCurrencyList[0].expReserveAmount;$.queryResultCurrencyList[0].expUsedAmount;$.queryResultCurrencyList[0].expAvailableAmount</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found;Not found;Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="查询是否有预算记录" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">BudgetBalance</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NofFound</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="是否需要新建日记账" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String Balance=vars.get(&quot;BudgetBalance&quot;);
log.info(&quot;Balance:&quot;+Balance);
if (Balance.equals(&quot;NofFound&quot;))
	Balance=&quot;Y&quot;;//需要新建
else
	Balance=&quot;N&quot;;//不需要新建
log.info(&quot;Balance:&quot;+Balance);
vars.put(&quot;Balance&quot;,Balance);</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">//总预算
Double bgtAmount = Double.parseDouble(&quot;${bgtAmount}&quot;);
//总保留
Double expReserveAmount = Double.parseDouble(&quot;${expReserveAmount}&quot;);
//总发生
Double expUsedAmount = Double.parseDouble(&quot;${expUsedAmount}&quot;);
//总可用
Double expAvailableAmount = Double.parseDouble(&quot;${expAvailableAmount}&quot;);
log.info(&quot;**初始查询预算--预算额结果：**&quot;+bgtAmount);
log.info(&quot;**初始查询预算--保留额结果：**&quot;+expReserveAmount);
log.info(&quot;**初始查询预算--发生额结果：**&quot;+expUsedAmount);
log.info(&quot;**初始查询预算--可用额结果：**&quot;+expAvailableAmount);

//申请单的金额
String  flag=&quot;N&quot;;//定义表示，是否更新
int temp=(int)(bgtAmount*0.8-expUsedAmount-expReserveAmount);
log.info(&quot;**************temp:&quot;+temp);
int allAmountI=0;
if(temp&gt;10){
	allAmountI=temp;
}else{
	allAmountI=(int)((20+expUsedAmount+expReserveAmount)/0.8-bgtAmount);	
	if (allAmountI==0)
		allAmountI=1;
	flag=&quot;Y&quot;;
}
log.info(&quot;**************allAmountI:&quot;+allAmountI);
String allAmount=allAmountI+&quot;&quot;;
log.info(&quot;**************allAmount:&quot;+allAmount);
vars.put(&quot;allAmount&quot;,allAmount);
vars.put(&quot;flag&quot;,flag);
log.info(&quot;需要更新否:******&quot;+flag);
vars.put(&quot;flag&quot;,flag);






</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="新建日记账" enabled="true">
          <stringProp name="IfController.condition">&quot;${Balance}&quot; == &quot;Y&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="新建预算日记账_工预算管理员预算" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交预算参数" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;dto&quot;: {&#xd;
		&quot;companyId&quot;: ${companyId},&#xd;
		&quot;companyName&quot;: &quot;${companyName}&quot;,&#xd;
		&quot;organizationId&quot;: &quot;${organizationId}&quot;,&#xd;
		&quot;organizationName&quot;: &quot;${organizationName}&quot;,&#xd;
		&quot;structureId&quot;: &quot;${structureId}&quot;,&#xd;
		&quot;structureName&quot;: &quot;${structureName}&quot;,&#xd;
		&quot;description&quot;: &quot;&quot;,&#xd;
		&quot;reversedFlag&quot;: &quot;N&quot;,&#xd;
		&quot;employeeId&quot;: &quot;${employeeId1}&quot;,&#xd;
		&quot;employeeName&quot;: &quot;${employeeName1}&quot;,&#xd;
		&quot;unitName&quot;: &quot;periodNumber&quot;,&#xd;
		&quot;versionId&quot;: &quot;${versionId}&quot;,&#xd;
		&quot;versionName&quot;: &quot;${versionName}&quot;,&#xd;
		&quot;scenarioId&quot;: &quot;${scenarioId}&quot;,&#xd;
		&quot;scenarioName&quot;: &quot;${scenarioName}&quot;,&#xd;
		&quot;status&quot;: &quot;NEW&quot;,&#xd;
		&quot;journalTypeId&quot;: &quot;${journalTypeId}&quot;,&#xd;
		&quot;journalTypeName&quot;: &quot;${journalTypeName}&quot;,&#xd;
		&quot;periodStrategy&quot;: &quot;MONTH&quot;,&#xd;
		&quot;versionNumber&quot;: &quot;1&quot;,&#xd;
		&quot;attachmentOID&quot;: [],&#xd;
		&quot;formOid&quot;: null,&#xd;
		&quot;documentType&quot;: null&#xd;
	},&#xd;
	&quot;list&quot;: []&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/budget-service/api/budget/journals</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="journalHeaderId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">journalHeaderId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$..id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">Not found</stringProp>
                <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="更新预算日记账行" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;companyName&quot;: &quot;${companyName}&quot;,&#xd;
	&quot;companyId&quot;: ${companyId},&#xd;
	&quot;departmentName&quot;: &quot;&quot;,&#xd;
	&quot;unitId&quot;: &quot;&quot;,&#xd;
	&quot;employeeName&quot;: &quot;${employeeName1}&quot;,&#xd;
	&quot;employeeId&quot;: &quot;${employeeId1}&quot;,&#xd;
	&quot;itemName&quot;: &quot;${itemName}&quot;,&#xd;
	&quot;itemId&quot;: &quot;${itemId}&quot;,&#xd;
	&quot;periodName&quot;: &quot;${periodName}&quot;,&#xd;
	&quot;periodYear&quot;: ${periodYear},&#xd;
	&quot;periodQuarter&quot;: ${periodQuarter},&#xd;
	&quot;periodQuarterName&quot;: ${periodQuarterName},&#xd;
	&quot;periodSemiannual&quot;:&quot;${periodSemiannual}&quot;,&#xd;
&quot;periodSemiannualName&quot;:&quot;${periodSemiannual}&quot;,&#xd;
	&quot;currency&quot;: &quot;CNY&quot;,&#xd;
	&quot;rate&quot;: 1,&#xd;
	&quot;amount&quot;: 20,&#xd;
	&quot;functionalAmount&quot;: &quot;20&quot;,&#xd;
	&quot;quantity&quot;: 1,&#xd;
	&quot;versionNumber&quot;: 1,&#xd;
	&quot;isNew&quot;: true,&#xd;
	&quot;journalHeaderId&quot;: &quot;${journalHeaderId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/budget-service/api/budget/journals/insertOrUpdateLine</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交审批" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/budget-service/api/budget/journals/submitJournal/${journalHeaderId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="审核通过" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[&quot;${journalHeaderId}&quot;]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/budget-service/api/budget/journals/balance/create</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果可以提100不需要再次更新" enabled="true">
          <stringProp name="IfController.condition">&quot;${flag}&quot; !=&quot;N&quot; &amp;&amp;   &quot;${Balance}&quot; !=&quot;Y&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="新建预算日记账_工预算管理员预算" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交预算参数" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;dto&quot;: {&#xd;
		&quot;companyId&quot;: ${companyId},&#xd;
		&quot;companyName&quot;: &quot;${companyName}&quot;,&#xd;
		&quot;organizationId&quot;: &quot;${organizationId}&quot;,&#xd;
		&quot;organizationName&quot;: &quot;${organizationName}&quot;,&#xd;
		&quot;structureId&quot;: &quot;${structureId}&quot;,&#xd;
		&quot;structureName&quot;: &quot;${structureName}&quot;,&#xd;
		&quot;description&quot;: &quot;&quot;,&#xd;
		&quot;reversedFlag&quot;: &quot;N&quot;,&#xd;
		&quot;employeeId&quot;: &quot;${employeeId1}&quot;,&#xd;
		&quot;employeeName&quot;: &quot;${employeeName1}&quot;,&#xd;
		&quot;unitName&quot;: &quot;periodNumber&quot;,&#xd;
		&quot;versionId&quot;: &quot;${versionId}&quot;,&#xd;
		&quot;versionName&quot;: &quot;${versionName}&quot;,&#xd;
		&quot;scenarioId&quot;: &quot;${scenarioId}&quot;,&#xd;
		&quot;scenarioName&quot;: &quot;${scenarioName}&quot;,&#xd;
		&quot;status&quot;: &quot;NEW&quot;,&#xd;
		&quot;journalTypeId&quot;: &quot;${journalTypeId}&quot;,&#xd;
		&quot;journalTypeName&quot;: &quot;${journalTypeName}&quot;,&#xd;
		&quot;periodStrategy&quot;: &quot;MONTH&quot;,&#xd;
		&quot;versionNumber&quot;: &quot;1&quot;,&#xd;
		&quot;attachmentOID&quot;: [],&#xd;
		&quot;formOid&quot;: null,&#xd;
		&quot;documentType&quot;: null&#xd;
	},&#xd;
	&quot;list&quot;: []&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/budget-service/api/budget/journals</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="journalHeaderId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">journalHeaderId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$..id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">Not found</stringProp>
                <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="更新预算日记账行" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;companyName&quot;: &quot;${companyName}&quot;,&#xd;
	&quot;companyId&quot;: ${companyId},&#xd;
	&quot;departmentName&quot;: &quot;&quot;,&#xd;
	&quot;unitId&quot;: &quot;&quot;,&#xd;
	&quot;employeeName&quot;: &quot;${employeeName1}&quot;,&#xd;
	&quot;employeeId&quot;: &quot;${employeeId1}&quot;,&#xd;
	&quot;itemName&quot;: &quot;${itemName}&quot;,&#xd;
	&quot;itemId&quot;: &quot;${itemId}&quot;,&#xd;
	&quot;periodName&quot;: &quot;${periodName}&quot;,&#xd;
	&quot;periodYear&quot;: ${periodYear},&#xd;
	&quot;periodQuarter&quot;: ${periodQuarter},&#xd;
	&quot;periodQuarterName&quot;: ${periodQuarterName},&#xd;
	&quot;periodSemiannual&quot;:&quot;${periodSemiannual}&quot;,&#xd;
&quot;periodSemiannualName&quot;:&quot;${periodSemiannual}&quot;,&#xd;
	&quot;currency&quot;: &quot;CNY&quot;,&#xd;
	&quot;rate&quot;: 1,&#xd;
	&quot;amount&quot;: ${allAmount},&#xd;
	&quot;functionalAmount&quot;: &quot;${allAmount}&quot;,&#xd;
	&quot;quantity&quot;: 1,&#xd;
	&quot;versionNumber&quot;: 1,&#xd;
	&quot;isNew&quot;: true,&#xd;
	&quot;journalHeaderId&quot;: &quot;${journalHeaderId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/budget-service/api/budget/journals/insertOrUpdateLine</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交审批" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/budget-service/api/budget/journals/submitJournal/${journalHeaderId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="审核通过" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[&quot;${journalHeaderId}&quot;]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/budget-service/api/budget/journals/balance/create</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="查询预算余额_工预算管理员预算" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交查询参数" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;versionId&quot;: &quot;${versionId}&quot;,&#xd;
	&quot;structureId&quot;: &quot;${structureId}&quot;,&#xd;
	&quot;scenarioId&quot;: &quot;${scenarioId}&quot;,&#xd;
	&quot;yearLimit&quot;: &quot;${periodYear}&quot;,&#xd;
	&quot;periodLowerLimit&quot;: &quot;${periodName}&quot;,&#xd;
	&quot;periodUpperLimit&quot;: &quot;${periodName}&quot;,&#xd;
	&quot;quarterLowerLimit&quot;: null,&#xd;
	&quot;quarterUpperLimit&quot;: null,&#xd;
	&quot;periodSummaryFlag&quot;: false,&#xd;
	&quot;amountQuarterFlag&quot;: &quot;AMOUNT&quot;,&#xd;
	&quot;queryLineList&quot;: [{&#xd;
		&quot;isAll&quot;: false,&#xd;
		&quot;parameterType&quot;: &quot;BGT_RULE_PARAMETER_ORG&quot;,&#xd;
		&quot;parameterCode&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;queryParameterList&quot;: [{&#xd;
		&quot;parameterValueId&quot;: ${employeeId1},&#xd;
			&quot;parameterValueCode&quot;: ${employeeId1},&#xd;
			&quot;parameterValueName&quot;: &quot;${employeeName1}&quot;&#xd;
		}]&#xd;
	}],&#xd;
	&quot;organizationId&quot;: &quot;${organizationId}&quot;,&#xd;
	&quot;companyId&quot;: ${companyId}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/balance/query/header/user</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">queryID</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;(.*)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Not found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询预算余额" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/balance/query/results/${queryID}?page=0&amp;size=10</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">totalNumber1;bgtAmount1;expReserveAmount1;expUsedAmount1;expAvailableAmount1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.queryResultCurrencyList[0].totalNumber;$.queryResultCurrencyList[0].bgtAmount;$.queryResultCurrencyList[0].expReserveAmount;$.queryResultCurrencyList[0].expUsedAmount;$.queryResultCurrencyList[0].expAvailableAmount</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found;Not found;Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="查询处理员工的预算" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">//总预算
Double bgtAmountD = Double.parseDouble(&quot;${bgtAmount1}&quot;);
log.info(&quot;********Before*******总预算额********&quot;+bgtAmountD);
//总保留
Double expReserveAmountD = Double.parseDouble(&quot;${expReserveAmount1}&quot;);
log.info(&quot;********Before*******总保留额********&quot;+expReserveAmountD);
//总发生
Double expUsedAmountD = Double.parseDouble(&quot;${expUsedAmount1}&quot;);
log.info(&quot;********Before*******总发生额********&quot;+expUsedAmountD);
//总可用
Double expAvailableAmountD = Double.parseDouble(&quot;${expAvailableAmount1}&quot;);
log.info(&quot;********Before*******总可用额********&quot;+expAvailableAmountD);


//警告金额
int amountI=(int)(bgtAmountD*0.8+1-expUsedAmountD-expReserveAmountD);
String amount1=amountI+&quot;&quot;;
log.info(&quot;********Before********用户1警告金额********&quot;+amount1);
vars.put(&quot;amount1&quot;,amount1);
//禁止金额
int baseAmountI=(int)(bgtAmountD+1-expUsedAmountD-expReserveAmountD);
String baseAmount1=baseAmountI+&quot;&quot;;
log.info(&quot;********Before********用户1禁止金额********&quot;+baseAmount1);
vars.put(&quot;baseAmount1&quot;,baseAmount1);

</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="查询预算余额_员工2预算" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交查询参数" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;versionId&quot;: &quot;${versionId}&quot;,&#xd;
	&quot;structureId&quot;: &quot;${structureId}&quot;,&#xd;
	&quot;scenarioId&quot;: &quot;${scenarioId}&quot;,&#xd;
	&quot;yearLimit&quot;: &quot;${periodYear}&quot;,&#xd;
	&quot;periodLowerLimit&quot;: &quot;${periodName}&quot;,&#xd;
	&quot;periodUpperLimit&quot;: &quot;${periodName}&quot;,&#xd;
	&quot;quarterLowerLimit&quot;: null,&#xd;
	&quot;quarterUpperLimit&quot;: null,&#xd;
	&quot;periodSummaryFlag&quot;: false,&#xd;
	&quot;amountQuarterFlag&quot;: &quot;AMOUNT&quot;,&#xd;
	&quot;queryLineList&quot;: [{&#xd;
		&quot;isAll&quot;: false,&#xd;
		&quot;parameterType&quot;: &quot;BGT_RULE_PARAMETER_ORG&quot;,&#xd;
		&quot;parameterCode&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;queryParameterList&quot;: [{&#xd;
		&quot;parameterValueId&quot;: ${employeeId2},&#xd;
			&quot;parameterValueCode&quot;: ${employeeId2},&#xd;
			&quot;parameterValueName&quot;: &quot;${employeeName2}&quot;&#xd;
		}]&#xd;
	}],&#xd;
	&quot;organizationId&quot;: &quot;${organizationId}&quot;,&#xd;
	&quot;companyId&quot;: ${companyId}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/balance/query/header/user</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">queryID</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;(.*)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Not found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询预算余额" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/balance/query/results/${queryID}?page=0&amp;size=10</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="totalNumber;bgtAmount;expReserveAmount;expUsedAmount;expAvailableAmount" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">totalNumber;bgtAmount;expReserveAmount;expUsedAmount;expAvailableAmount</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.queryResultCurrencyList[0].totalNumber;$.queryResultCurrencyList[0].bgtAmount;$.queryResultCurrencyList[0].expReserveAmount;$.queryResultCurrencyList[0].expUsedAmount;$.queryResultCurrencyList[0].expAvailableAmount</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found;Not found;Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">//总预算
Double bgtAmount = Double.parseDouble(&quot;${bgtAmount}&quot;);
//总保留
Double expReserveAmount = Double.parseDouble(&quot;${expReserveAmount}&quot;);
//总发生
Double expUsedAmount = Double.parseDouble(&quot;${expUsedAmount}&quot;);
//总可用
Double expAvailableAmount = Double.parseDouble(&quot;${expAvailableAmount}&quot;);
//log.info(&quot;**初始查询预算结果：**&quot;+bgtAmount+&quot;***&quot;+expReserveAmount+&quot;***&quot;+expUsedAmount+&quot;***&quot;+expAvailableAmount);

log.info(&quot;**初始查询预算--预算额结果：**&quot;+bgtAmount);
log.info(&quot;**初始查询预算--保留额结果：**&quot;+expReserveAmount);
log.info(&quot;**初始查询预算--发生额结果：**&quot;+expUsedAmount);
log.info(&quot;**初始查询预算--可用额结果：**&quot;+expAvailableAmount);


//申请单的金额
String  flag=&quot;N&quot;;//定义表示，是否更新
int temp=(int)(bgtAmount*0.8-expUsedAmount-expReserveAmount);
log.info(&quot;**************temp &quot;+temp);
int allAmountI=0;
if(temp&gt;10){
	allAmountI=temp;
}else{
	allAmountI=(int)((20+expUsedAmount+expReserveAmount)/0.8-bgtAmount);	
		if (allAmountI==0)
		allAmountI=1;
	flag=&quot;Y&quot;;
}
String allAmount=allAmountI+&quot;&quot;;
log.info(&quot;**************allAmount &quot;+allAmount);
vars.put(&quot;allAmount&quot;,allAmount);






</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果可以提100不需要再次更新" enabled="false">
          <stringProp name="IfController.condition">&quot;${flag}&quot; !=&quot;N&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="新建预算日记账_员工2预算" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交预算参数" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;dto&quot;: {&#xd;
		&quot;companyId&quot;: ${companyId},&#xd;
		&quot;companyName&quot;: &quot;${companyName}&quot;,&#xd;
		&quot;organizationId&quot;: &quot;${organizationId}&quot;,&#xd;
		&quot;organizationName&quot;: &quot;${organizationName}&quot;,&#xd;
		&quot;structureId&quot;: &quot;${structureId}&quot;,&#xd;
		&quot;structureName&quot;: &quot;${structureName}&quot;,&#xd;
		&quot;description&quot;: &quot;&quot;,&#xd;
		&quot;reversedFlag&quot;: &quot;N&quot;,&#xd;
		&quot;employeeId&quot;: &quot;${employeeId2}&quot;,&#xd;
		&quot;employeeName&quot;: &quot;${employeeName2}&quot;,&#xd;
		&quot;unitName&quot;: &quot;periodNumber&quot;,&#xd;
		&quot;versionId&quot;: &quot;${versionId}&quot;,&#xd;
		&quot;versionName&quot;: &quot;${versionName}&quot;,&#xd;
		&quot;scenarioId&quot;: &quot;${scenarioId}&quot;,&#xd;
		&quot;scenarioName&quot;: &quot;${scenarioName}&quot;,&#xd;
		&quot;status&quot;: &quot;NEW&quot;,&#xd;
		&quot;journalTypeId&quot;: &quot;${journalTypeId}&quot;,&#xd;
		&quot;journalTypeName&quot;: &quot;${journalTypeName}&quot;,&#xd;
		&quot;periodStrategy&quot;: &quot;MONTH&quot;,&#xd;
		&quot;versionNumber&quot;: &quot;1&quot;,&#xd;
		&quot;attachmentOID&quot;: [],&#xd;
		&quot;formOid&quot;: null,&#xd;
		&quot;documentType&quot;: null&#xd;
	},&#xd;
	&quot;list&quot;: []&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/budget-service/api/budget/journals</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="journalHeaderId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">journalHeaderId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$..id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">Not found</stringProp>
                <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="更新预算日记账行" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;companyName&quot;: &quot;${companyName}&quot;,&#xd;
	&quot;companyId&quot;: ${companyId},&#xd;
	&quot;departmentName&quot;: &quot;&quot;,&#xd;
	&quot;unitId&quot;: &quot;&quot;,&#xd;
	&quot;employeeName&quot;: &quot;${employeeName2}&quot;,&#xd;
	&quot;employeeId&quot;: &quot;${employeeId2}&quot;,&#xd;
	&quot;itemName&quot;: &quot;${itemName}&quot;,&#xd;
	&quot;itemId&quot;: &quot;${itemId}&quot;,&#xd;
	&quot;periodName&quot;: &quot;${periodName}&quot;,&#xd;
	&quot;periodYear&quot;: ${periodYear},&#xd;
	&quot;periodQuarter&quot;: ${periodQuarter},&#xd;
	&quot;periodQuarterName&quot;: ${periodQuarterName},&#xd;
	&quot;periodSemiannual&quot;:&quot;${periodSemiannual}&quot;,&#xd;
&quot;periodSemiannualName&quot;:&quot;${periodSemiannual}&quot;,&#xd;
	&quot;currency&quot;: &quot;CNY&quot;,&#xd;
	&quot;rate&quot;: 1,&#xd;
	&quot;amount&quot;: ${allAmount},&#xd;
	&quot;functionalAmount&quot;: &quot;${allAmount}&quot;,&#xd;
	&quot;quantity&quot;: 1,&#xd;
	&quot;versionNumber&quot;: 1,&#xd;
	&quot;isNew&quot;: true,&#xd;
	&quot;journalHeaderId&quot;: &quot;${journalHeaderId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/budget-service/api/budget/journals/insertOrUpdateLine</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交审批" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/budget-service/api/budget/journals/submitJournal/${journalHeaderId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="审核通过" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[&quot;${journalHeaderId}&quot;]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/budget-service/api/budget/journals/balance/create</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="查询预算余额_员工2预算" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交查询参数" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;versionId&quot;: &quot;${versionId}&quot;,&#xd;
	&quot;structureId&quot;: &quot;${structureId}&quot;,&#xd;
	&quot;scenarioId&quot;: &quot;${scenarioId}&quot;,&#xd;
	&quot;yearLimit&quot;: &quot;${periodYear}&quot;,&#xd;
	&quot;periodLowerLimit&quot;: &quot;${periodName}&quot;,&#xd;
	&quot;periodUpperLimit&quot;: &quot;${periodName}&quot;,&#xd;
	&quot;quarterLowerLimit&quot;: null,&#xd;
	&quot;quarterUpperLimit&quot;: null,&#xd;
	&quot;periodSummaryFlag&quot;: false,&#xd;
	&quot;amountQuarterFlag&quot;: &quot;AMOUNT&quot;,&#xd;
	&quot;queryLineList&quot;: [{&#xd;
		&quot;isAll&quot;: false,&#xd;
		&quot;parameterType&quot;: &quot;BGT_RULE_PARAMETER_ORG&quot;,&#xd;
		&quot;parameterCode&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;queryParameterList&quot;: [{&#xd;
		&quot;parameterValueId&quot;: ${employeeId2},&#xd;
			&quot;parameterValueCode&quot;: ${employeeId2},&#xd;
			&quot;parameterValueName&quot;: &quot;${employeeName2}&quot;&#xd;
		}]&#xd;
	}],&#xd;
	&quot;organizationId&quot;: &quot;${organizationId}&quot;,&#xd;
	&quot;companyId&quot;: ${companyId}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/balance/query/header/user</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">queryID</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;(.*)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Not found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询预算余额" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/balance/query/results/${queryID}?page=0&amp;size=10</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">totalNumber2;bgtAmount2;expReserveAmount2;expUsedAmount2;expAvailableAmount2</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.queryResultCurrencyList[0].totalNumber;$.queryResultCurrencyList[0].bgtAmount;$.queryResultCurrencyList[0].expReserveAmount;$.queryResultCurrencyList[0].expUsedAmount;$.queryResultCurrencyList[0].expAvailableAmount</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found;Not found;Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.text.DecimalFormat;
DecimalFormat df = new DecimalFormat(&quot;#.00&quot;);
//总预算
Double bgtAmountD = Double.parseDouble(&quot;${bgtAmount2}&quot;);
log.info(&quot;********Before*******总预算额********&quot;+bgtAmountD);
//总保留
Double expReserveAmountD = Double.parseDouble(&quot;${expReserveAmount2}&quot;);
log.info(&quot;********Before*******总保留额********&quot;+expReserveAmountD);
//总发生
Double expUsedAmountD = Double.parseDouble(&quot;${expUsedAmount2}&quot;);
log.info(&quot;********Before*******总发生额********&quot;+expUsedAmountD);
//总可用
Double expAvailableAmountD = Double.parseDouble(&quot;${expAvailableAmount2}&quot;);
log.info(&quot;********Before*******总可用额********&quot;+expAvailableAmountD);



//警告金额
int amount2I=(int)(bgtAmountD*0.8-expUsedAmountD-expReserveAmountD);
String amount2=amount2I+&quot;&quot;;
log.info(&quot;警告金额：&quot;+amount2);
vars.put(&quot;amount2&quot;,amount2);
//禁止金额
int baseAmount2I=(int)(bgtAmountD+1-expUsedAmountD-expReserveAmountD);
String baseAmount2=baseAmount2I+&quot;&quot;;
log.info(&quot;禁止金额：&quot;+baseAmount2);
vars.put(&quot;baseAmount2&quot;,baseAmount2);


//用户1警告/禁止金额
Double amount1I=Double.parseDouble(&quot;${amount1}&quot;);
Double baseAmount1I=Double.parseDouble(&quot;${baseAmount1}&quot;);
//分摊比例
int  amountsI1=(int)(amount1I+baseAmount2I); //用户1警告费用+用户2禁止费用
String amounts1=amountsI1+&quot;&quot;;
log.info(&quot;********amounts1********&quot;+amounts1);
vars.put(&quot;amounts1&quot;,amounts1);
double p1t=amount1I/(amount1I+baseAmount2I);
log.info(&quot;用户1的分摊比率:&quot;+p1t+&quot;&quot;);
log.info(&quot;amount1I:&quot;+String.valueOf(amount1I));
log.info(&quot;baseAmount2I:&quot;+String.valueOf(baseAmount2I));
String p1=&quot;0&quot;+df.format(p1t);
log.info(&quot;********p1********&quot;+p1);
vars.put(&quot;p1&quot;,p1);
double p2t=baseAmount2I/(amount1I+baseAmount2I);
//String p2=p2t+&quot;&quot;;
String p2=&quot;0&quot;+df.format(p2t);
log.info(&quot;********p2********&quot;+p2);
vars.put(&quot;p2&quot;,p2);





int  amountsI2=(int)(baseAmount1I+amount2I);
String amounts2=amountsI2+&quot;&quot;;
log.info(&quot;********amounts2********&quot;+amounts2);
vars.put(&quot;amounts2&quot;,amounts2);
double p3t=baseAmount1I/(baseAmount1I+amount2I);
//String p3=p3t+&quot;&quot;;
String p3=&quot;0&quot;+df.format(p3t);
log.info(&quot;********p3********&quot;+p3);
vars.put(&quot;p3&quot;,p3);
double p4t=amount2I/(baseAmount1I+amount2I);
//String p4=p4t+&quot;&quot;;
String p4=&quot;0&quot;+df.format(p4t);
log.info(&quot;********p4********&quot;+p4);
vars.put(&quot;p4&quot;,p4);
int  amountsI3=(int)(amount1I+amount2I);
String amounts3=amountsI3+&quot;&quot;;
log.info(&quot;********amounts3********&quot;+amounts3);
vars.put(&quot;amounts3&quot;,amounts3);
double p5t=amount1I/(amount1I+amount2I);
//String p5=p5t+&quot;&quot;;
String p5=&quot;0&quot;+df.format(p5t);
log.info(&quot;********p5********&quot;+p5);
vars.put(&quot;p5&quot;,p5);
Double p6t=amount2I/(amount1I+amount2I);
//String p6=p6t+&quot;&quot;;
String p6=&quot;0&quot;+df.format(p6t);
log.info(&quot;********p6********&quot;+p6);
vars.put(&quot;p6&quot;,p6);</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.text.DecimalFormat;
import java.math.BigDecimal;
DecimalFormat df = new DecimalFormat(&quot;#.00&quot;);
//总预算
Double bgtAmountD = Double.parseDouble(&quot;${bgtAmount2}&quot;);
log.info(&quot;********Before*******总预算额********&quot;+bgtAmountD);
//总保留
Double expReserveAmountD = Double.parseDouble(&quot;${expReserveAmount2}&quot;);
log.info(&quot;********Before*******总保留额********&quot;+expReserveAmountD);
//总发生
Double expUsedAmountD = Double.parseDouble(&quot;${expUsedAmount2}&quot;);
log.info(&quot;********Before*******总发生额********&quot;+expUsedAmountD);
//总可用
Double expAvailableAmountD = Double.parseDouble(&quot;${expAvailableAmount2}&quot;);
log.info(&quot;********Before*******总可用额********&quot;+expAvailableAmountD);



//警告金额
int amount2I=(int)(bgtAmountD*0.8-expUsedAmountD-expReserveAmountD);
String amount2=amount2I+&quot;&quot;;
log.info(&quot;用户2警告金额：&quot;+amount2);
vars.put(&quot;amount2&quot;,amount2);
//禁止金额
int baseAmount2I=(int)(bgtAmountD+1-expUsedAmountD-expReserveAmountD);
String baseAmount2=baseAmount2I+&quot;&quot;;
log.info(&quot;用户2禁止金额：&quot;+baseAmount2);
vars.put(&quot;baseAmount2&quot;,baseAmount2);


//用户1警告/禁止金额
Double amount1I=Double.parseDouble(&quot;${amount1}&quot;);
Double baseAmount1I=Double.parseDouble(&quot;${baseAmount1}&quot;);
//分摊比例
int  amountsI1=(int)(amount1I+baseAmount2I); //用户1警告费用+用户2禁止费用
String amounts1=amountsI1+&quot;&quot;;
log.info(&quot;********amounts1********&quot;+amounts1);
vars.put(&quot;amounts1&quot;,amounts1);
double p1t=amount1I/(amount1I+baseAmount2I);
BigDecimal b = new BigDecimal(p1t*100);
double f1 = b.setScale(2, BigDecimal.ROUND_HALF_UP).doubleValue()/100;


log.info(&quot;amount1I:&quot;+String.valueOf(amount1I));
log.info(&quot;baseAmount2I:&quot;+String.valueOf(baseAmount2I));
vars.put(&quot;p1&quot;,f1+&quot;&quot;);



double p2t=baseAmount2I/(amount1I+baseAmount2I);
BigDecimal b2 = new BigDecimal(p2t*100);
double f2 = b2.setScale(2, BigDecimal.ROUND_HALF_UP).doubleValue()/100;
log.info(&quot;用户1的分摊比率p1:&quot;+f1+&quot;&quot;);
log.info(&quot;用户2的分摊比率p2:&quot;+f2+&quot;&quot;);
vars.put(&quot;p2&quot;,f2+&quot;&quot;);





int  amountsI2=(int)(baseAmount1I+amount2I);
String amounts2=amountsI2+&quot;&quot;;
log.info(&quot;********amounts2********&quot;+amounts2);
vars.put(&quot;amounts2&quot;,amounts2);
double p3t=baseAmount1I/(baseAmount1I+amount2I);
//String p3=p3t+&quot;&quot;;
String p3=&quot;0&quot;+df.format(p3t);
log.info(&quot;********p3********&quot;+p3);
vars.put(&quot;p3&quot;,p3);
double p4t=amount2I/(baseAmount1I+amount2I);
//String p4=p4t+&quot;&quot;;
String p4=&quot;0&quot;+df.format(p4t);
log.info(&quot;********p4********&quot;+p4);
vars.put(&quot;p4&quot;,p4);
int  amountsI3=(int)(amount1I+amount2I);
String amounts3=amountsI3+&quot;&quot;;
log.info(&quot;********amounts3********&quot;+amounts3);
vars.put(&quot;amounts3&quot;,amounts3);
double p5t=amount1I/(amount1I+amount2I);
//String p5=p5t+&quot;&quot;;
String p5=&quot;0&quot;+df.format(p5t);
log.info(&quot;********p5********&quot;+p5);
vars.put(&quot;p5&quot;,p5);
Double p6t=amount2I/(amount1I+amount2I);
//String p6=p6t+&quot;&quot;;
String p6=&quot;0&quot;+df.format(p6t);
log.info(&quot;********p6********&quot;+p6);
vars.put(&quot;p6&quot;,p6);</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="查询报销表单数据" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询报销单表单" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/custom/forms/my/available?formType=102</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="formOID;formId,formName;formType" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">bxFormOID;bxFormId;bxFormType</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.formName==&quot;${bxFormName}&quot;)].formOID;$..[?(@.formName==&quot;${bxFormName}&quot;)].formId;$..[?(@.formName==&quot;${bxFormName}&quot;)].formType</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询表单详情" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/custom/forms/${bxFormOID}?roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="bxSelect_box" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">bxSelect_box</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;fieldContent&quot;:&quot;(.+?),{</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Not found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="bxCustomFormProperties;bxCustomFormPropertyMap;bxCustomFormFields" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">bxCustomFormProperties;bxCustomFormPropertyMap;bxCustomFormFields</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.customFormProperties;$.customFormPropertyMap;$.customFormFields</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="bxFieldName" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">bxFieldName</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;fieldName&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Not found</stringProp>
              <stringProp name="RegexExtractor.match_number">-1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor-2" enabled="false">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">import java.util.ArrayList;
import org.json.*; 
String fieldName_matchNr = vars.get(&quot;bxFieldName_matchNr&quot;);

int len=Integer.parseInt(fieldName_matchNr);
String response_data=prev.getResponseDataAsString();
JSONObject data_obj= new JSONObject(response_data); 
ArrayList list =new ArrayList(30);
list.add(&quot;${departmentOID}&quot;);                     //部门的value
list.add(&quot;${bxFormName}&quot;);                          //事由 默认值：“表单名称”
list.add(&quot;&quot;);		           	//收款单位/个人
list.add(&quot;&quot;);                             //源泉税


StringBuilder sb = new StringBuilder();
for(int i=0;i&lt;len;i++){
	String  ids= data_obj.get(&quot;customFormFields&quot;).get(i).get(&quot;id&quot;).toString();
	String  fieldOIDs= data_obj.get(&quot;customFormFields&quot;).get(i).get(&quot;fieldOID&quot;).toString();
	String  messageKeys= data_obj.get(&quot;customFormFields&quot;).get(i).get(&quot;messageKey&quot;).toString();
	String  fieldNames= data_obj.get(&quot;customFormFields&quot;).get(i).get(&quot;fieldName&quot;).toString();
	String  fieldTypes= data_obj.get(&quot;customFormFields&quot;).get(i).get(&quot;fieldType&quot;).toString();
	String  reportShows= data_obj.get(&quot;customFormFields&quot;).get(i).get(&quot;reportShow&quot;).toString();
	String  isPDFShows= data_obj.get(&quot;customFormFields&quot;).get(i).get(&quot;isPDFShow&quot;).toString();
	String  requireds= data_obj.get(&quot;customFormFields&quot;).get(i).get(&quot;required&quot;).toString();
	String  readonlys= data_obj.get(&quot;customFormFields&quot;).get(i).get(&quot;readonly&quot;).toString();
	String  dataSources= data_obj.get(&quot;customFormFields&quot;).get(i).get(&quot;dataSource&quot;).toString().replace(&quot;\&quot;&quot;,&quot;\\\\\&quot;&quot;);
	String  fieldConstraints= data_obj.get(&quot;customFormFields&quot;).get(i).get(&quot;fieldConstraint&quot;).toString().replace(&quot;\&quot;&quot;,&quot;\\\\\&quot;&quot;);
	String  fieldContents= data_obj.get(&quot;customFormFields&quot;).get(i).get(&quot;fieldContent&quot;).toString().replace(&quot;\&quot;&quot;,&quot;\\\\\&quot;&quot;).replace(&quot;\n&quot;,&quot;\\\\n&quot;);
	String valueKey=list.get(i).toString();
     String sd1=&quot;{\&quot;id\&quot;:\&quot;&quot;+ids+&quot;\&quot;,\&quot;fieldOID\&quot;:\&quot;&quot;+fieldOIDs+&quot;\&quot;,\&quot;sequence\&quot;:&quot;+i+&quot;,\&quot;messageKey\&quot;:\&quot;&quot;+messageKeys+&quot;\&quot;,\&quot;formId\&quot;:null,\&quot;fieldName\&quot;:\&quot;&quot;+fieldNames+&quot;\&quot;,\&quot;fieldType\&quot;: \&quot;&quot;+fieldTypes+&quot;\&quot;,\&quot;dataSource\&quot;:\&quot;&quot;+dataSources+&quot;\&quot;,\&quot;valid\&quot;: true,\&quot;required\&quot;: &quot;+requireds+&quot;,\&quot;createdDate\&quot;: null,\&quot;lastModifiedDate\&quot;: null,\&quot;promptInfo\&quot;: \&quot;\&quot;,\&quot;fieldConstraint\&quot;: \&quot;&quot;+fieldConstraints+&quot;\&quot;,\&quot;readonly\&quot;: &quot;+readonlys+&quot;,\&quot;isReadOnly\&quot;: false,\&quot;guiWidgetId\&quot;: null,\&quot;value\&quot;:\&quot;&quot;+valueKey+&quot;\&quot;,\&quot;fieldContent\&quot;:\&quot;&quot;+fieldContents+&quot;\&quot;,\&quot;fieldCode\&quot;: null,\&quot;isPDFShow\&quot;: &quot;+isPDFShows+&quot;,\&quot;reportShow\&quot;: &quot;+reportShows+&quot;,\&quot;reportOrmKey\&quot;: null,\&quot;formOID\&quot;: \&quot;${bxFormOID}\&quot;,\&quot;i18n\&quot;: null},&quot;;
      String sd2=&quot;{\&quot;id\&quot;:\&quot;&quot;+ids+&quot;\&quot;,\&quot;fieldOID\&quot;:\&quot;&quot;+fieldOIDs+&quot;\&quot;,\&quot;sequence\&quot;:&quot;+i+&quot;,\&quot;messageKey\&quot;:\&quot;&quot;+messageKeys+&quot;\&quot;,\&quot;formId\&quot;:null,\&quot;fieldName\&quot;:\&quot;&quot;+fieldNames+&quot;\&quot;,\&quot;fieldType\&quot;: \&quot;&quot;+fieldTypes+&quot;\&quot;,\&quot;dataSource\&quot;:\&quot;&quot;+dataSources+&quot;\&quot;,\&quot;valid\&quot;: true,\&quot;required\&quot;: &quot;+requireds+&quot;,\&quot;createdDate\&quot;: null,\&quot;lastModifiedDate\&quot;: null,\&quot;promptInfo\&quot;: \&quot;\&quot;,\&quot;fieldConstraint\&quot;: \&quot;&quot;+fieldConstraints+&quot;\&quot;,\&quot;readonly\&quot;: &quot;+readonlys+&quot;,\&quot;isReadOnly\&quot;: false,\&quot;guiWidgetId\&quot;: null,\&quot;value\&quot;:\&quot;&quot;+valueKey+&quot;\&quot;,\&quot;fieldContent\&quot;:\&quot;&quot;+fieldContents+&quot;\&quot;,\&quot;fieldCode\&quot;: null,\&quot;isPDFShow\&quot;: &quot;+isPDFShows+&quot;,\&quot;reportShow\&quot;: &quot;+reportShows+&quot;,\&quot;reportOrmKey\&quot;: null,\&quot;formOID\&quot;: \&quot;${bxFormOID}\&quot;,\&quot;i18n\&quot;: null}&quot;;
	if(i == len-1){
		sb.append(sd2);
	}else{
		sb.append(sd1);
	}		
}
String bxCustomform=sb.toString().replaceAll(&quot;\&quot;null\&quot;&quot;,&quot;null&quot;);
String bxCustomform=&quot;[&quot;+bxCustomform+&quot;]&quot;;
log.info(&quot;bxCustomform==&quot;+bxCustomform);
vars.put(&quot;bxCustomform&quot;,bxCustomform);</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取报销单信息" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">customFormFields;referenceOID;tenantId;setOfBooksId;customFormProperties;customFormPropertyMap</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.customFormFields;$.referenceOID;$.tenantId;$.setOfBooksId;$.customFormProperties;$.customFormPropertyMap</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">null;null;null;null;null;null</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="日常报销单" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建日常管理报销单" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;${bxFormOID}&quot;,&#xd;
	&quot;id&quot;: &quot;${bxFormId}&quot;,&#xd;
	&quot;formName&quot;: &quot;${bxFormName}&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;iconUrl&quot;: null,&#xd;
	&quot;messageKey&quot;: null,&#xd;
	&quot;formType&quot;: ${bxFormType},&#xd;
	&quot;asSystem&quot;: false,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;${NewUTCstartDate}&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;${NewUTCstartDate}&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: ${bxCustomFormFields},&#xd;
	&quot;remark&quot;: null,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1001,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: null,&#xd;
	&quot;companyOID&quot;: &quot;${companyOID}&quot;,&#xd;
	&quot;companyId&quot;: ${companyId},&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: ${bxCustomFormProperties},&#xd;
	&quot;customFormPropertyMap&quot;: ${bxCustomFormPropertyMap},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: null,&#xd;
	&quot;tenantId&quot;: &quot;${tenantId}&quot;,&#xd;
	&quot;booksID&quot;: null,&#xd;
	&quot;setOfBooksId&quot;: &quot;${setOfBooksId}&quot;,&#xd;
	&quot;fromType&quot;: 1,&#xd;
	&quot;visibleCompanyScope&quot;: 1,&#xd;
	&quot;companyOIDList&quot;: null,&#xd;
	&quot;companyList&quot;: null,&#xd;
	&quot;companyName&quot;: null,&#xd;
	&quot;budgetEnalbed&quot;: false,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;currencySame&quot;: false,&#xd;
	&quot;custFormValues&quot;: ${bxCustomform}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/draft</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取bxBusinessCode" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">bxBusinessCode</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.businessCode</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取expenseReportOID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">bxExpenseReportOID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].bizOID</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取bxReasonFormValueOID;bxDeptFormValueOID;bxReasonBizOID;" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">bxReasonFormValueOID;bxDeptFormValueOID;</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].formValueOID;$..[?(@.fieldName==&quot;部门&quot;)].formValueOID;</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-673250867">businessCode</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;customFormFields&quot;);
log.info(&quot;customFormFields:&quot;+json);


JSONArray customFormFields = JSON.parseArray(json);
int size = customFormFields.size();


for (int i = 0; i &lt; size; i++){
		   jj = customFormFields.getJSONObject(i);
             if (jj.get(&quot;fieldName&quot;).equals(&quot;事由&quot;))
           		jj.put(&quot;value&quot;,&quot;日常报销单测试&quot;);
             if (jj.get(&quot;fieldName&quot;).equals(&quot;部门&quot;))
           		jj.put(&quot;value&quot;,vars.get(&quot;departmentOID&quot;));
             if (jj.get(&quot;fieldName&quot;).equals(&quot;审批人&quot;))
           		jj.put(&quot;value&quot;,vars.get(&quot;userOID&quot;));
            if (jj.get(&quot;fieldName&quot;).equals(&quot;预算明细&quot;))
             {
			String vv=vars.get(&quot;feiyong&quot;);
			log.info(&quot;feiyong===&quot;+vv);
             	jj.put(&quot;value&quot;,vv);
             }

}

String str =customFormFields.toString();
log.info(&quot;NcustomFormFields:&quot;+str);
vars.put(&quot;bxCustomform&quot;,str);

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看报销单状态-编辑中" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="businessCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${bxBusinessCode}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">businessCode</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/expense/reports/search/my?roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-749828020">&quot;status&quot;:1001</stringProp>
                <stringProp name="2030560658">&quot;rejectType&quot;:1000</stringProp>
                <stringProp name="-312141990">&quot;businessCode&quot;:&quot;${bxBusinessCode}&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="报销单重新创建费用(${expenseTypeName})禁止费用" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取表单的费用列表" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/custom/forms/${bxFormOID}/selected/expense/types?setOfBooksId=${setOfBooksId}&amp;userOID=${userOID}&amp;createManually=true</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取${expenseTypeName}expenseTypeName" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">Daba_expenseTypeName</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;${expenseTypeName}&quot;)].expenseTypeName</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取${expenseTypeName}Daba_FormOID" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">Daba_filedID</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;${expenseTypeName}&quot;)].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取${expenseTypeName}Daba_expenseTypeOID" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">Daba_expenseTypeOID</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;${expenseTypeName}&quot;)].expenseTypeOID</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取表单的费用控件" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/expense/types/select/${Daba_filedID}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">OtherPeopleFields</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.fields</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单费用创建" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;${Daba_expenseTypeName}&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${Daba_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${Daba_filedID}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;coach&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.coach&quot;,&#xd;
	&quot;receiptList&quot;: [],&#xd;
	&quot;amount&quot;: ${baseAmount1},&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;createdDate&quot;: &quot;${NewUTCstartDate}&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;comment&quot;: &quot;&quot;,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: null,&#xd;
	&quot;data&quot;:${OtherPeopleFields},&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseReportOID&quot;: &quot;${bxExpenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;paymentType&quot;: &quot;1001&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/invoice/api/v5/invoices</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取invoiceOID" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">NewinvoiceOID</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows.invoiceOID</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">NotFound</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="修改费用" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${NewinvoiceView}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/invoice/api/v5/invoices</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="修改费用" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonParser;
import com.google.gson.JsonObject;
String json = vars.get(&quot;invoiceView&quot;);
log.info(&quot;invoiceView===========&quot;+json);


JsonObject jsonObject=new JsonParser().parse(json).getAsJsonObject();
jsonObject.addProperty(&quot;expenseAmount&quot;,vars.get(&quot;amount&quot;));
jsonObject.addProperty(&quot;orderAmount&quot;,vars.get(&quot;amount&quot;));
jsonObject.addProperty(&quot;originalApprovedNonVat&quot;,vars.get(&quot;amount&quot;));
jsonObject.addProperty(&quot;baseAmount&quot;,vars.get(&quot;amount&quot;));
jsonObject.addProperty(&quot;nonVatBaseAmount&quot;,vars.get(&quot;amount&quot;));
jsonObject.addProperty(&quot;amount&quot;,vars.get(&quot;amount&quot;));
jsonObject.addProperty(&quot;actualCurrencyAmount&quot;,vars.get(&quot;amount&quot;));
jsonObject.addProperty(&quot;originalAmount&quot;,vars.get(&quot;amount&quot;));
jsonObject.addProperty(&quot;baseApprovedNonVat&quot;,vars.get(&quot;amount&quot;));
jsonObject.addProperty(&quot;aaaaa&quot;,111);

//处理expenseApportion
JsonArray jsonArray=new JsonArray();

JsonObject expenseApportion=jsonObject.getAsJsonArray(&quot;expenseApportion&quot;).get(0).getAsJsonObject();
expenseApportion.addProperty(&quot;amount&quot;,vars.get(&quot;amount&quot;));
expenseApportion.addProperty(&quot;baseCurrencyAmount&quot;,vars.get(&quot;amount&quot;));
jsonArray.add(expenseApportion);
jsonObject.add(&quot;expenseApportion&quot;,jsonArray);




String str =jsonObject.toString();
log.info(&quot;NewinvoiceView==:&quot;+jsonObject.toString());
vars.put(&quot;NewinvoiceView&quot;,str);


</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建费用" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;${currency}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;${expenseTypeName}&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${bxExpenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${bxExpenseId}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;${bxExpenseTypeIconName}&quot;,&#xd;
	&quot;expenseTypeKey&quot;: null,&#xd;
	&quot;amount&quot;: ${baseAmount1},&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;${today}T08:42:20Z&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;${currency}&quot;,&#xd;
	&quot;paymentType&quot;: 1001,&#xd;
	&quot;comment&quot;: &quot;&quot;,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;digitalInvoice&quot;: {&#xd;
		&quot;consumptionTaxCode&quot;: &quot;${taxCode}&quot;,&#xd;
		&quot;taxRate&quot;: 10,&#xd;
		&quot;fee&quot;: ${baseAmount1},&#xd;
		&quot;feeWithoutTax&quot;:${baseAmount},&#xd;
		&quot;tax&quot;: ${baseAmount2},&#xd;
		&quot;billingTime&quot;: &quot;1551948138&quot;,&#xd;
		&quot;vatInvoiceCurrencyCode&quot;: &quot;${currency}&quot;&#xd;
	},&#xd;
	&quot;invoiceInsteadReason&quot;: null,&#xd;
	&quot;data&quot;: [],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseApportion&quot;: [{&#xd;
		&quot;apportionmentOID&quot;: null,&#xd;
		&quot;expenseOID&quot;: null,&#xd;
		&quot;amount&quot;: ${baseAmount},&#xd;
		&quot;baseCurrencyAmount&quot;: null,&#xd;
		&quot;relevantPerson&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;personName&quot;: &quot;${employeeName}&quot;,&#xd;
		&quot;personEmployeeID&quot;: null,&#xd;
		&quot;defaultApportion&quot;: true,&#xd;
		&quot;isEditable&quot;: true,&#xd;
		&quot;isCostCenterItemEditable&quot;: null,&#xd;
		&quot;proportion&quot;: 1,&#xd;
		&quot;costCenterItems&quot;: [{&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;costCenterOID&quot;: &quot;00000000-0000-0000-0000-000000000000&quot;,&#xd;
			&quot;costCenterItemOID&quot;: &quot;${departmentOID}&quot;,&#xd;
			&quot;costCenterItemName&quot;: &quot;${departmentName}&quot;,&#xd;
			&quot;required&quot;: null,&#xd;
			&quot;itemCode&quot;: &quot;&quot;,&#xd;
			&quot;departmentOid&quot;: &quot;${departmentOID}&quot;,&#xd;
			&quot;name&quot;: &quot;${departmentName}&quot;&#xd;
		}],&#xd;
		&quot;applicationApportionmentId&quot;: null,&#xd;
		&quot;index&quot;: 0&#xd;
	}],&#xd;
	&quot;expenseReportOID&quot;: &quot;${bxExpenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/invoice/api/v5/invoices</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取bxExpenseTypeInvoiceOID;bxExpenseTypeIconURL;bxExpenseTypeCategorySimpleDTO;bxExpenseTypeData" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">bxExpenseTypeInvoiceOID;bxExpenseTypeIconURL;bxExpenseTypeCategorySimpleDTO;bxExpenseTypeData</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;${bxExpenseType}&quot;)].invoiceOID;$..[?(@.expenseTypeName==&quot;${bxExpenseType}&quot;)].expenseTypeIconURL;$..[?(@.expenseTypeName==&quot;${bxExpenseType}&quot;)].expenseTypeCategorySimpleDTO;$.rows.invocieView.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found;Not found</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看报销单详情" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${bxExpenseReportOID}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String response_data=prev.getResponseDataAsString();
vars.put(&quot;submitResponse_data&quot;,response_data);
log.info(&quot;response_data========&quot;+response_data);</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取bxCustFormValues;bxExpenseReportInvoices;bxInvoiceGroups;bxExpenseTypes" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">bxCustFormValues;bxExpenseReportInvoices;bxInvoiceGroups;bxExpenseTypes;applicantOID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.custFormValues;$.expenseReportInvoices;$.invoiceGroups;$.expenseTypes;$.applicantOID</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found;Not found;Not found</stringProp>
              <stringProp name="TestPlan.comments">expenseReportInvoices</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取修改参数" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">invoiceOID;expenseTypeId;expenseTypeOID;expenseTypeCategoryOID;userOID;applicantName;apportionmentOID;costCenterOID;costCenterItemOID;expenseReportOID;originalAmount;preCreatedDate;companyOID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[0].invoiceOID;$.expenseReportInvoices[0].invoiceView.expenseTypeId;$.expenseReportInvoices[0].invoiceView.expenseTypeOID;$.expenseReportInvoices[0].invoiceView.expenseTypeCategorySimpleDTO.expenseTypeCategoryOID;$.applicantOID;$.applicantName;$.expenseReportInvoices[0].invoiceView.expenseApportion[0].apportionmentOID;$.expenseReportInvoices[0].invoiceView.expenseApportion[0].costCenterItems[0].costCenterOID;$.expenseReportInvoices[0].invoiceView.expenseApportion[0].costCenterItems[0].costCenterItemOID;$.custFormValues[0].bizOID;$.expenseReportInvoices[0].invoiceView.originalAmount;$.expenseReportInvoices[0].invoiceView.createdDate;$.companyOID</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">apportionmentOID1;apportionmentOID2</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.invoiceGroups[0].invoices[0].invoiceView.expenseApportion[0].apportionmentOID;$.invoiceGroups[0].invoices[0].invoiceView.expenseApportion[1].apportionmentOID</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">data</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交-禁止" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2030752013">${forbidTip}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="报销单禁止提交" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单详情" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${bxExpenseReportOID}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="需要报销单提交需要的参数" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">draft;businessCode</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows;$.rows.businessCode</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">NULL;NULL</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取后续需要的参数" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">bxCustFormValues;bxExpenseReportInvoices;bxInvoiceGroups;bxExpenseTypes;applicantOID;userOID;applicantName</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows.custFormValues;$.rows.expenseReportInvoices;$.rows.invoiceGroups;$.rows.expenseTypes;$.rows.applicantOID;$.rows.applicantOID;$.rows.applicantName</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found;Not found;Not found;Not found;Not found</stringProp>
                <stringProp name="TestPlan.comments">expenseReportInvoices</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单费用列表" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${bxExpenseReportOID}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">expenseReportInvoices</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows.expenseReportInvoices</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">NULL</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取修改参数" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invoiceOID;expenseTypeId;expenseTypeOID;expenseTypeCategoryOID;costCenterOID;costCenterItemOID;expenseReportOID;originalAmount;preCreatedDate;companyOID</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows.expenseReportInvoices[0].invoiceOID;$.rows.expenseReportInvoices[0].invoiceView.expenseTypeId;$.rows.expenseReportInvoices[0].invoiceView.expenseTypeOID;$.rows.expenseReportInvoices[0].invoiceView.expenseTypeCategorySimpleDTO.expenseTypeCategoryOID;$.rows.expenseReportInvoices[0].invoiceView.expenseApportion[0].costCenterItems[0].costCenterOID;$.rows.expenseReportInvoices[0].invoiceView.expenseApportion[0].costCenterItems[0].costCenterItemOID;$.rows.custFormValues[0].bizOID;$.rows.expenseReportInvoices[0].invoiceView.originalAmount;$.rows.expenseReportInvoices[0].invoiceView.createdDate;$.rows.companyOID</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;expenseReportInvoices&quot;);
String detal = vars.get(&quot;draft&quot;);


JSONArray expenseReportInvoices = JSON.parseArray(json);
JSONObject draft = JSON.parseObject(detal);
draft.put(&quot;expenseReportInvoices&quot;,expenseReportInvoices);
String str =draft.toString();
vars.put(&quot;draft&quot;,str);


</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单费用详情" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/invoices/${invoiceOID}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获得apportionmentOID" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">apportionmentOID</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseApportion[0].apportionmentOID</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单提交-弹出禁止提示" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${draft}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="拿到提交响应" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">checkResultList</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.checkResultList[0].externalPropertyName</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">null</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2030752013">${forbidTip}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="报销单重新创建费用(${expenseTypeName})警告费用" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="修改费用" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;invoiceOID&quot;: &quot;${invoiceOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;${expenseTypeName}&quot;,&#xd;
	&quot;crossCheckStatus&quot;: 0,&#xd;
	&quot;expenseTypeKey&quot;: null,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;${bxExpenseTypeIconName}&quot;,&#xd;
	&quot;phoneNumber&quot;: null,&#xd;
	&quot;email&quot;: null,&#xd;
	&quot;expenseTypeIconURL&quot;: &quot;${iconURL}&quot;,&#xd;
	&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
	&quot;expenseTypeCategorySimpleDTO&quot;: {&#xd;
		&quot;expenseTypeCategoryOID&quot;: &quot;${expenseTypeCategoryOID}&quot;,&#xd;
		&quot;name&quot;: &quot;交通费用大类&quot;,&#xd;
		&quot;code&quot;: null&#xd;
	},&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: ${amount1},&#xd;
	&quot;originalAmount&quot;: ${originalAmount},&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;${currency}&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;${currency}&quot;,&#xd;
	&quot;userOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;routeDetail&quot;: null,&#xd;
	&quot;mobile&quot;: null,&#xd;
	&quot;employeeId&quot;: &quot;${employeeId}&quot;,&#xd;
	&quot;data&quot;: [],&#xd;
	&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
	&quot;comment&quot;: &quot;&quot;,&#xd;
	&quot;warning&quot;: &quot;&quot;,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;createdDate&quot;: &quot;${today}T11:05:09Z&quot;,&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: null,&#xd;
	&quot;createTime&quot;: &quot;${today}T11:07:33Z&quot;,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;approvalOperates&quot;: null,&#xd;
	&quot;referenceId&quot;: null,&#xd;
	&quot;unitPrice&quot;: null,&#xd;
	&quot;number&quot;: null,&#xd;
	&quot;receiptFailType&quot;: null,&#xd;
	&quot;receiptFailReason&quot;: null,&#xd;
	&quot;valid&quot;: false,&#xd;
	&quot;receiptID&quot;: null,&#xd;
	&quot;cardSignType&quot;: null,&#xd;
	&quot;checkPlatform&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;nonVatBaseAmount&quot;: ${originalAmount},&#xd;
	&quot;baseCurrencyTax&quot;: 0,&#xd;
	&quot;originalApprovedNonVat&quot;: ${originalAmount},&#xd;
	&quot;originalApprovedVat&quot;: 0,&#xd;
	&quot;baseApprovedNonVat&quot;: ${originalAmount},&#xd;
	&quot;baseApprovedVat&quot;: 0,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;attachmentOID&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;expenseAmount&quot;: ${originalAmount},&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;receiptGoodsID&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;invoiceLabelDTOS&quot;: [],&#xd;
	&quot;invoiceLabels&quot;: [],&#xd;
	&quot;companyOID&quot;: null,&#xd;
	&quot;companyID&quot;: ${companyId},&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: null,&#xd;
	&quot;paymentType&quot;: 1001,&#xd;
	&quot;source&quot;: null,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;checked&quot;: null,&#xd;
	&quot;createInvoice&quot;: true,&#xd;
	&quot;checkWarning&quot;: null,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;digitalInvoiceId&quot;: null,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;originalActualCurrencyRate&quot;: 1,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;actualCurrencyAmount&quot;: ${originalAmount},&#xd;
	&quot;baseAmount&quot;: ${originalAmount},&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;flightNo&quot;: null,&#xd;
	&quot;apportionUsed&quot;: true,&#xd;
	&quot;expenseApportion&quot;: [{&#xd;
		&quot;apportionmentOID&quot;: &quot;${apportionmentOID}&quot;,&#xd;
		&quot;expenseOID&quot;: &quot;${invoiceOID}&quot;,&#xd;
		&quot;amount&quot;: ${amount1},&#xd;
		&quot;baseCurrencyAmount&quot;: ${originalAmount},&#xd;
		&quot;relevantPerson&quot;: &quot;${userOID1}&quot;,&#xd;
		&quot;personName&quot;: &quot;${employeeName1}&quot;,&#xd;
		&quot;personEmployeeID&quot;: null,&#xd;
		&quot;defaultApportion&quot;: true,&#xd;
		&quot;isEditable&quot;: true,&#xd;
		&quot;isCostCenterItemEditable&quot;: null,&#xd;
		&quot;proportion&quot;: 1,&#xd;
		&quot;costCenterItems&quot;: [{&#xd;
			&quot;fieldName&quot;: &quot;部門&quot;,&#xd;
			&quot;costCenterOID&quot;: &quot;00000000-0000-0000-0000-000000000000&quot;,&#xd;
			&quot;costCenterItemOID&quot;: &quot;${departmentOID}&quot;,&#xd;
			&quot;costCenterItemName&quot;: &quot;${departmentName}&quot;,&#xd;
			&quot;required&quot;: null,&#xd;
			&quot;itemCode&quot;: &quot;&quot;,&#xd;
			&quot;departmentOid&quot;: &quot;${departmentOID}&quot;,&#xd;
			&quot;name&quot;: &quot;${departmentName}&quot;&#xd;
		}],&#xd;
		&quot;applicationApportionmentId&quot;: null,&#xd;
		&quot;index&quot;: 0&#xd;
	}],&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;amountChanged&quot;: null,&#xd;
	&quot;approvalStatus&quot;: null,&#xd;
	&quot;bankTransactionID&quot;: null,&#xd;
	&quot;expenseCreatedType&quot;: null,&#xd;
	&quot;overDue&quot;: null,&#xd;
	&quot;bankTransactionDetail&quot;: null,&#xd;
	&quot;baseCurrency&quot;: &quot;${currency}&quot;,&#xd;
	&quot;subsidyRepeatedFlag&quot;: false,&#xd;
	&quot;orderAmount&quot;: 2,&#xd;
	&quot;orderCurrency&quot;: &quot;${currency}&quot;,&#xd;
	&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
	&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
	&quot;receiptedStatus&quot;: 0,&#xd;
	&quot;tenantId&quot;: ${tenantId},&#xd;
	&quot;autoAudit&quot;: false,&#xd;
	&quot;applicationNumber&quot;: null,&#xd;
	&quot;receiptList&quot;: [],&#xd;
	&quot;stringCol3&quot;: null,&#xd;
	&quot;create&quot;: false,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;stringCol1&quot;: null,&#xd;
	&quot;stringCol2&quot;: null,&#xd;
	&quot;status&quot;: 1000,&#xd;
	&quot;index&quot;: 1,&#xd;
	&quot;preCreatedDate&quot;: &quot;${preCreatedDate}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/invoice/api/v5/invoices</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="退回账本-删除费用" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="费用退回账本" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/expense/reports/remove/invoice/${bxExpenseReportOID}/${NewinvoiceOID}</stringProp>
                <stringProp name="HTTPSampler.method">DELETE</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49586">200</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账本删除费用" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/invoice/batch?invoiceOIDs=${NewinvoiceOID}</stringProp>
                <stringProp name="HTTPSampler.method">DELETE</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49586">200</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取表单的费用列表" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/custom/forms/${bxFormOID}/selected/expense/types?setOfBooksId=${setOfBooksId}&amp;userOID=${userOID}&amp;createManually=true</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取${expenseTypeName}expenseTypeName" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">Daba_expenseTypeName</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;${expenseTypeName}&quot;)].expenseTypeName</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取${expenseTypeName}Daba_FormOID" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">Daba_filedID</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;${expenseTypeName}&quot;)].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取${expenseTypeName}Daba_expenseTypeOID" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">Daba_expenseTypeOID</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;${expenseTypeName}&quot;)].expenseTypeOID</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取表单的费用控件" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/expense/types/select/${Daba_filedID}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">OtherPeopleFields</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.fields</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单费用创建" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;${Daba_expenseTypeName}&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${Daba_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${Daba_filedID}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;coach&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.coach&quot;,&#xd;
	&quot;receiptList&quot;: [],&#xd;
	&quot;amount&quot;: ${amount1},&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;createdDate&quot;: &quot;${NewUTCstartDate}&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;comment&quot;: &quot;&quot;,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: null,&#xd;
	&quot;data&quot;:${OtherPeopleFields},&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseReportOID&quot;: &quot;${bxExpenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;paymentType&quot;: &quot;1001&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/invoice/api/v5/invoices</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取invoiceOID" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">NewinvoiceOID</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows.invoiceOID</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">NotFound</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看报销单详情" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${bxExpenseReportOID}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String response_data=prev.getResponseDataAsString();
vars.put(&quot;submitResponse_data&quot;,response_data);
log.info(&quot;response_data========&quot;+response_data);
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取bxCustFormValues;bxExpenseReportInvoices;bxInvoiceGroups;bxExpenseTypes" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">bxCustFormValues;bxExpenseReportInvoices;bxInvoiceGroups;bxExpenseTypes;applicantOID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.custFormValues;$.expenseReportInvoices;$.invoiceGroups;$.expenseTypes;$.applicantOID</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found;Not found;Not found</stringProp>
              <stringProp name="TestPlan.comments">expenseReportInvoices</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取修改参数" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">invoiceOID;expenseTypeId;expenseTypeOID;expenseTypeCategoryOID;userOID;applicantName;apportionmentOID;costCenterOID;costCenterItemOID;expenseReportOID;originalAmount;preCreatedDate</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[0].invoiceOID;$.expenseReportInvoices[0].invoiceView.expenseTypeId;$.expenseReportInvoices[0].invoiceView.expenseTypeOID;$.expenseReportInvoices[0].invoiceView.expenseTypeCategorySimpleDTO.expenseTypeCategoryOID;$.applicantOID;$.applicantName;$.expenseReportInvoices[0].invoiceView.expenseApportion[0].apportionmentOID;$.expenseReportInvoices[0].invoiceView.expenseApportion[0].costCenterItems[0].costCenterOID;$.expenseReportInvoices[0].invoiceView.expenseApportion[0].costCenterItems[0].costCenterItemOID;$.custFormValues[0].bizOID;$.expenseReportInvoices[0].invoiceView.originalAmount;$.expenseReportInvoices[0].invoiceView.createdDate</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">data</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交-警告" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1260657473">${warnTip}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看报销单详情" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${bxExpenseReportOID}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取bxCustFormValues;bxExpenseReportInvoices;bxInvoiceGroups;bxExpenseTypes" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">bxCustFormValues;bxExpenseReportInvoices;bxInvoiceGroups;bxExpenseTypes;applicantOID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.custFormValues;$.expenseReportInvoices;$.invoiceGroups;$.expenseTypes;$.applicantOID</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found;Not found;Not found</stringProp>
              <stringProp name="TestPlan.comments">expenseReportInvoices</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取修改参数" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">invoiceOID;expenseTypeId;expenseTypeOID;expenseTypeCategoryOID;userOID;applicantName;apportionmentOID;costCenterOID;costCenterItemOID;expenseReportOID;originalAmount;preCreatedDate</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[0].invoiceOID;$.expenseReportInvoices[0].invoiceView.expenseTypeId;$.expenseReportInvoices[0].invoiceView.expenseTypeOID;$.expenseReportInvoices[0].invoiceView.expenseTypeCategorySimpleDTO.expenseTypeCategoryOID;$.applicantOID;$.applicantName;$.expenseReportInvoices[0].invoiceView.expenseApportion[0].apportionmentOID;$.expenseReportInvoices[0].invoiceView.expenseApportion[0].costCenterItems[0].costCenterOID;$.expenseReportInvoices[0].invoiceView.expenseApportion[0].costCenterItems[0].costCenterItemOID;$.custFormValues[0].bizOID;$.expenseReportInvoices[0].invoiceView.originalAmount;$.expenseReportInvoices[0].invoiceView.createdDate</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">data</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">
String data=vars.get(&quot;data&quot;);
log.info(&quot;response_data========&quot;+data);
String data=data.replace(&quot;\&quot;ignoreBudgetWarningFlag\&quot;:false&quot;,	&quot;\&quot;ignoreBudgetWarningFlag\&quot;:true&quot;);
vars.put(&quot;submitAgin_data&quot;,data);</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交-成功" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${submitAgin_data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="699540342">${bxSuccessful}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="报销单警告提交" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单详情" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${bxExpenseReportOID}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="需要报销单提交需要的参数" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">draft;businessCode</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows;$.rows.businessCode</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">NULL;NULL</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取后续需要的参数" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">bxCustFormValues;bxExpenseReportInvoices;bxInvoiceGroups;bxExpenseTypes;applicantOID;userOID;applicantName</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows.custFormValues;$.rows.expenseReportInvoices;$.rows.invoiceGroups;$.rows.expenseTypes;$.rows.applicantOID;$.rows.applicantOID;$.rows.applicantName</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found;Not found;Not found;Not found;Not found</stringProp>
                <stringProp name="TestPlan.comments">expenseReportInvoices</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单费用详情" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${bxExpenseReportOID}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">expenseReportInvoices</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows.expenseReportInvoices</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">NULL</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;expenseReportInvoices&quot;);
String detal = vars.get(&quot;draft&quot;);


JSONArray expenseReportInvoices = JSON.parseArray(json);
JSONObject draft = JSON.parseObject(detal);
draft.put(&quot;expenseReportInvoices&quot;,expenseReportInvoices);
String str =draft.toString();
vars.put(&quot;draft&quot;,str);


</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取修改参数" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invoiceOID;expenseTypeId;expenseTypeOID;expenseTypeCategoryOID;apportionmentOID;costCenterOID;costCenterItemOID;expenseReportOID;originalAmount;preCreatedDate;companyOID</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows.expenseReportInvoices[0].invoiceOID;$.rows.expenseReportInvoices[0].invoiceView.expenseTypeId;$.rows.expenseReportInvoices[0].invoiceView.expenseTypeOID;$.rows.expenseReportInvoices[0].invoiceView.expenseTypeCategorySimpleDTO.expenseTypeCategoryOID;$.rows.expenseReportInvoices[0].invoiceView.expenseApportion[0].apportionmentOID;$.rows.expenseReportInvoices[0].invoiceView.expenseApportion[0].costCenterItems[0].costCenterOID;$.rows.expenseReportInvoices[0].invoiceView.expenseApportion[0].costCenterItems[0].costCenterItemOID;$.rows.custFormValues[0].bizOID;$.rows.expenseReportInvoices[0].invoiceView.originalAmount;$.rows.expenseReportInvoices[0].invoiceView.createdDate;$.rows.companyOID</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单提交" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${draft}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="拿到提交响应" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">checkResultList</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.checkResultList[0].externalPropertyName</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">null</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1260657473">${warnTip}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="报销单提交" enabled="true">
              <stringProp name="IfController.condition">&quot;${checkResultList}&quot;  !=&quot;null&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单提交" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${AllDetalNew2}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49586">200</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">8</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="加强制提交" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;draft&quot;);

json = json.replaceAll(&quot;ignoreBudgetWarningFlag\&quot;:false&quot;,&quot;ignoreBudgetWarningFlag\&quot;:true&quot;);
vars.put(&quot;AllDetalNew2&quot;,json);

</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="699540342">${bxSuccessful}</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="撤回" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;entities&quot;: [{&#xd;
		&quot;entityOID&quot;: &quot;${bxExpenseReportOID}&quot;,&#xd;
		&quot;entityType&quot;: 1002&#xd;
	}]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/approvals/withdraw</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="报销单重新创建费用(${expenseTypeName})(员工2禁止，管理员警告)" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="退回账本-删除费用" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="费用退回账本" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/expense/reports/remove/invoice/${bxExpenseReportOID}/${NewinvoiceOID}</stringProp>
                <stringProp name="HTTPSampler.method">DELETE</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49586">200</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账本删除费用" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/invoice/batch?invoiceOIDs=${NewinvoiceOID}</stringProp>
                <stringProp name="HTTPSampler.method">DELETE</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49586">200</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取表单的费用列表" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/custom/forms/${bxFormOID}/selected/expense/types?setOfBooksId=${setOfBooksId}&amp;userOID=${userOID}&amp;createManually=true</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取${expenseTypeName}expenseTypeName" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">Daba_expenseTypeName</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;${expenseTypeName}&quot;)].expenseTypeName</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取${expenseTypeName}Daba_FormOID" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">Daba_filedID</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;${expenseTypeName}&quot;)].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取${expenseTypeName}Daba_expenseTypeOID" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">Daba_expenseTypeOID</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;${expenseTypeName}&quot;)].expenseTypeOID</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取表单的费用控件" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/expense/types/select/${Daba_filedID}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">OtherPeopleFields</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.fields</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单费用创建" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;${expenseTypeName}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;drink&quot;,&#xd;
	&quot;expenseTypeKey&quot;: null,&#xd;
	&quot;receiptList&quot;: [],&#xd;
	&quot;amount&quot;: ${amounts1},&#xd;
	&quot;createdDate&quot;: &quot;${NewUTCstartDate}&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;comment&quot;: &quot;&quot;,&#xd;
	&quot;invoiceInsteadReason&quot;: null,&#xd;
	&quot;data&quot;: [],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseApportion&quot;: [{&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;apportionmentOID&quot;: null,&#xd;
		&quot;expenseOID&quot;: null,&#xd;
		&quot;amount&quot;: ${amount1},&#xd;
		&quot;baseCurrencyAmount&quot;: null,&#xd;
		&quot;relevantPerson&quot;: &quot;${userOID1}&quot;,&#xd;
		&quot;personName&quot;: &quot;${employeeName1}&quot;,&#xd;
		&quot;personEmployeeID&quot;: null,&#xd;
		&quot;defaultApportion&quot;: true,&#xd;
		&quot;isEditable&quot;: true,&#xd;
		&quot;isCostCenterItemEditable&quot;: null,&#xd;
		&quot;proportion&quot;: ${p1},&#xd;
		&quot;costCenterItems&quot;: [{&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;costCenterOID&quot;: &quot;00000000-0000-0000-0000-000000000000&quot;,&#xd;
			&quot;costCenterItemOID&quot;: &quot;${departmentOID}&quot;,&#xd;
			&quot;costCenterItemName&quot;: &quot;${departmentName}&quot;,&#xd;
			&quot;required&quot;: false,&#xd;
			&quot;itemCode&quot;: &quot;1001&quot;,&#xd;
			&quot;type&quot;: null,&#xd;
			&quot;costCenterName&quot;: null,&#xd;
			&quot;apportionItem&quot;: true,&#xd;
			&quot;departmentOid&quot;: &quot;${departmentOID}&quot;,&#xd;
			&quot;name&quot;: &quot;${departmentName}&quot;&#xd;
		}],&#xd;
		&quot;applicationApportionmentId&quot;: null,&#xd;
		&quot;apportionmentLabels&quot;: [],&#xd;
		&quot;applicationApportionmentUsedAmount&quot;: null&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;apportionmentOID&quot;: null,&#xd;
		&quot;expenseOID&quot;: null,&#xd;
		&quot;amount&quot;:  ${baseAmount2},&#xd;
		&quot;baseCurrencyAmount&quot;: null,&#xd;
		&quot;relevantPerson&quot;: &quot;${userOID2}&quot;,&#xd;
		&quot;personName&quot;: &quot;${employeeName2}&quot;,&#xd;
		&quot;personEmployeeID&quot;: null,&#xd;
		&quot;defaultApportion&quot;: false,&#xd;
		&quot;isEditable&quot;: true,&#xd;
		&quot;isCostCenterItemEditable&quot;: null,&#xd;
		&quot;proportion&quot;: ${p2},&#xd;
		&quot;costCenterItems&quot;: [{&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;costCenterOID&quot;: &quot;00000000-0000-0000-0000-000000000000&quot;,&#xd;
			&quot;costCenterItemOID&quot;: &quot;${departmentOID}&quot;,&#xd;
			&quot;costCenterItemName&quot;: &quot;${departmentName}&quot;,&#xd;
			&quot;required&quot;: false,&#xd;
			&quot;itemCode&quot;: &quot;1001&quot;,&#xd;
			&quot;type&quot;: null,&#xd;
			&quot;costCenterName&quot;: null,&#xd;
			&quot;apportionItem&quot;: true,&#xd;
			&quot;departmentOid&quot;: &quot;${departmentOID}&quot;,&#xd;
			&quot;name&quot;: &quot;${departmentName}&quot;&#xd;
		}],&#xd;
		&quot;applicationApportionmentId&quot;: null,&#xd;
		&quot;apportionmentLabels&quot;: [],&#xd;
		&quot;applicationApportionmentUsedAmount&quot;: null&#xd;
	}],&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/invoice/api/v5/invoices</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取invoiceOID" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">NewinvoiceOID</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows.invoiceOID</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">NotFound</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看报销单详情" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${bxExpenseReportOID}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String response_data=prev.getResponseDataAsString();
vars.put(&quot;submitResponse_data&quot;,response_data);
log.info(&quot;response_data========&quot;+response_data);
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取bxCustFormValues;bxExpenseReportInvoices;bxInvoiceGroups;bxExpenseTypes" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">bxCustFormValues;bxExpenseReportInvoices;bxInvoiceGroups;bxExpenseTypes;applicantOID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.custFormValues;$.expenseReportInvoices;$.invoiceGroups;$.expenseTypes;$.applicantOID</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found;Not found;Not found</stringProp>
              <stringProp name="TestPlan.comments">expenseReportInvoices</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取修改参数" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">invoiceOID;expenseTypeId;expenseTypeOID;expenseTypeCategoryOID;userOID;applicantName;apportionmentOID;costCenterOID;costCenterItemOID;expenseReportOID;originalAmount;preCreatedDate</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[0].invoiceOID;$.expenseReportInvoices[0].invoiceView.expenseTypeId;$.expenseReportInvoices[0].invoiceView.expenseTypeOID;$.expenseReportInvoices[0].invoiceView.expenseTypeCategorySimpleDTO.expenseTypeCategoryOID;$.applicantOID;$.applicantName;$.expenseReportInvoices[0].invoiceView.expenseApportion[0].apportionmentOID;$.expenseReportInvoices[0].invoiceView.expenseApportion[0].costCenterItems[0].costCenterOID;$.expenseReportInvoices[0].invoiceView.expenseApportion[0].costCenterItems[0].costCenterItemOID;$.custFormValues[0].bizOID;$.expenseReportInvoices[0].invoiceView.originalAmount;$.expenseReportInvoices[0].invoiceView.createdDate</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获得报下单详情" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">data</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交-禁止" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2030752013">${forbidTip}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="002员工预算_日常报销单_未管控员工" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1551168261000</longProp>
        <longProp name="ThreadGroup.end_time">1551168261000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="-508582744">companyName</stringProp>
            <stringProp name="-1728524711">employeeName</stringProp>
            <stringProp name="-2044658440">employeeName1</stringProp>
            <stringProp name="-2044658439">employeeName2</stringProp>
            <stringProp name="-2044658438">employeeName3</stringProp>
            <stringProp name="-1829107106">organizationName</stringProp>
            <stringProp name="-222811490">structureName</stringProp>
            <stringProp name="688906115">versionName</stringProp>
            <stringProp name="-1008330181">scenarioName</stringProp>
            <stringProp name="-2055127748">journalTypeName</stringProp>
            <stringProp name="1177331774">itemName</stringProp>
            <stringProp name="1171462780">setOfBooksName</stringProp>
            <stringProp name="-1915237698">apFormName</stringProp>
            <stringProp name="608482277">bxFormName</stringProp>
            <stringProp name="-262326019">departmentName</stringProp>
            <stringProp name="-944069283">expenseTypeName</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-1393355100">
              <stringProp name="510173521">${company002}</stringProp>
              <stringProp name="-1461641776">${employee2}</stringProp>
              <stringProp name="-1461641745">${employee3}</stringProp>
              <stringProp name="-1461641714">${employee4}</stringProp>
              <stringProp name="-1461641683">${employee5}</stringProp>
              <stringProp name="1815567901">${YSORG003}</stringProp>
              <stringProp name="601025036">${YSstructure003}</stringProp>
              <stringProp name="1917159635">${YSVN003}</stringProp>
              <stringProp name="651336795">${YSSCR003}</stringProp>
              <stringProp name="-191183559">${YSJNType003}</stringProp>
              <stringProp name="-1660902616">${YSProduct003}</stringProp>
              <stringProp name="-1277953366">${books}</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="-986661391">${expenseForm001}</stringProp>
              <stringProp name="-717350959">${department005}</stringProp>
              <stringProp name="-2136664729">${expenseType001}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="租户登录" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="1242003">预算</stringProp>
            <stringProp name="1603705114">员工预算登录</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="查询基础数据" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询登录账号" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/account?roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="tenantId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">tenantId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.tenantId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询账套" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/setOfBooks/query/dto?setOfBooksCode=&amp;setOfBooksName=&amp;page=0&amp;size=10&amp;roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="booksId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">setOfBooksId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.setOfBooksName==&quot;${setOfBooksName}&quot;)].setOfBooksId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询公司" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/company/by/term?page=0&amp;size=10&amp;roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="companyId;companyCode;companyOID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">companyId;companyCode;companyOID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;${companyName}&quot;)].id;$..[?(@.name==&quot;${companyName}&quot;)].companyCode;$..[?(@.name==&quot;${companyName}&quot;)].companyOID</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询部门" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/department/tenant/all?roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="departmentId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">departmentId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;${departmentName}&quot;)].id;</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="departmentOid" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">departmentOID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;${departmentName}&quot;)].departmentOID</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询员工" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/users/v3/search?sort=status&amp;page=0&amp;size=10&amp;keyword=&amp;status=all&amp;roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="employeeId;userOID;employeeID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">employeeId;userOID;employeeID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fullName==&quot;${employeeName}&quot;)].id;$..[?(@.fullName==&quot;${employeeName}&quot;)].userOID;$..[?(@.fullName==&quot;${employeeName}&quot;)].employeeID;</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="employeeId1;userOID1" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">employeeId1;userOID1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fullName==&quot;${employeeName1}&quot;)].id;$..[?(@.fullName==&quot;${employeeName1}&quot;)].userOID;</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="employeeId2;userOID2" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">employeeId2;userOID2</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fullName==&quot;${employeeName2}&quot;)].id;$..[?(@.fullName==&quot;${employeeName2}&quot;)].userOID;</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="employeeId2;userOID2" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">employeeId3;userOID3</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fullName==&quot;${employeeName3}&quot;)].id;$..[?(@.fullName==&quot;${employeeName3}&quot;)].userOID;</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询费用类型" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/invoice/api/expense/types/groupby/category?setOfBooksId=${setOfBooksId}&amp;createdManually=&amp;enabled=&amp;roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="bxExpenseId;bxExpenseTypeOID;bxExpenseTypeIconName;iconURL;bxExpenseTypeKey" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">bxExpenseId;bxExpenseTypeOID;bxExpenseTypeIconName;iconURL;bxExpenseTypeKey</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;${expenseTypeName}&quot;)].id;$..[?(@.name==&quot;${expenseTypeName}&quot;)].expenseTypeOID;$..[?(@.name==&quot;${expenseTypeName}&quot;)].iconName;$..[?(@.name==&quot;${expenseTypeName}&quot;)].iconURL;$..[?(@.name==&quot;${expenseTypeName}&quot;)].messageKey;</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found;Not found;Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="查询预算配置参数" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询预算组织" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/organizations/query?page=0&amp;pageSize=10&amp;roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="organizationId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">organizationId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.organizationName==&quot;${organizationName}&quot;)].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询预算场景" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/scenarios/query?page=0&amp;size=10&amp;organizationId=${organizationId}&amp;roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="scenarioId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">scenarioId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.scenarioName==&quot;${scenarioName}&quot;)].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询预算版本" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/versions/query?organizationId=${organizationId}&amp;page=0&amp;size=10&amp;roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="versionId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">versionId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.versionName==&quot;${versionName}&quot;)].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询预算表" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/structures/query?organizationId=${organizationId}&amp;page=0&amp;size=10&amp;roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="structureId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">structureId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.structureName==&quot;${structureName}&quot;)].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询项目类型" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/itemType/query?organizationId=${organizationId}&amp;page=0&amp;size=10&amp;roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询项目" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/items/query?organizationId=${organizationId}&amp;page=0&amp;size=10&amp;roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="itemId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">itemId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.itemName==&quot;${itemName}&quot;)].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询项目组" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/groups/query?page=0&amp;pageSize=10&amp;organizationId=${organizationId}&amp;roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询控制策略" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/control/strategies/query?page=0&amp;size=10&amp;organizationId=${organizationId}&amp;roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询控制规则" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/control/rules/query?organizationId=${organizationId}&amp;page=0&amp;size=10&amp;roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询项目映射" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/mapping/match/group?orgId=${organizationId}&amp;groupCode=&amp;groupName=&amp;page=0&amp;size=10&amp;roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询日记账类型" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/journal/types/query?&amp;page=0&amp;size=10&amp;organizationId=${organizationId}&amp;roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="journalTypeId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">journalTypeId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.journalTypeName==&quot;${journalTypeName}&quot;)].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询预算半年度" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/custom/enumerations/template/by/type?type=2031</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="periodSemiannual" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">periodSemiannual</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.messageKey==&quot;${Semiannual}&quot;)].value</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Notfound</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="查询预算余额_工预算管理员预算" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交查询参数" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;versionId&quot;: &quot;${versionId}&quot;,&#xd;
	&quot;structureId&quot;: &quot;${structureId}&quot;,&#xd;
	&quot;scenarioId&quot;: &quot;${scenarioId}&quot;,&#xd;
	&quot;yearLimit&quot;: &quot;${periodYear}&quot;,&#xd;
	&quot;periodLowerLimit&quot;: &quot;${periodName}&quot;,&#xd;
	&quot;periodUpperLimit&quot;: &quot;${periodName}&quot;,&#xd;
	&quot;quarterLowerLimit&quot;: null,&#xd;
	&quot;quarterUpperLimit&quot;: null,&#xd;
	&quot;periodSummaryFlag&quot;: false,&#xd;
	&quot;amountQuarterFlag&quot;: &quot;AMOUNT&quot;,&#xd;
	&quot;queryLineList&quot;: [{&#xd;
		&quot;isAll&quot;: false,&#xd;
		&quot;parameterType&quot;: &quot;BGT_RULE_PARAMETER_ORG&quot;,&#xd;
		&quot;parameterCode&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;queryParameterList&quot;: [{&#xd;
		&quot;parameterValueId&quot;: ${employeeId1},&#xd;
			&quot;parameterValueCode&quot;: ${employeeId1},&#xd;
			&quot;parameterValueName&quot;: &quot;${employeeName1}&quot;&#xd;
		}]&#xd;
	}],&#xd;
	&quot;organizationId&quot;: &quot;${organizationId}&quot;,&#xd;
	&quot;companyId&quot;: ${companyId}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/balance/query/header/user</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">queryID</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;(.*)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Not found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询预算余额" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/balance/query/results/${queryID}?page=0&amp;size=10</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="totalNumber;bgtAmount;expReserveAmount;expUsedAmount;expAvailableAmount" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">totalNumber;bgtAmount;expReserveAmount;expUsedAmount;expAvailableAmount</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.queryResultCurrencyList[0].totalNumber;$.queryResultCurrencyList[0].bgtAmount;$.queryResultCurrencyList[0].expReserveAmount;$.queryResultCurrencyList[0].expUsedAmount;$.queryResultCurrencyList[0].expAvailableAmount</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found;Not found;Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">//总预算
Double bgtAmount = Double.parseDouble(&quot;${bgtAmount}&quot;);
//总保留
Double expReserveAmount = Double.parseDouble(&quot;${expReserveAmount}&quot;);
//总发生
Double expUsedAmount = Double.parseDouble(&quot;${expUsedAmount}&quot;);
//总可用
Double expAvailableAmount = Double.parseDouble(&quot;${expAvailableAmount}&quot;);
log.info(&quot;**初始查询预算--预算额结果：**&quot;+bgtAmount);
log.info(&quot;**初始查询预算--保留额结果：**&quot;+expReserveAmount);
log.info(&quot;**初始查询预算--发生额结果：**&quot;+expUsedAmount);
log.info(&quot;**初始查询预算--可用额结果：**&quot;+expAvailableAmount);

//申请单的金额
String  flag=&quot;N&quot;;//定义表示，是否更新
int temp=(int)(bgtAmount*0.8-expUsedAmount-expReserveAmount);
log.info(&quot;**************temp:&quot;+temp);
int allAmountI=0;
if(temp&gt;10){
	allAmountI=temp;
}else{
	allAmountI=(int)((20+expUsedAmount+expReserveAmount)/0.8-bgtAmount);	
	if (allAmountI==0)
		allAmountI=1;
	flag=&quot;Y&quot;;
}
log.info(&quot;**************allAmountI:&quot;+allAmountI);
String allAmount=allAmountI+&quot;&quot;;
log.info(&quot;**************allAmount:&quot;+allAmount);
vars.put(&quot;allAmount&quot;,allAmount);
vars.put(&quot;flag&quot;,flag);
log.info(&quot;需要更新否:******&quot;+flag);
vars.put(&quot;flag&quot;,flag);






</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果可以提100不需要再次更新" enabled="true">
          <stringProp name="IfController.condition">&quot;${flag}&quot; !=&quot;N&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="新建预算日记账_工预算管理员预算" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交预算参数" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;dto&quot;: {&#xd;
		&quot;companyId&quot;: ${companyId},&#xd;
		&quot;companyName&quot;: &quot;${companyName}&quot;,&#xd;
		&quot;organizationId&quot;: &quot;${organizationId}&quot;,&#xd;
		&quot;organizationName&quot;: &quot;${organizationName}&quot;,&#xd;
		&quot;structureId&quot;: &quot;${structureId}&quot;,&#xd;
		&quot;structureName&quot;: &quot;${structureName}&quot;,&#xd;
		&quot;description&quot;: &quot;&quot;,&#xd;
		&quot;reversedFlag&quot;: &quot;N&quot;,&#xd;
		&quot;employeeId&quot;: &quot;${employeeId1}&quot;,&#xd;
		&quot;employeeName&quot;: &quot;${employeeName1}&quot;,&#xd;
		&quot;unitName&quot;: &quot;periodNumber&quot;,&#xd;
		&quot;versionId&quot;: &quot;${versionId}&quot;,&#xd;
		&quot;versionName&quot;: &quot;${versionName}&quot;,&#xd;
		&quot;scenarioId&quot;: &quot;${scenarioId}&quot;,&#xd;
		&quot;scenarioName&quot;: &quot;${scenarioName}&quot;,&#xd;
		&quot;status&quot;: &quot;NEW&quot;,&#xd;
		&quot;journalTypeId&quot;: &quot;${journalTypeId}&quot;,&#xd;
		&quot;journalTypeName&quot;: &quot;${journalTypeName}&quot;,&#xd;
		&quot;periodStrategy&quot;: &quot;MONTH&quot;,&#xd;
		&quot;versionNumber&quot;: &quot;1&quot;,&#xd;
		&quot;attachmentOID&quot;: [],&#xd;
		&quot;formOid&quot;: null,&#xd;
		&quot;documentType&quot;: null&#xd;
	},&#xd;
	&quot;list&quot;: []&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/budget-service/api/budget/journals</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="journalHeaderId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">journalHeaderId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$..id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">Not found</stringProp>
                <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="更新预算日记账行" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;companyName&quot;: &quot;${companyName}&quot;,&#xd;
	&quot;companyId&quot;: ${companyId},&#xd;
	&quot;departmentName&quot;: &quot;&quot;,&#xd;
	&quot;unitId&quot;: &quot;&quot;,&#xd;
	&quot;employeeName&quot;: &quot;${employeeName1}&quot;,&#xd;
	&quot;employeeId&quot;: &quot;${employeeId1}&quot;,&#xd;
	&quot;itemName&quot;: &quot;${itemName}&quot;,&#xd;
	&quot;itemId&quot;: &quot;${itemId}&quot;,&#xd;
	&quot;periodName&quot;: &quot;${periodName}&quot;,&#xd;
	&quot;periodYear&quot;: ${periodYear},&#xd;
	&quot;periodQuarter&quot;: ${periodQuarter},&#xd;
	&quot;periodQuarterName&quot;: ${periodQuarterName},&#xd;
	&quot;periodSemiannual&quot;:&quot;${periodSemiannual}&quot;,&#xd;
&quot;periodSemiannualName&quot;:&quot;${periodSemiannual}&quot;,&#xd;
	&quot;currency&quot;: &quot;CNY&quot;,&#xd;
	&quot;rate&quot;: 1,&#xd;
	&quot;amount&quot;: ${allAmount},&#xd;
	&quot;functionalAmount&quot;: &quot;${allAmount}&quot;,&#xd;
	&quot;quantity&quot;: 1,&#xd;
	&quot;versionNumber&quot;: 1,&#xd;
	&quot;isNew&quot;: true,&#xd;
	&quot;journalHeaderId&quot;: &quot;${journalHeaderId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/budget-service/api/budget/journals/insertOrUpdateLine</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交审批" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/budget-service/api/budget/journals/submitJournal/${journalHeaderId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="审核通过" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[&quot;${journalHeaderId}&quot;]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/budget-service/api/budget/journals/balance/create</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="查询预算余额_工预算管理员预算" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交查询参数" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;versionId&quot;: &quot;${versionId}&quot;,&#xd;
	&quot;structureId&quot;: &quot;${structureId}&quot;,&#xd;
	&quot;scenarioId&quot;: &quot;${scenarioId}&quot;,&#xd;
	&quot;yearLimit&quot;: &quot;${periodYear}&quot;,&#xd;
	&quot;periodLowerLimit&quot;: &quot;${periodName}&quot;,&#xd;
	&quot;periodUpperLimit&quot;: &quot;${periodName}&quot;,&#xd;
	&quot;quarterLowerLimit&quot;: null,&#xd;
	&quot;quarterUpperLimit&quot;: null,&#xd;
	&quot;periodSummaryFlag&quot;: false,&#xd;
	&quot;amountQuarterFlag&quot;: &quot;AMOUNT&quot;,&#xd;
	&quot;queryLineList&quot;: [{&#xd;
		&quot;isAll&quot;: false,&#xd;
		&quot;parameterType&quot;: &quot;BGT_RULE_PARAMETER_ORG&quot;,&#xd;
		&quot;parameterCode&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;queryParameterList&quot;: [{&#xd;
		&quot;parameterValueId&quot;: ${employeeId1},&#xd;
			&quot;parameterValueCode&quot;: ${employeeId1},&#xd;
			&quot;parameterValueName&quot;: &quot;${employeeName1}&quot;&#xd;
		}]&#xd;
	}],&#xd;
	&quot;organizationId&quot;: &quot;${organizationId}&quot;,&#xd;
	&quot;companyId&quot;: ${companyId}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/balance/query/header/user</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">queryID</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;(.*)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Not found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询预算余额" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/balance/query/results/${queryID}?page=0&amp;size=10</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">totalNumber1;bgtAmount1;expReserveAmount1;expUsedAmount1;expAvailableAmount1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.queryResultCurrencyList[0].totalNumber;$.queryResultCurrencyList[0].bgtAmount;$.queryResultCurrencyList[0].expReserveAmount;$.queryResultCurrencyList[0].expUsedAmount;$.queryResultCurrencyList[0].expAvailableAmount</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found;Not found;Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="查询处理员工的预算" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">//总预算
Double bgtAmountD = Double.parseDouble(&quot;${bgtAmount1}&quot;);
log.info(&quot;********Before*******总预算额********&quot;+bgtAmountD);
//总保留
Double expReserveAmountD = Double.parseDouble(&quot;${expReserveAmount1}&quot;);
log.info(&quot;********Before*******总保留额********&quot;+expReserveAmountD);
//总发生
Double expUsedAmountD = Double.parseDouble(&quot;${expUsedAmount1}&quot;);
log.info(&quot;********Before*******总发生额********&quot;+expUsedAmountD);
//总可用
Double expAvailableAmountD = Double.parseDouble(&quot;${expAvailableAmount1}&quot;);
log.info(&quot;********Before*******总可用额********&quot;+expAvailableAmountD);


//警告金额
int amountI=(int)(bgtAmountD*0.8+1-expUsedAmountD-expReserveAmountD);
String amount1=amountI+&quot;&quot;;
log.info(&quot;********Before********用户1警告金额********&quot;+amount1);
vars.put(&quot;amount1&quot;,amount1);
//禁止金额
int baseAmountI=(int)(bgtAmountD+1-expUsedAmountD-expReserveAmountD);
String baseAmount1=baseAmountI+&quot;&quot;;
log.info(&quot;********Before********用户1禁止金额********&quot;+baseAmount1);
vars.put(&quot;baseAmount1&quot;,baseAmount1);

</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="查询预算余额_员工2预算" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交查询参数" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;versionId&quot;: &quot;${versionId}&quot;,&#xd;
	&quot;structureId&quot;: &quot;${structureId}&quot;,&#xd;
	&quot;scenarioId&quot;: &quot;${scenarioId}&quot;,&#xd;
	&quot;yearLimit&quot;: &quot;${periodYear}&quot;,&#xd;
	&quot;periodLowerLimit&quot;: &quot;${periodName}&quot;,&#xd;
	&quot;periodUpperLimit&quot;: &quot;${periodName}&quot;,&#xd;
	&quot;quarterLowerLimit&quot;: null,&#xd;
	&quot;quarterUpperLimit&quot;: null,&#xd;
	&quot;periodSummaryFlag&quot;: false,&#xd;
	&quot;amountQuarterFlag&quot;: &quot;AMOUNT&quot;,&#xd;
	&quot;queryLineList&quot;: [{&#xd;
		&quot;isAll&quot;: false,&#xd;
		&quot;parameterType&quot;: &quot;BGT_RULE_PARAMETER_ORG&quot;,&#xd;
		&quot;parameterCode&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;queryParameterList&quot;: [{&#xd;
		&quot;parameterValueId&quot;: ${employeeId2},&#xd;
			&quot;parameterValueCode&quot;: ${employeeId2},&#xd;
			&quot;parameterValueName&quot;: &quot;${employeeName2}&quot;&#xd;
		}]&#xd;
	}],&#xd;
	&quot;organizationId&quot;: &quot;${organizationId}&quot;,&#xd;
	&quot;companyId&quot;: ${companyId}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/balance/query/header/user</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">queryID</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;(.*)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Not found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询预算余额" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/balance/query/results/${queryID}?page=0&amp;size=10</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="totalNumber;bgtAmount;expReserveAmount;expUsedAmount;expAvailableAmount" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">totalNumber;bgtAmount;expReserveAmount;expUsedAmount;expAvailableAmount</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.queryResultCurrencyList[0].totalNumber;$.queryResultCurrencyList[0].bgtAmount;$.queryResultCurrencyList[0].expReserveAmount;$.queryResultCurrencyList[0].expUsedAmount;$.queryResultCurrencyList[0].expAvailableAmount</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found;Not found;Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">//总预算
Double bgtAmount = Double.parseDouble(&quot;${bgtAmount}&quot;);
//总保留
Double expReserveAmount = Double.parseDouble(&quot;${expReserveAmount}&quot;);
//总发生
Double expUsedAmount = Double.parseDouble(&quot;${expUsedAmount}&quot;);
//总可用
Double expAvailableAmount = Double.parseDouble(&quot;${expAvailableAmount}&quot;);
//log.info(&quot;**初始查询预算结果：**&quot;+bgtAmount+&quot;***&quot;+expReserveAmount+&quot;***&quot;+expUsedAmount+&quot;***&quot;+expAvailableAmount);

log.info(&quot;**初始查询预算--预算额结果：**&quot;+bgtAmount);
log.info(&quot;**初始查询预算--保留额结果：**&quot;+expReserveAmount);
log.info(&quot;**初始查询预算--发生额结果：**&quot;+expUsedAmount);
log.info(&quot;**初始查询预算--可用额结果：**&quot;+expAvailableAmount);


//申请单的金额
String  flag=&quot;N&quot;;//定义表示，是否更新
int temp=(int)(bgtAmount*0.8-expUsedAmount-expReserveAmount);
log.info(&quot;**************temp &quot;+temp);
int allAmountI=0;
if(temp&gt;10){
	allAmountI=temp;
}else{
	allAmountI=(int)((20+expUsedAmount+expReserveAmount)/0.8-bgtAmount);	
		if (allAmountI==0)
		allAmountI=1;
	flag=&quot;Y&quot;;
}
String allAmount=allAmountI+&quot;&quot;;
log.info(&quot;**************allAmount &quot;+allAmount);
vars.put(&quot;allAmount&quot;,allAmount);






</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果可以提100不需要再次更新" enabled="false">
          <stringProp name="IfController.condition">&quot;${flag}&quot; !=&quot;N&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="新建预算日记账_员工2预算" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交预算参数" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;dto&quot;: {&#xd;
		&quot;companyId&quot;: ${companyId},&#xd;
		&quot;companyName&quot;: &quot;${companyName}&quot;,&#xd;
		&quot;organizationId&quot;: &quot;${organizationId}&quot;,&#xd;
		&quot;organizationName&quot;: &quot;${organizationName}&quot;,&#xd;
		&quot;structureId&quot;: &quot;${structureId}&quot;,&#xd;
		&quot;structureName&quot;: &quot;${structureName}&quot;,&#xd;
		&quot;description&quot;: &quot;&quot;,&#xd;
		&quot;reversedFlag&quot;: &quot;N&quot;,&#xd;
		&quot;employeeId&quot;: &quot;${employeeId2}&quot;,&#xd;
		&quot;employeeName&quot;: &quot;${employeeName2}&quot;,&#xd;
		&quot;unitName&quot;: &quot;periodNumber&quot;,&#xd;
		&quot;versionId&quot;: &quot;${versionId}&quot;,&#xd;
		&quot;versionName&quot;: &quot;${versionName}&quot;,&#xd;
		&quot;scenarioId&quot;: &quot;${scenarioId}&quot;,&#xd;
		&quot;scenarioName&quot;: &quot;${scenarioName}&quot;,&#xd;
		&quot;status&quot;: &quot;NEW&quot;,&#xd;
		&quot;journalTypeId&quot;: &quot;${journalTypeId}&quot;,&#xd;
		&quot;journalTypeName&quot;: &quot;${journalTypeName}&quot;,&#xd;
		&quot;periodStrategy&quot;: &quot;MONTH&quot;,&#xd;
		&quot;versionNumber&quot;: &quot;1&quot;,&#xd;
		&quot;attachmentOID&quot;: [],&#xd;
		&quot;formOid&quot;: null,&#xd;
		&quot;documentType&quot;: null&#xd;
	},&#xd;
	&quot;list&quot;: []&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/budget-service/api/budget/journals</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="journalHeaderId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">journalHeaderId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$..id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">Not found</stringProp>
                <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="更新预算日记账行" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;companyName&quot;: &quot;${companyName}&quot;,&#xd;
	&quot;companyId&quot;: ${companyId},&#xd;
	&quot;departmentName&quot;: &quot;&quot;,&#xd;
	&quot;unitId&quot;: &quot;&quot;,&#xd;
	&quot;employeeName&quot;: &quot;${employeeName2}&quot;,&#xd;
	&quot;employeeId&quot;: &quot;${employeeId2}&quot;,&#xd;
	&quot;itemName&quot;: &quot;${itemName}&quot;,&#xd;
	&quot;itemId&quot;: &quot;${itemId}&quot;,&#xd;
	&quot;periodName&quot;: &quot;${periodName}&quot;,&#xd;
	&quot;periodYear&quot;: ${periodYear},&#xd;
	&quot;periodQuarter&quot;: ${periodQuarter},&#xd;
	&quot;periodQuarterName&quot;: ${periodQuarterName},&#xd;
	&quot;periodSemiannual&quot;:&quot;${periodSemiannual}&quot;,&#xd;
&quot;periodSemiannualName&quot;:&quot;${periodSemiannual}&quot;,&#xd;
	&quot;currency&quot;: &quot;CNY&quot;,&#xd;
	&quot;rate&quot;: 1,&#xd;
	&quot;amount&quot;: ${allAmount},&#xd;
	&quot;functionalAmount&quot;: &quot;${allAmount}&quot;,&#xd;
	&quot;quantity&quot;: 1,&#xd;
	&quot;versionNumber&quot;: 1,&#xd;
	&quot;isNew&quot;: true,&#xd;
	&quot;journalHeaderId&quot;: &quot;${journalHeaderId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/budget-service/api/budget/journals/insertOrUpdateLine</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交审批" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/budget-service/api/budget/journals/submitJournal/${journalHeaderId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="审核通过" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[&quot;${journalHeaderId}&quot;]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/budget-service/api/budget/journals/balance/create</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="查询预算余额_员工2预算" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交查询参数" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;versionId&quot;: &quot;${versionId}&quot;,&#xd;
	&quot;structureId&quot;: &quot;${structureId}&quot;,&#xd;
	&quot;scenarioId&quot;: &quot;${scenarioId}&quot;,&#xd;
	&quot;yearLimit&quot;: &quot;${periodYear}&quot;,&#xd;
	&quot;periodLowerLimit&quot;: &quot;${periodName}&quot;,&#xd;
	&quot;periodUpperLimit&quot;: &quot;${periodName}&quot;,&#xd;
	&quot;quarterLowerLimit&quot;: null,&#xd;
	&quot;quarterUpperLimit&quot;: null,&#xd;
	&quot;periodSummaryFlag&quot;: false,&#xd;
	&quot;amountQuarterFlag&quot;: &quot;AMOUNT&quot;,&#xd;
	&quot;queryLineList&quot;: [{&#xd;
		&quot;isAll&quot;: false,&#xd;
		&quot;parameterType&quot;: &quot;BGT_RULE_PARAMETER_ORG&quot;,&#xd;
		&quot;parameterCode&quot;: &quot;EMPLOYEE&quot;,&#xd;
		&quot;queryParameterList&quot;: [{&#xd;
		&quot;parameterValueId&quot;: ${employeeId2},&#xd;
			&quot;parameterValueCode&quot;: ${employeeId2},&#xd;
			&quot;parameterValueName&quot;: &quot;${employeeName2}&quot;&#xd;
		}]&#xd;
	}],&#xd;
	&quot;organizationId&quot;: &quot;${organizationId}&quot;,&#xd;
	&quot;companyId&quot;: ${companyId}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/balance/query/header/user</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">queryID</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;(.*)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Not found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询预算余额" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/budget-service/api/budget/balance/query/results/${queryID}?page=0&amp;size=10</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">totalNumber2;bgtAmount2;expReserveAmount2;expUsedAmount2;expAvailableAmount2</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.queryResultCurrencyList[0].totalNumber;$.queryResultCurrencyList[0].bgtAmount;$.queryResultCurrencyList[0].expReserveAmount;$.queryResultCurrencyList[0].expUsedAmount;$.queryResultCurrencyList[0].expAvailableAmount</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found;Not found;Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.text.DecimalFormat;
DecimalFormat df = new DecimalFormat(&quot;#.00&quot;);
//总预算
Double bgtAmountD = Double.parseDouble(&quot;${bgtAmount2}&quot;);
log.info(&quot;********Before*******总预算额********&quot;+bgtAmountD);
//总保留
Double expReserveAmountD = Double.parseDouble(&quot;${expReserveAmount2}&quot;);
log.info(&quot;********Before*******总保留额********&quot;+expReserveAmountD);
//总发生
Double expUsedAmountD = Double.parseDouble(&quot;${expUsedAmount2}&quot;);
log.info(&quot;********Before*******总发生额********&quot;+expUsedAmountD);
//总可用
Double expAvailableAmountD = Double.parseDouble(&quot;${expAvailableAmount2}&quot;);
log.info(&quot;********Before*******总可用额********&quot;+expAvailableAmountD);



//警告金额
int amount2I=(int)(bgtAmountD*0.8-expUsedAmountD-expReserveAmountD);
String amount2=amount2I+&quot;&quot;;
log.info(&quot;警告金额：&quot;+amount2);
vars.put(&quot;amount2&quot;,amount2);
//禁止金额
int baseAmount2I=(int)(bgtAmountD+1-expUsedAmountD-expReserveAmountD);
String baseAmount2=baseAmount2I+&quot;&quot;;
log.info(&quot;禁止金额：&quot;+baseAmount2);
vars.put(&quot;baseAmount2&quot;,baseAmount2);


//用户1警告/禁止金额
Double amount1I=Double.parseDouble(&quot;${amount1}&quot;);
Double baseAmount1I=Double.parseDouble(&quot;${baseAmount1}&quot;);
//分摊比例
int  amountsI1=(int)(amount1I+baseAmount2I); //用户1警告费用+用户2禁止费用
String amounts1=amountsI1+&quot;&quot;;
log.info(&quot;********amounts1********&quot;+amounts1);
vars.put(&quot;amounts1&quot;,amounts1);
double p1t=amount1I/(amount1I+baseAmount2I);
log.info(&quot;用户1的分摊比率:&quot;+p1t+&quot;&quot;);
log.info(&quot;amount1I:&quot;+String.valueOf(amount1I));
log.info(&quot;baseAmount2I:&quot;+String.valueOf(baseAmount2I));
String p1=&quot;0&quot;+df.format(p1t);
log.info(&quot;********p1********&quot;+p1);
vars.put(&quot;p1&quot;,p1);
double p2t=baseAmount2I/(amount1I+baseAmount2I);
//String p2=p2t+&quot;&quot;;
String p2=&quot;0&quot;+df.format(p2t);
log.info(&quot;********p2********&quot;+p2);
vars.put(&quot;p2&quot;,p2);





int  amountsI2=(int)(baseAmount1I+amount2I);
String amounts2=amountsI2+&quot;&quot;;
log.info(&quot;********amounts2********&quot;+amounts2);
vars.put(&quot;amounts2&quot;,amounts2);
double p3t=baseAmount1I/(baseAmount1I+amount2I);
//String p3=p3t+&quot;&quot;;
String p3=&quot;0&quot;+df.format(p3t);
log.info(&quot;********p3********&quot;+p3);
vars.put(&quot;p3&quot;,p3);
double p4t=amount2I/(baseAmount1I+amount2I);
//String p4=p4t+&quot;&quot;;
String p4=&quot;0&quot;+df.format(p4t);
log.info(&quot;********p4********&quot;+p4);
vars.put(&quot;p4&quot;,p4);
int  amountsI3=(int)(amount1I+amount2I);
String amounts3=amountsI3+&quot;&quot;;
log.info(&quot;********amounts3********&quot;+amounts3);
vars.put(&quot;amounts3&quot;,amounts3);
double p5t=amount1I/(amount1I+amount2I);
//String p5=p5t+&quot;&quot;;
String p5=&quot;0&quot;+df.format(p5t);
log.info(&quot;********p5********&quot;+p5);
vars.put(&quot;p5&quot;,p5);
Double p6t=amount2I/(amount1I+amount2I);
//String p6=p6t+&quot;&quot;;
String p6=&quot;0&quot;+df.format(p6t);
log.info(&quot;********p6********&quot;+p6);
vars.put(&quot;p6&quot;,p6);</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.text.DecimalFormat;
import java.math.BigDecimal;
DecimalFormat df = new DecimalFormat(&quot;#.00&quot;);
//总预算
Double bgtAmountD = Double.parseDouble(&quot;${bgtAmount2}&quot;);
log.info(&quot;********Before*******总预算额********&quot;+bgtAmountD);
//总保留
Double expReserveAmountD = Double.parseDouble(&quot;${expReserveAmount2}&quot;);
log.info(&quot;********Before*******总保留额********&quot;+expReserveAmountD);
//总发生
Double expUsedAmountD = Double.parseDouble(&quot;${expUsedAmount2}&quot;);
log.info(&quot;********Before*******总发生额********&quot;+expUsedAmountD);
//总可用
Double expAvailableAmountD = Double.parseDouble(&quot;${expAvailableAmount2}&quot;);
log.info(&quot;********Before*******总可用额********&quot;+expAvailableAmountD);



//警告金额
int amount2I=(int)(bgtAmountD*0.8-expUsedAmountD-expReserveAmountD);
String amount2=amount2I+&quot;&quot;;
log.info(&quot;用户2警告金额：&quot;+amount2);
vars.put(&quot;amount2&quot;,amount2);
//禁止金额
int baseAmount2I=(int)(bgtAmountD+1-expUsedAmountD-expReserveAmountD);
String baseAmount2=baseAmount2I+&quot;&quot;;
log.info(&quot;用户2禁止金额：&quot;+baseAmount2);
vars.put(&quot;baseAmount2&quot;,baseAmount2);


//用户1警告/禁止金额
Double amount1I=Double.parseDouble(&quot;${amount1}&quot;);
Double baseAmount1I=Double.parseDouble(&quot;${baseAmount1}&quot;);
//分摊比例
int  amountsI1=(int)(amount1I+baseAmount2I); //用户1警告费用+用户2禁止费用
String amounts1=amountsI1+&quot;&quot;;
log.info(&quot;********amounts1********&quot;+amounts1);
vars.put(&quot;amounts1&quot;,amounts1);
double p1t=amount1I/(amount1I+baseAmount2I);
BigDecimal b = new BigDecimal(p1t*100);
double f1 = b.setScale(2, BigDecimal.ROUND_HALF_UP).doubleValue()/100;


log.info(&quot;amount1I:&quot;+String.valueOf(amount1I));
log.info(&quot;baseAmount2I:&quot;+String.valueOf(baseAmount2I));
vars.put(&quot;p1&quot;,f1+&quot;&quot;);



double p2t=baseAmount2I/(amount1I+baseAmount2I);
BigDecimal b2 = new BigDecimal(p2t*100);
double f2 = b2.setScale(2, BigDecimal.ROUND_HALF_UP).doubleValue()/100;
log.info(&quot;用户1的分摊比率p1:&quot;+f1+&quot;&quot;);
log.info(&quot;用户2的分摊比率p2:&quot;+f2+&quot;&quot;);
vars.put(&quot;p2&quot;,f2+&quot;&quot;);





int  amountsI2=(int)(baseAmount1I+amount2I);
String amounts2=amountsI2+&quot;&quot;;
log.info(&quot;********amounts2********&quot;+amounts2);
vars.put(&quot;amounts2&quot;,amounts2);
double p3t=baseAmount1I/(baseAmount1I+amount2I);
//String p3=p3t+&quot;&quot;;
String p3=&quot;0&quot;+df.format(p3t);
log.info(&quot;********p3********&quot;+p3);
vars.put(&quot;p3&quot;,p3);
double p4t=amount2I/(baseAmount1I+amount2I);
//String p4=p4t+&quot;&quot;;
String p4=&quot;0&quot;+df.format(p4t);
log.info(&quot;********p4********&quot;+p4);
vars.put(&quot;p4&quot;,p4);
int  amountsI3=(int)(amount1I+amount2I);
String amounts3=amountsI3+&quot;&quot;;
log.info(&quot;********amounts3********&quot;+amounts3);
vars.put(&quot;amounts3&quot;,amounts3);
double p5t=amount1I/(amount1I+amount2I);
//String p5=p5t+&quot;&quot;;
String p5=&quot;0&quot;+df.format(p5t);
log.info(&quot;********p5********&quot;+p5);
vars.put(&quot;p5&quot;,p5);
Double p6t=amount2I/(amount1I+amount2I);
//String p6=p6t+&quot;&quot;;
String p6=&quot;0&quot;+df.format(p6t);
log.info(&quot;********p6********&quot;+p6);
vars.put(&quot;p6&quot;,p6);</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="查询报销表单数据" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询报销单表单" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/custom/forms/my/available?formType=102</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="formOID;formId,formName;formType" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">bxFormOID;bxFormId;bxFormType</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.formName==&quot;${bxFormName}&quot;)].formOID;$..[?(@.formName==&quot;${bxFormName}&quot;)].formId;$..[?(@.formName==&quot;${bxFormName}&quot;)].formType</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询表单详情" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/custom/forms/${bxFormOID}?roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="bxSelect_box" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">bxSelect_box</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;fieldContent&quot;:&quot;(.+?),{</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Not found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="bxCustomFormProperties;bxCustomFormPropertyMap;bxCustomFormFields" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">bxCustomFormProperties;bxCustomFormPropertyMap;bxCustomFormFields</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.customFormProperties;$.customFormPropertyMap;$.customFormFields</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="bxFieldName" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">bxFieldName</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;fieldName&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Not found</stringProp>
              <stringProp name="RegexExtractor.match_number">-1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor-2" enabled="false">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">import java.util.ArrayList;
import org.json.*; 
String fieldName_matchNr = vars.get(&quot;bxFieldName_matchNr&quot;);

int len=Integer.parseInt(fieldName_matchNr);
String response_data=prev.getResponseDataAsString();
JSONObject data_obj= new JSONObject(response_data); 
ArrayList list =new ArrayList(30);
list.add(&quot;${departmentOID}&quot;);                     //部门的value
list.add(&quot;${bxFormName}&quot;);                          //事由 默认值：“表单名称”
list.add(&quot;&quot;);		           	//收款单位/个人
list.add(&quot;&quot;);                             //源泉税


StringBuilder sb = new StringBuilder();
for(int i=0;i&lt;len;i++){
	String  ids= data_obj.get(&quot;customFormFields&quot;).get(i).get(&quot;id&quot;).toString();
	String  fieldOIDs= data_obj.get(&quot;customFormFields&quot;).get(i).get(&quot;fieldOID&quot;).toString();
	String  messageKeys= data_obj.get(&quot;customFormFields&quot;).get(i).get(&quot;messageKey&quot;).toString();
	String  fieldNames= data_obj.get(&quot;customFormFields&quot;).get(i).get(&quot;fieldName&quot;).toString();
	String  fieldTypes= data_obj.get(&quot;customFormFields&quot;).get(i).get(&quot;fieldType&quot;).toString();
	String  reportShows= data_obj.get(&quot;customFormFields&quot;).get(i).get(&quot;reportShow&quot;).toString();
	String  isPDFShows= data_obj.get(&quot;customFormFields&quot;).get(i).get(&quot;isPDFShow&quot;).toString();
	String  requireds= data_obj.get(&quot;customFormFields&quot;).get(i).get(&quot;required&quot;).toString();
	String  readonlys= data_obj.get(&quot;customFormFields&quot;).get(i).get(&quot;readonly&quot;).toString();
	String  dataSources= data_obj.get(&quot;customFormFields&quot;).get(i).get(&quot;dataSource&quot;).toString().replace(&quot;\&quot;&quot;,&quot;\\\\\&quot;&quot;);
	String  fieldConstraints= data_obj.get(&quot;customFormFields&quot;).get(i).get(&quot;fieldConstraint&quot;).toString().replace(&quot;\&quot;&quot;,&quot;\\\\\&quot;&quot;);
	String  fieldContents= data_obj.get(&quot;customFormFields&quot;).get(i).get(&quot;fieldContent&quot;).toString().replace(&quot;\&quot;&quot;,&quot;\\\\\&quot;&quot;).replace(&quot;\n&quot;,&quot;\\\\n&quot;);
	String valueKey=list.get(i).toString();
     String sd1=&quot;{\&quot;id\&quot;:\&quot;&quot;+ids+&quot;\&quot;,\&quot;fieldOID\&quot;:\&quot;&quot;+fieldOIDs+&quot;\&quot;,\&quot;sequence\&quot;:&quot;+i+&quot;,\&quot;messageKey\&quot;:\&quot;&quot;+messageKeys+&quot;\&quot;,\&quot;formId\&quot;:null,\&quot;fieldName\&quot;:\&quot;&quot;+fieldNames+&quot;\&quot;,\&quot;fieldType\&quot;: \&quot;&quot;+fieldTypes+&quot;\&quot;,\&quot;dataSource\&quot;:\&quot;&quot;+dataSources+&quot;\&quot;,\&quot;valid\&quot;: true,\&quot;required\&quot;: &quot;+requireds+&quot;,\&quot;createdDate\&quot;: null,\&quot;lastModifiedDate\&quot;: null,\&quot;promptInfo\&quot;: \&quot;\&quot;,\&quot;fieldConstraint\&quot;: \&quot;&quot;+fieldConstraints+&quot;\&quot;,\&quot;readonly\&quot;: &quot;+readonlys+&quot;,\&quot;isReadOnly\&quot;: false,\&quot;guiWidgetId\&quot;: null,\&quot;value\&quot;:\&quot;&quot;+valueKey+&quot;\&quot;,\&quot;fieldContent\&quot;:\&quot;&quot;+fieldContents+&quot;\&quot;,\&quot;fieldCode\&quot;: null,\&quot;isPDFShow\&quot;: &quot;+isPDFShows+&quot;,\&quot;reportShow\&quot;: &quot;+reportShows+&quot;,\&quot;reportOrmKey\&quot;: null,\&quot;formOID\&quot;: \&quot;${bxFormOID}\&quot;,\&quot;i18n\&quot;: null},&quot;;
      String sd2=&quot;{\&quot;id\&quot;:\&quot;&quot;+ids+&quot;\&quot;,\&quot;fieldOID\&quot;:\&quot;&quot;+fieldOIDs+&quot;\&quot;,\&quot;sequence\&quot;:&quot;+i+&quot;,\&quot;messageKey\&quot;:\&quot;&quot;+messageKeys+&quot;\&quot;,\&quot;formId\&quot;:null,\&quot;fieldName\&quot;:\&quot;&quot;+fieldNames+&quot;\&quot;,\&quot;fieldType\&quot;: \&quot;&quot;+fieldTypes+&quot;\&quot;,\&quot;dataSource\&quot;:\&quot;&quot;+dataSources+&quot;\&quot;,\&quot;valid\&quot;: true,\&quot;required\&quot;: &quot;+requireds+&quot;,\&quot;createdDate\&quot;: null,\&quot;lastModifiedDate\&quot;: null,\&quot;promptInfo\&quot;: \&quot;\&quot;,\&quot;fieldConstraint\&quot;: \&quot;&quot;+fieldConstraints+&quot;\&quot;,\&quot;readonly\&quot;: &quot;+readonlys+&quot;,\&quot;isReadOnly\&quot;: false,\&quot;guiWidgetId\&quot;: null,\&quot;value\&quot;:\&quot;&quot;+valueKey+&quot;\&quot;,\&quot;fieldContent\&quot;:\&quot;&quot;+fieldContents+&quot;\&quot;,\&quot;fieldCode\&quot;: null,\&quot;isPDFShow\&quot;: &quot;+isPDFShows+&quot;,\&quot;reportShow\&quot;: &quot;+reportShows+&quot;,\&quot;reportOrmKey\&quot;: null,\&quot;formOID\&quot;: \&quot;${bxFormOID}\&quot;,\&quot;i18n\&quot;: null}&quot;;
	if(i == len-1){
		sb.append(sd2);
	}else{
		sb.append(sd1);
	}		
}
String bxCustomform=sb.toString().replaceAll(&quot;\&quot;null\&quot;&quot;,&quot;null&quot;);
String bxCustomform=&quot;[&quot;+bxCustomform+&quot;]&quot;;
log.info(&quot;bxCustomform==&quot;+bxCustomform);
vars.put(&quot;bxCustomform&quot;,bxCustomform);</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取报销单信息" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">customFormFields;referenceOID;tenantId;setOfBooksId;customFormProperties;customFormPropertyMap</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.customFormFields;$.referenceOID;$.tenantId;$.setOfBooksId;$.customFormProperties;$.customFormPropertyMap</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">null;null;null;null;null;null</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="日常报销单" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建日常管理报销单" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;${bxFormOID}&quot;,&#xd;
	&quot;id&quot;: &quot;${bxFormId}&quot;,&#xd;
	&quot;formName&quot;: &quot;${bxFormName}&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;iconUrl&quot;: null,&#xd;
	&quot;messageKey&quot;: null,&#xd;
	&quot;formType&quot;: ${bxFormType},&#xd;
	&quot;asSystem&quot;: false,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;${NewUTCstartDate}&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;${NewUTCstartDate}&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: ${bxCustomFormFields},&#xd;
	&quot;remark&quot;: null,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1001,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: null,&#xd;
	&quot;companyOID&quot;: &quot;${companyOID}&quot;,&#xd;
	&quot;companyId&quot;: ${companyId},&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: ${bxCustomFormProperties},&#xd;
	&quot;customFormPropertyMap&quot;: ${bxCustomFormPropertyMap},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: null,&#xd;
	&quot;tenantId&quot;: &quot;${tenantId}&quot;,&#xd;
	&quot;booksID&quot;: null,&#xd;
	&quot;setOfBooksId&quot;: &quot;${setOfBooksId}&quot;,&#xd;
	&quot;fromType&quot;: 1,&#xd;
	&quot;visibleCompanyScope&quot;: 1,&#xd;
	&quot;companyOIDList&quot;: null,&#xd;
	&quot;companyList&quot;: null,&#xd;
	&quot;companyName&quot;: null,&#xd;
	&quot;budgetEnalbed&quot;: false,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;currencySame&quot;: false,&#xd;
	&quot;custFormValues&quot;: ${bxCustomform}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/draft</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取bxBusinessCode" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">bxBusinessCode</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.businessCode</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取expenseReportOID" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">bxExpenseReportOID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].bizOID</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取bxReasonFormValueOID;bxDeptFormValueOID;bxReasonBizOID;" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">bxReasonFormValueOID;bxDeptFormValueOID;</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].formValueOID;$..[?(@.fieldName==&quot;部门&quot;)].formValueOID;</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-673250867">businessCode</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;customFormFields&quot;);
log.info(&quot;customFormFields:&quot;+json);


JSONArray customFormFields = JSON.parseArray(json);
int size = customFormFields.size();


for (int i = 0; i &lt; size; i++){
		   jj = customFormFields.getJSONObject(i);
             if (jj.get(&quot;fieldName&quot;).equals(&quot;事由&quot;))
           		jj.put(&quot;value&quot;,&quot;日常报销单测试&quot;);
             if (jj.get(&quot;fieldName&quot;).equals(&quot;部门&quot;))
           		jj.put(&quot;value&quot;,vars.get(&quot;departmentOID&quot;));
             if (jj.get(&quot;fieldName&quot;).equals(&quot;审批人&quot;))
           		jj.put(&quot;value&quot;,vars.get(&quot;userOID&quot;));
            if (jj.get(&quot;fieldName&quot;).equals(&quot;预算明细&quot;))
             {
			String vv=vars.get(&quot;feiyong&quot;);
			log.info(&quot;feiyong===&quot;+vv);
             	jj.put(&quot;value&quot;,vv);
             }

}

String str =customFormFields.toString();
log.info(&quot;NcustomFormFields:&quot;+str);
vars.put(&quot;bxCustomform&quot;,str);

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看报销单状态-编辑中" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="businessCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${bxBusinessCode}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">businessCode</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/expense/reports/search/my?roleType=TENANT</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-749828020">&quot;status&quot;:1001</stringProp>
                <stringProp name="2030560658">&quot;rejectType&quot;:1000</stringProp>
                <stringProp name="-312141990">&quot;businessCode&quot;:&quot;${bxBusinessCode}&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="报销单重新创建费用(${expenseTypeName})禁止费用" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取表单的费用列表" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/custom/forms/${bxFormOID}/selected/expense/types?setOfBooksId=${setOfBooksId}&amp;userOID=${userOID}&amp;createManually=true</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取${expenseTypeName}expenseTypeName" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">Daba_expenseTypeName</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;${expenseTypeName}&quot;)].expenseTypeName</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取${expenseTypeName}Daba_FormOID" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">Daba_filedID</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;${expenseTypeName}&quot;)].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取${expenseTypeName}Daba_expenseTypeOID" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">Daba_expenseTypeOID</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;${expenseTypeName}&quot;)].expenseTypeOID</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取表单的费用控件" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/expense/types/select/${Daba_filedID}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">OtherPeopleFields</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.fields</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单费用创建" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;${Daba_expenseTypeName}&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${Daba_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${Daba_filedID}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;drink&quot;,&#xd;
	&quot;expenseTypeKey&quot;: null,&#xd;
	&quot;receiptList&quot;: [],&#xd;
	&quot;amount&quot;: ${baseAmount1},&#xd;
	&quot;createdDate&quot;: &quot;${NewUTCstartDate}&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;comment&quot;: &quot;&quot;,&#xd;
	&quot;invoiceInsteadReason&quot;: null,&#xd;
	&quot;data&quot;: [],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseApportion&quot;: [{&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;apportionmentOID&quot;: null,&#xd;
		&quot;expenseOID&quot;: null,&#xd;
		&quot;amount&quot;: ${baseAmount1},&#xd;
		&quot;baseCurrencyAmount&quot;: null,&#xd;
		&quot;relevantPerson&quot;: &quot;${userOID3}&quot;,&#xd;
		&quot;personName&quot;: &quot;${employeeName3}&quot;,&#xd;
		&quot;personEmployeeID&quot;: null,&#xd;
		&quot;defaultApportion&quot;: true,&#xd;
		&quot;isEditable&quot;: true,&#xd;
		&quot;isCostCenterItemEditable&quot;: null,&#xd;
		&quot;proportion&quot;:1,&#xd;
		&quot;costCenterItems&quot;: [{&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;costCenterOID&quot;: &quot;00000000-0000-0000-0000-000000000000&quot;,&#xd;
			&quot;costCenterItemOID&quot;: &quot;${departmentOID}&quot;,&#xd;
			&quot;costCenterItemName&quot;: &quot;${departmentName}&quot;,&#xd;
			&quot;required&quot;: false,&#xd;
			&quot;itemCode&quot;: &quot;1001&quot;,&#xd;
			&quot;type&quot;: null,&#xd;
			&quot;costCenterName&quot;: null,&#xd;
			&quot;apportionItem&quot;: true,&#xd;
			&quot;departmentOid&quot;: &quot;${departmentOID}&quot;,&#xd;
			&quot;name&quot;: &quot;${departmentName}&quot;&#xd;
		}],&#xd;
		&quot;applicationApportionmentId&quot;: null,&#xd;
		&quot;apportionmentLabels&quot;: [],&#xd;
		&quot;applicationApportionmentUsedAmount&quot;: null&#xd;
	}],&#xd;
	&quot;expenseReportOID&quot;: &quot;${bxExpenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/invoice/api/v5/invoices</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取invoiceOID" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">NewinvoiceOID</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows.invoiceOID</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">NotFound</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看报销单详情" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${bxExpenseReportOID}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String response_data=prev.getResponseDataAsString();
vars.put(&quot;submitResponse_data&quot;,response_data);
log.info(&quot;response_data========&quot;+response_data);</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取bxCustFormValues;bxExpenseReportInvoices;bxInvoiceGroups;bxExpenseTypes" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">bxCustFormValues;bxExpenseReportInvoices;bxInvoiceGroups;bxExpenseTypes;applicantOID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.custFormValues;$.expenseReportInvoices;$.invoiceGroups;$.expenseTypes;$.applicantOID</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found;Not found;Not found</stringProp>
              <stringProp name="TestPlan.comments">expenseReportInvoices</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取修改参数" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">invoiceOID;expenseTypeId;expenseTypeOID;expenseTypeCategoryOID;userOID;applicantName;apportionmentOID;costCenterOID;costCenterItemOID;expenseReportOID;originalAmount;preCreatedDate;companyOID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[0].invoiceOID;$.expenseReportInvoices[0].invoiceView.expenseTypeId;$.expenseReportInvoices[0].invoiceView.expenseTypeOID;$.expenseReportInvoices[0].invoiceView.expenseTypeCategorySimpleDTO.expenseTypeCategoryOID;$.applicantOID;$.applicantName;$.expenseReportInvoices[0].invoiceView.expenseApportion[0].apportionmentOID;$.expenseReportInvoices[0].invoiceView.expenseApportion[0].costCenterItems[0].costCenterOID;$.expenseReportInvoices[0].invoiceView.expenseApportion[0].costCenterItems[0].costCenterItemOID;$.custFormValues[0].bizOID;$.expenseReportInvoices[0].invoiceView.originalAmount;$.expenseReportInvoices[0].invoiceView.createdDate;$.companyOID</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">apportionmentOID1;apportionmentOID2</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.invoiceGroups[0].invoices[0].invoiceView.expenseApportion[0].apportionmentOID;$.invoiceGroups[0].invoices[0].invoiceView.expenseApportion[1].apportionmentOID</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">data</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交-禁止" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="报销单成功提交" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单详情" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${bxExpenseReportOID}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="需要报销单提交需要的参数" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">draft;businessCode</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows;$.rows.businessCode</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">NULL;NULL</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取后续需要的参数" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">bxCustFormValues;bxExpenseReportInvoices;bxInvoiceGroups;bxExpenseTypes;applicantOID;userOID;applicantName</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows.custFormValues;$.rows.expenseReportInvoices;$.rows.invoiceGroups;$.rows.expenseTypes;$.rows.applicantOID;$.rows.applicantOID;$.rows.applicantName</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found;Not found;Not found;Not found;Not found</stringProp>
                <stringProp name="TestPlan.comments">expenseReportInvoices</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单费用列表" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${bxExpenseReportOID}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">expenseReportInvoices</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows.expenseReportInvoices</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">NULL</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取修改参数" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invoiceOID;expenseTypeId;expenseTypeOID;expenseTypeCategoryOID;costCenterOID;costCenterItemOID;expenseReportOID;originalAmount;preCreatedDate;companyOID</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows.expenseReportInvoices[0].invoiceOID;$.rows.expenseReportInvoices[0].invoiceView.expenseTypeId;$.rows.expenseReportInvoices[0].invoiceView.expenseTypeOID;$.rows.expenseReportInvoices[0].invoiceView.expenseTypeCategorySimpleDTO.expenseTypeCategoryOID;$.rows.expenseReportInvoices[0].invoiceView.expenseApportion[0].costCenterItems[0].costCenterOID;$.rows.expenseReportInvoices[0].invoiceView.expenseApportion[0].costCenterItems[0].costCenterItemOID;$.rows.custFormValues[0].bizOID;$.rows.expenseReportInvoices[0].invoiceView.originalAmount;$.rows.expenseReportInvoices[0].invoiceView.createdDate;$.rows.companyOID</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found;Not found</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;expenseReportInvoices&quot;);
String detal = vars.get(&quot;draft&quot;);


JSONArray expenseReportInvoices = JSON.parseArray(json);
JSONObject draft = JSON.parseObject(detal);
draft.put(&quot;expenseReportInvoices&quot;,expenseReportInvoices);
String str =draft.toString();
vars.put(&quot;draft&quot;,str);


</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单费用详情" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/invoices/${invoiceOID}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获得apportionmentOID" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">apportionmentOID</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseApportion[0].apportionmentOID</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单提交" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${draft}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="拿到提交响应" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">checkResultList</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.checkResultList[0].externalPropertyName</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">null</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="699540342">${bxSuccessful}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
