<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="protocol" elementType="Argument">
            <stringProp name="Argument.name">protocol</stringProp>
            <stringProp name="Argument.value">${__P(protocol,http)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="serverUrl" elementType="Argument">
            <stringProp name="Argument.name">serverUrl</stringProp>
            <stringProp name="Argument.value">${__P(serverUrl,stage.huilianyi.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="username" elementType="Argument">
            <stringProp name="Argument.name">username</stringProp>
            <stringProp name="Argument.value">${__P(username,13700000000)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="password" elementType="Argument">
            <stringProp name="Argument.name">password</stringProp>
            <stringProp name="Argument.value">${__P(password,hly123456)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${serverUrl}</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout">150000</stringProp>
        <stringProp name="HTTPSampler.response_timeout">150000</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="Authorization" elementType="Argument">
            <stringProp name="Argument.name">Authorization</stringProp>
            <stringProp name="Argument.value">Basic QXJ0ZW1pc1dlQ2hhdDpuTENud2RJaGl6V2J5a0h5dVpNNlRwUURkN0t3SzlJWERLOExHc2E3U09X</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DBserver" elementType="Argument">
            <stringProp name="Argument.name">DBserver</stringProp>
            <stringProp name="Argument.value">106.15.120.125</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DBport" elementType="Argument">
            <stringProp name="Argument.name">DBport</stringProp>
            <stringProp name="Argument.value">21906</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="createTime" elementType="Argument">
            <stringProp name="Argument.name">createTime</stringProp>
            <stringProp name="Argument.value">${__time(yyyy-MM-dd,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SuccessSubmit" elementType="Argument">
            <stringProp name="Argument.name">SuccessSubmit</stringProp>
            <stringProp name="Argument.value">{&quot;passFlag&quot;:true,&quot;submitSuccess&quot;:true,&quot;checkResultList&quot;:[],&quot;needConfirm&quot;:false}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">x-helios-client</stringProp>
            <stringProp name="Header.value">helios-jemter</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="用户信息" enabled="true"/>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="管理员登录" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${loginUserNmae}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${password}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="scope" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">write</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">scope</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/oauth/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${Authorization}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="断言持续时间" enabled="true">
            <stringProp name="DurationAssertion.duration">10000</stringProp>
          </DurationAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取accessToken" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">accessToken</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 预处理程序" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">
String loginUserNmae;
String userName =vars.get(&quot;username&quot;);

if(userName.length()==4){
	loginUserNmae =userName+&quot;0000007&quot;;
	log.info(&quot;用户名:&quot;+loginUserNmae);
}
else{
	loginUserNmae = username;
	log.info(&quot;用户名:&quot;+loginUserNmae);
}

vars.put(&quot;loginUserNmae&quot;, loginUserNmae);
</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取公司信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/account</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取userOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">userOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;userOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取用户相关信息" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">companyOID;fullName;email;mobile;employeeID;departmentOID;departmentName;companyName;corporationOID;companyId;tenantId;login</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.companyOID;$.fullName;$.email;$.mobile;$.employeeID;$.departmentOID;$.departmentName;$.companyName;$.corporationOID;$.companyId;$.tenantId;$.login</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null;null;null;null;null;null;null;null;null;null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="断言持续时间" enabled="true">
          <stringProp name="DurationAssertion.duration">10000</stringProp>
        </DurationAssertion>
        <hashTree/>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
          <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;
import java.util.Date;

Date date = new Date();
Calendar calendar = new GregorianCalendar();
calendar.setTime(date);
calendar.add(calendar.DATE, 0);
date = calendar.getTime();
SimpleDateFormat formatter = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
String today = formatter.format(date);
vars.put(&quot;now&quot;, today);


Date date = new Date();
Calendar calendar = new GregorianCalendar();
calendar.setTime(date);
calendar.add(calendar.DATE, 1);
date = calendar.getTime();
SimpleDateFormat formatter = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
String today = formatter.format(date);
vars.put(&quot;nextday&quot;, today);</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="新建费用报销单(交通)" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1525339456000</longProp>
        <longProp name="ThreadGroup.end_time">1525339456000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="918312701">用户信息</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="获取登录token不成功，再次获取" enabled="true">
          <stringProp name="IfController.condition">&quot;${accessToken}&quot; ==&quot;&quot; || &quot;${accessToken}&quot; ==undefined</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="918312701">用户信息</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用01_获取公司信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/my/companies</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取setOfBooksId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">setOfBooksId;gongsiName</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.setOfBooksId;$.name</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用01_获取所有类型的单据(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/company/my/available/all/?formType=102</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取dailyFormOID" enabled="false">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">dailyFormOID</stringProp>
            <stringProp name="RegexExtractor.regex">formOID&quot;:&quot;([a-zA-Z0-9-]+)&quot;,&quot;formName&quot;:&quot;日常报销单&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">NULL</stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
            <stringProp name="Sample.scope">all</stringProp>
          </RegexExtractor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取dailyFormOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">dailyFormOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.formName==&quot;日常报销单&quot;)].formOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用01_获取表单里面的字段(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用01_报销单创建(交通)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
	&quot;id&quot;: 10952,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: null,&#xd;
	&quot;formType&quot;: 3001,&#xd;
	&quot;asSystem&quot;: false,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T04:34:21Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: null,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1001,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: null,&#xd;
	&quot;companyOID&quot;: &quot;${companyOID}&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;form.description&quot;: &quot;{\&quot;enable\&quot;:false,\&quot;en\&quot;:{\&quot;title\&quot;:\&quot;caption\&quot;,\&quot;content\&quot;:\&quot;content\&quot;},\&quot;zh_cn\&quot;:{\&quot;title\&quot;:\&quot;说明文字\&quot;,\&quot;content\&quot;:\&quot;描述内容\&quot;}}&quot;,&#xd;
		&quot;enableAddSignForSubmitter&quot;: &quot;false&quot;,&#xd;
		&quot;enableAddSign&quot;: &quot;true&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: &quot;${tenantId}&quot;,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${departmentOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;报销单添加费用测试&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/draft</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取businessCode" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">businessCode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;businessCode&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取expenseReportOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseReportOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseReportOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取applicantOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">applicantOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOIDs" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOIDs</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;approverOIDs&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取bizOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">bizOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;bizOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用01_获取费用类型" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}/selected/expense/types?userOID=${userOID}&amp;createManually=true</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1930901582">&quot;entityOID&quot;:&quot;${dailyFormOID}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取交通expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">trans_expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;交通&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取交通expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">trans_expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;交通&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取交通expenseTypeCategoryOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">trans_expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;交通&quot;)].expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取交通-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">trans_city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;交通&quot;)].fields.[?(@.name==&quot;城市名称&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取交通-出发地fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">trans_departure_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;交通&quot;)].fields.[?(@.name==&quot;出发地&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取交通-目的地fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">trans_destination_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;交通&quot;)].fields.[?(@.name==&quot;目的地&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取交通-出发时间fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">trans_starttime_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;交通&quot;)].fields.[?(@.name==&quot;出发时间&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取交通-到达时间fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">trans_endtime_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;交通&quot;)].fields.[?(@.name==&quot;到达时间&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取交通iconURL" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">jiaotongiconURL</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;交通&quot;)].iconURL</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].fields.[?(@.name==&quot;城市&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用01_创建费用1(交通)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;275894&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;7dc7cc62-a4e3-486f-a53e-70795bd5cd2c&quot;,&#xd;
		&quot;fileName&quot;: &quot;Desert.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/7dc7cc62-a4e3-486f-a53e-70795bd5cd2c-Desert.jpg?Expires=1525364461&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=tr6RFP53qSFCZkq1fZlRa6m8PD8=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/7dc7cc62-a4e3-486f-a53e-70795bd5cd2c-Desert.jpg?Expires=1525364461&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=tr6RFP53qSFCZkq1fZlRa6m8PD8=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/7dc7cc62-a4e3-486f-a53e-70795bd5cd2c-Desert.jpg?Expires=1525364461&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=9Sl5GvXPiWVe/I6SLrTaom/uzqc=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/7dc7cc62-a4e3-486f-a53e-70795bd5cd2c-Desert.jpg?Expires=1525364461&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=fwSbCgzzaCi0MSngzGRGQlIRHno=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 845941,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T15:21:01Z&quot;,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${trans_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;交通&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${trans_expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;transportation&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.transportation&quot;,&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;amount&quot;: 1,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;交通费报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 111,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${trans_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 112,&#xd;
		&quot;name&quot;: &quot;出发地&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;华为西安研究所\&quot;,\&quot;longitude\&quot;:108.83902,\&quot;latitude\&quot;:34.19428}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;departure.location&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${trans_departure_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 113,&#xd;
		&quot;name&quot;: &quot;目的地&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;西安环普科技产业园\&quot;,\&quot;longitude\&quot;:108.84068,\&quot;latitude\&quot;:34.20974}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;destination.location&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${trans_destination_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;DATETIME&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;DATE&quot;,&#xd;
		&quot;mappedColumnId&quot;: 121,&#xd;
		&quot;name&quot;: &quot;出发时间&quot;,&#xd;
		&quot;value&quot;: &quot;${createTime}T08:10:00Z&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;start.time&quot;,&#xd;
		&quot;sequence&quot;: 4,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${trans_starttime_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;DATETIME&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;DATE&quot;,&#xd;
		&quot;mappedColumnId&quot;: 122,&#xd;
		&quot;name&quot;: &quot;到达时间&quot;,&#xd;
		&quot;value&quot;: &quot;${createTime}T08:30:00Z&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;end.time&quot;,&#xd;
		&quot;sequence&quot;: 5,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${trans_endtime_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/invoice/api/v3/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="981219709">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用01_获取报销单详情" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1947514396">&quot;businessCode&quot;:&quot;${businessCode}&quot;</stringProp>
              <stringProp name="402202526">&quot;currencyCode&quot;:&quot;CNY&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取交通invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">trans_invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;交通&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取交通expenseReportInvoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">trans_expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[0].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用01_修改费用1(交通)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceOID&quot;: &quot;${trans_invoiceOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${trans_expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${trans_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;交通&quot;,&#xd;
	&quot;crossCheckStatus&quot;: null,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.transportation&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;transportation&quot;,&#xd;
	&quot;phoneNumber&quot;: null,&#xd;
	&quot;email&quot;: null,&#xd;
	&quot;expenseTypeIconURL&quot;: &quot;${jiaotongiconURL}&quot;,&#xd;
	&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
	&quot;expenseTypeCategorySimpleDTO&quot;: {&#xd;
		&quot;expenseTypeCategoryOID&quot;: &quot;${trans_expenseTypeCategoryOID}&quot;,&#xd;
		&quot;name&quot;: &quot;系统费用类型&quot;,&#xd;
		&quot;code&quot;: null&#xd;
	},&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: 1,&#xd;
	&quot;originalAmount&quot;: 1,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;mobile&quot;: null,&#xd;
	&quot;employeeId&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldDataType&quot;: null,&#xd;
		&quot;mappedColumnId&quot;: null,&#xd;
		&quot;name&quot;: &quot;城市名称&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${trans_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: &quot;西安&quot;,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;fieldDataType&quot;: null,&#xd;
		&quot;mappedColumnId&quot;: null,&#xd;
		&quot;name&quot;: &quot;出发地&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;华为西安研究所\&quot;,\&quot;longitude\&quot;:108.83902,\&quot;latitude\&quot;:34.19428}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;departure.location&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${trans_departure_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: &quot;{\&quot;address\&quot;:\&quot;华为西安研究所\&quot;,\&quot;longitude\&quot;:108.83902,\&quot;latitude\&quot;:34.19428}&quot;,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;fieldDataType&quot;: null,&#xd;
		&quot;mappedColumnId&quot;: null,&#xd;
		&quot;name&quot;: &quot;目的地&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;西安环普科技产业园\&quot;,\&quot;longitude\&quot;:108.84068,\&quot;latitude\&quot;:34.20974}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;destination.location&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${trans_destination_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: &quot;{\&quot;address\&quot;:\&quot;西安环普科技产业园\&quot;,\&quot;longitude\&quot;:108.84068,\&quot;latitude\&quot;:34.20974}&quot;,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;DATETIME&quot;,&#xd;
		&quot;fieldDataType&quot;: null,&#xd;
		&quot;mappedColumnId&quot;: null,&#xd;
		&quot;name&quot;: &quot;出发时间&quot;,&#xd;
		&quot;value&quot;: &quot;${createTime}T01:37:24Z&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;start.time&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${trans_starttime_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: &quot;${createTime}T17:37:24Z&quot;,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;DATETIME&quot;,&#xd;
		&quot;fieldDataType&quot;: null,&#xd;
		&quot;mappedColumnId&quot;: null,&#xd;
		&quot;name&quot;: &quot;到达时间&quot;,&#xd;
		&quot;value&quot;: &quot;${createTime}T01:55:07Z&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;end.time&quot;,&#xd;
		&quot;sequence&quot;: 4,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${trans_endtime_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: &quot;${createTime}T17:55:07Z&quot;,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
	&quot;comment&quot;: &quot;修改费用测试&quot;,&#xd;
	&quot;warning&quot;: &quot;&quot;,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T09:38:00Z&quot;,&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;278248&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;16413720-7648-494c-8ab1-94f405f25da1&quot;,&#xd;
		&quot;fileName&quot;: &quot;asc.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/b634aa55-09dd-4f44-9504-4b18ab2d0556/invoices/16413720-7648-494c-8ab1-94f405f25da1-asc.jpg?Expires=1530614261&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=C7NH1Ac+LhJuXKC6jy0ktuun/Zw=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/b634aa55-09dd-4f44-9504-4b18ab2d0556/invoices/16413720-7648-494c-8ab1-94f405f25da1-asc.jpg?Expires=1530614261&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=C7NH1Ac+LhJuXKC6jy0ktuun/Zw=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/b634aa55-09dd-4f44-9504-4b18ab2d0556/invoices/16413720-7648-494c-8ab1-94f405f25da1-asc.jpg?Expires=1530614261&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=nPYVy1X/14MtjdCMYrkMEHyYQxQ=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/b634aa55-09dd-4f44-9504-4b18ab2d0556/invoices/16413720-7648-494c-8ab1-94f405f25da1-asc.jpg?Expires=1530614261&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=8TV2CHuv07lVzU2gM5c+Ov+LceA=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 16063,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T09:37:17Z&quot;,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: null,&#xd;
	&quot;createTime&quot;: &quot;${createTime}T09:37:41Z&quot;,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;approvalOperates&quot;: null,&#xd;
	&quot;referenceId&quot;: null,&#xd;
	&quot;unitPrice&quot;: null,&#xd;
	&quot;number&quot;: null,&#xd;
	&quot;receiptFailType&quot;: null,&#xd;
	&quot;receiptFailReason&quot;: null,&#xd;
	&quot;valid&quot;: false,&#xd;
	&quot;receiptID&quot;: null,&#xd;
	&quot;cardSignType&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;nonVatBaseAmount&quot;: 1,&#xd;
	&quot;baseCurrencyTax&quot;: 0,&#xd;
	&quot;originalApprovedNonVat&quot;: 1,&#xd;
	&quot;originalApprovedVat&quot;: 0,&#xd;
	&quot;baseApprovedNonVat&quot;: 1,&#xd;
	&quot;baseApprovedVat&quot;: 0,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;expenseAmount&quot;: 1,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;receiptGoodsID&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;invoiceLabelDTOS&quot;: [],&#xd;
	&quot;invoiceLabels&quot;: [{&#xd;
		&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
		&quot;name&quot;: &quot;公司已付&quot;,&#xd;
		&quot;level&quot;: &quot;INFO&quot;,&#xd;
		&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
		&quot;toast&quot;: null,&#xd;
		&quot;category&quot;: null,&#xd;
		&quot;oldLabel&quot;: false&#xd;
	}],&#xd;
	&quot;companyOID&quot;: null,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: null,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;source&quot;: null,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;checked&quot;: null,&#xd;
	&quot;createInvoice&quot;: true,&#xd;
	&quot;checkWarning&quot;: null,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;digitalInvoiceId&quot;: null,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;originalActualCurrencyRate&quot;: 1,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;actualCurrencyAmount&quot;: 1,&#xd;
	&quot;baseAmount&quot;: 1,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;flightNo&quot;: null,&#xd;
	&quot;apportionUsed&quot;: false,&#xd;
	&quot;expenseApportion&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;amountChanged&quot;: null,&#xd;
	&quot;approvalStatus&quot;: null,&#xd;
	&quot;bankTransactionID&quot;: null,&#xd;
	&quot;expenseCreatedType&quot;: null,&#xd;
	&quot;overDue&quot;: null,&#xd;
	&quot;bankTransactionDetail&quot;: null,&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;subsidyRepeatedFlag&quot;: false,&#xd;
	&quot;orderAmount&quot;: 1,&#xd;
	&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
	&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
	&quot;receiptedStatus&quot;: 0,&#xd;
	&quot;tenantId&quot;: ${tenantId},&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;stringCol1&quot;: &quot;西安&quot;,&#xd;
	&quot;stringCol2&quot;: null,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;stringCol3&quot;: &quot;{\&quot;address\&quot;:\&quot;西安环普科技产业园\&quot;,\&quot;longitude\&quot;:108.84068,\&quot;latitude\&quot;:34.20974}&quot;,&#xd;
	&quot;status&quot;: 1000,&#xd;
	&quot;index&quot;: 1,&#xd;
	&quot;preCreatedDate&quot;: &quot;${createTime}T09:38:00Z&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/invoice/api/v3/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="981219709">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用01_创建费用2(交通)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;281074&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;df980246-8f77-4852-b2bf-64ddb5f187b9&quot;,&#xd;
		&quot;fileName&quot;: &quot;asc.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/df980246-8f77-4852-b2bf-64ddb5f187b9-asc.jpg?Expires=1529943988&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=qr+tKrWoTWMbIM0hksyGWC2hnMg=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/df980246-8f77-4852-b2bf-64ddb5f187b9-asc.jpg?Expires=1529943988&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=qr+tKrWoTWMbIM0hksyGWC2hnMg=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/df980246-8f77-4852-b2bf-64ddb5f187b9-asc.jpg?Expires=1529943988&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=YdcTAKC+Un9XdL0S3jX8iN6O268=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/df980246-8f77-4852-b2bf-64ddb5f187b9-asc.jpg?Expires=1529943988&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=ThaZbvP6z1l7oAg292e3218dM1g=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 16063,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T15:26:49Z&quot;,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${express_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${express_expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;快递&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;express&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.express&quot;,&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;amount&quot;: 1,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T15:26:49Z&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;办公用品报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 111,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${express_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/invoice/api/v3/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="981219709">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用01_获取报销单详情" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1947514396">&quot;businessCode&quot;:&quot;${businessCode}&quot;</stringProp>
              <stringProp name="402202526">&quot;currencyCode&quot;:&quot;CNY&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;快递&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">AllDetal</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用01_费用2删除(交通)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/remove/invoice/${expenseReportOID}/${express_invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用01_删除账本里费用2(交通)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoice/batch?invoiceOIDs=${express_invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用01_计算费用合计(交通)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&quot;${trans_invoiceOID}&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoices/summary/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1978369290">baseCompanyPaymentSum&quot;:1.0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用01_报销单提交(交通)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;applicantName&quot;: &quot;${fullName}&quot;,&#xd;
	&quot;applicantOID&quot;: &quot;${applicantOID}&quot;,&#xd;
	&quot;approverOIDs&quot;: &quot;${approverOIDs}&quot;,&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;baseCurrencyAmount&quot;: 1,&#xd;
	&quot;baseCurrencyRealPayAmount&quot;: 0,&#xd;
	&quot;businessCode&quot;: &quot;${businessCode}&quot;,&#xd;
	&quot;companyOID&quot;: &quot;${companyOID}&quot;,&#xd;
	&quot;corporationOID&quot;: &quot;${corporationOID}&quot;,&#xd;
	&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T03:56:15Z&quot;,&#xd;
	&quot;createdName&quot;: &quot;admin&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;currencyCodeName&quot;: &quot;人民币&quot;,&#xd;
	&quot;currencySame&quot;: false,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;${department_formValueOID}&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${bizOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${departmentOID}&quot;,&#xd;
		&quot;showValue&quot;: &quot;${departmentName}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T07:44:01Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T07:44:01Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: true,&#xd;
		&quot;refCostCenterOID&quot;: null&#xd;
	}, {&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;${reason_formValueOID}&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${bizOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;事由&quot;,&#xd;
		&quot;showValue&quot;: &quot;事由&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T07:44:01Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T07:44:01Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: true,&#xd;
		&quot;refCostCenterOID&quot;: null&#xd;
	}, {&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;${approver_formValueOID}&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${bizOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;showValue&quot;: &quot;admin&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T03:56:15Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T03:56:15Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: null,&#xd;
		&quot;refCostCenterOID&quot;: null&#xd;
	}],&#xd;
	&quot;departmentName&quot;: &quot;${departmentName}&quot;,&#xd;
	&quot;departmentOID&quot;: &quot;${departmentOID}&quot;,&#xd;
	&quot;departmentPath&quot;: &quot;${departmentName}&quot;,&#xd;
	&quot;expenseReportInvoices&quot;: [{&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T08:09:33Z&quot;,&#xd;
		&quot;expenseReportInvoiceOID&quot;: &quot;${trans_expenseReportInvoiceOID}&quot;,&#xd;
		&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;invoiceOID&quot;: &quot;${trans_invoiceOID}&quot;,&#xd;
		&quot;invoiceView&quot;: {&#xd;
			&quot;invoiceOID&quot;: &quot;${trans_invoiceOID}&quot;,&#xd;
			&quot;expenseTypeId&quot;: &quot;${trans_expenseTypeId}&quot;,&#xd;
			&quot;expenseTypeOID&quot;: &quot;${trans_expenseTypeOID}&quot;,&#xd;
			&quot;expenseTypeName&quot;: &quot;交通&quot;,&#xd;
			&quot;crossCheckStatus&quot;: null,&#xd;
			&quot;expenseTypeKey&quot;: null,&#xd;
			&quot;expenseTypeIconName&quot;: &quot;transportation&quot;,&#xd;
			&quot;phoneNumber&quot;: null,&#xd;
			&quot;email&quot;: null,&#xd;
			&quot;expenseTypeIconURL&quot;: &quot;${jiaotongiconURL}&quot;,&#xd;
			&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
			&quot;expenseTypeCategoryDTO&quot;: {&#xd;
				&quot;expenseTypeCategoryOID&quot;: &quot;${trans_expenseTypeCategoryOID}&quot;,&#xd;
				&quot;name&quot;: &quot;费用类型&quot;,&#xd;
				&quot;code&quot;: null&#xd;
			},&#xd;
			&quot;costCenterItemOID&quot;: null,&#xd;
			&quot;costCenterItemName&quot;: null,&#xd;
			&quot;amount&quot;: 1,&#xd;
			&quot;originalAmount&quot;: 1,&#xd;
			&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;userOID&quot;: &quot;${userOID}&quot;,&#xd;
			&quot;mobile&quot;: null,&#xd;
			&quot;employeeId&quot;: null,&#xd;
			&quot;data&quot;: [{&#xd;
				&quot;fieldType&quot;: &quot;DATETIME&quot;,&#xd;
				&quot;name&quot;: &quot;到达时间&quot;,&#xd;
				&quot;value&quot;: &quot;${createTime}T00:30:00Z&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;end.time&quot;,&#xd;
				&quot;sequence&quot;: 5,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;${trans_endtime_fieldOID}&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: null,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}, {&#xd;
				&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
				&quot;name&quot;: &quot;城市&quot;,&#xd;
				&quot;value&quot;: &quot;西安&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;city&quot;,&#xd;
				&quot;sequence&quot;: 1,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;${trans_city_fieldOID}&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: null,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}, {&#xd;
				&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
				&quot;name&quot;: &quot;出发地&quot;,&#xd;
				&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;华为西安研究所\&quot;,\&quot;longitude\&quot;:108.83902,\&quot;latitude\&quot;:34.19428}&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;departure.location&quot;,&#xd;
				&quot;sequence&quot;: 2,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;${trans_departure_fieldOID}&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: null,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}, {&#xd;
				&quot;fieldType&quot;: &quot;DATETIME&quot;,&#xd;
				&quot;name&quot;: &quot;出发时间&quot;,&#xd;
				&quot;value&quot;: &quot;${createTime}T00:10:00Z&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;start.time&quot;,&#xd;
				&quot;sequence&quot;: 4,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;${trans_starttime_fieldOID}&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: null,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}, {&#xd;
				&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
				&quot;name&quot;: &quot;目的地&quot;,&#xd;
				&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;西安环普科技产业园\&quot;,\&quot;longitude\&quot;:108.84068,\&quot;latitude\&quot;:34.20974}&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;destination.location&quot;,&#xd;
				&quot;sequence&quot;: 3,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;${trans_destination_fieldOID}&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: null,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}],&#xd;
			&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
			&quot;comment&quot;: &quot;修改费用测试&quot;,&#xd;
			&quot;warning&quot;: &quot;&quot;,&#xd;
			&quot;overtime&quot;: &quot;N&quot;,&#xd;
			&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
			&quot;createdDate&quot;: &quot;2018-05-05T16:00:00Z&quot;,&#xd;
			&quot;attachments&quot;: [{&#xd;
				&quot;id&quot;: &quot;276171&quot;,&#xd;
				&quot;attachmentOID&quot;: &quot;3a637d22-2844-4286-aca0-bf781defa500&quot;,&#xd;
				&quot;fileName&quot;: &quot;Desert.jpg&quot;,&#xd;
				&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
				&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/3a637d22-2844-4286-aca0-bf781defa500-Desert.jpg?Expires=1525599171&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=tixVacgy6QMsSFt19+UYfHL6CqE=&quot;,&#xd;
				&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/3a637d22-2844-4286-aca0-bf781defa500-Desert.jpg?Expires=1525599171&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=tixVacgy6QMsSFt19+UYfHL6CqE=&quot;,&#xd;
				&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/3a637d22-2844-4286-aca0-bf781defa500-Desert.jpg?Expires=1525599171&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=BmS3Oe9pVcI65ovtE5mmUpfGh/U=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
				&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/3a637d22-2844-4286-aca0-bf781defa500-Desert.jpg?Expires=1525599171&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=WId5caT78kQT2K1yO4/9LcfmdNk=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
				&quot;size&quot;: 845941,&#xd;
				&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
				&quot;createdDate&quot;: &quot;${createTime}T08:09:02Z&quot;,&#xd;
				&quot;public&quot;: false&#xd;
			}],&#xd;
			&quot;withReceipt&quot;: true,&#xd;
			&quot;readonly&quot;: false,&#xd;
			&quot;businessCode&quot;: null,&#xd;
			&quot;createLocation&quot;: null,&#xd;
			&quot;createTime&quot;: &quot;${createTime}T08:09:27Z&quot;,&#xd;
			&quot;rejectType&quot;: null,&#xd;
			&quot;approverId&quot;: null,&#xd;
			&quot;approvalStepId&quot;: null,&#xd;
			&quot;approvalOperates&quot;: null,&#xd;
			&quot;approver&quot;: null,&#xd;
			&quot;referenceId&quot;: null,&#xd;
			&quot;unitPrice&quot;: null,&#xd;
			&quot;number&quot;: null,&#xd;
			&quot;receiptFailType&quot;: null,&#xd;
			&quot;receiptFailReason&quot;: null,&#xd;
			&quot;valid&quot;: false,&#xd;
			&quot;receiptID&quot;: null,&#xd;
			&quot;cardSignType&quot;: null,&#xd;
			&quot;nonVATinclusiveAmount&quot;: null,&#xd;
			&quot;taxAmount&quot;: null,&#xd;
			&quot;receiptType&quot;: null,&#xd;
			&quot;receiptTypeNo&quot;: null,&#xd;
			&quot;invoiceCode&quot;: null,&#xd;
			&quot;invoiceNumber&quot;: null,&#xd;
			&quot;invoiceDate&quot;: null,&#xd;
			&quot;priceTaxAmount&quot;: null,&#xd;
			&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
			&quot;receiptGoodsID&quot;: null,&#xd;
			&quot;taxRate&quot;: null,&#xd;
			&quot;checkCode&quot;: null,&#xd;
			&quot;invoiceLabelDTOS&quot;: [],&#xd;
			&quot;invoiceLabels&quot;: [{&#xd;
				&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
				&quot;name&quot;: &quot;公司&quot;,&#xd;
				&quot;level&quot;: &quot;INFO&quot;,&#xd;
				&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
				&quot;toast&quot;: null,&#xd;
				&quot;category&quot;: null,&#xd;
				&quot;oldLabel&quot;: false&#xd;
			}],&#xd;
			&quot;companyOID&quot;: null,&#xd;
			&quot;invoiceInstead&quot;: true,&#xd;
			&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
			&quot;paymentType&quot;: 1002,&#xd;
			&quot;source&quot;: null,&#xd;
			&quot;ownerOID&quot;: &quot;${userOID}&quot;,&#xd;
			&quot;checked&quot;: null,&#xd;
			&quot;createInvoice&quot;: true,&#xd;
			&quot;checkWarning&quot;: null,&#xd;
			&quot;digitalInvoice&quot;: null,&#xd;
			&quot;digitalInvoiceId&quot;: null,&#xd;
			&quot;actualCurrencyRate&quot;: 1,&#xd;
			&quot;originalActualCurrencyRate&quot;: 1,&#xd;
			&quot;companyCurrencyRate&quot;: 1,&#xd;
			&quot;actualCurrencyAmount&quot;: 1,&#xd;
			&quot;baseAmount&quot;: 1,&#xd;
			&quot;updateRate&quot;: false,&#xd;
			&quot;flightNo&quot;: null,&#xd;
			&quot;apportionUsed&quot;: false,&#xd;
			&quot;expenseApportion&quot;: null,&#xd;
			&quot;expenseReportOID&quot;: null,&#xd;
			&quot;amountChanged&quot;: null,&#xd;
			&quot;approvalStatus&quot;: null,&#xd;
			&quot;bankTransactionID&quot;: null,&#xd;
			&quot;expenseCreatedType&quot;: null,&#xd;
			&quot;overDue&quot;: null,&#xd;
			&quot;bankTransactionDetail&quot;: null,&#xd;
			&quot;baseCurrency&quot;: null,&#xd;
			&quot;subsidyRepeatedFlag&quot;: false,&#xd;
			&quot;orderAmount&quot;: 1,&#xd;
			&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
			&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
			&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
			&quot;receiptedStatus&quot;: 0,&#xd;
			&quot;stringCol3&quot;: &quot;{\&quot;address\&quot;:\&quot;西安环普科技产业园\&quot;,\&quot;longitude\&quot;:108.84068,\&quot;latitude\&quot;:34.20974}&quot;,&#xd;
			&quot;vatInvoice&quot;: false,&#xd;
			&quot;recognized&quot;: false,&#xd;
			&quot;stringCol1&quot;: &quot;西安&quot;,&#xd;
			&quot;stringCol2&quot;: null,&#xd;
			&quot;status&quot;: 1000,&#xd;
			&quot;index&quot;: 1&#xd;
		},&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T08:09:33Z&quot;,&#xd;
		&quot;status&quot;: 1000&#xd;
	}],&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;expenseTypes&quot;: &quot;${trans_expenseTypeOID}&quot;,&#xd;
	&quot;filterFlag&quot;: true,&#xd;
	&quot;forceCount&quot;: 0,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;foreignCurrencyAmount&quot;: 1,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
	&quot;ignoreBudgetWarningFlag&quot;: false,&#xd;
	&quot;invoiceGroups&quot;: [{&#xd;
		&quot;categoryName&quot;: &quot;费用类型&quot;,&#xd;
		&quot;invoices&quot;: [{&#xd;
			&quot;createdDate&quot;: &quot;${createTime}T08:09:33Z&quot;,&#xd;
			&quot;expenseReportInvoiceOID&quot;: &quot;${trans_expenseReportInvoiceOID}&quot;,&#xd;
			&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
			&quot;invoiceOID&quot;: &quot;${trans_invoiceOID}&quot;,&#xd;
			&quot;invoiceView&quot;: {&#xd;
				&quot;invoiceOID&quot;: &quot;${trans_invoiceOID}&quot;,&#xd;
				&quot;expenseTypeId&quot;: &quot;${trans_expenseTypeId}&quot;,&#xd;
				&quot;expenseTypeOID&quot;: &quot;${trans_expenseTypeOID}&quot;,&#xd;
				&quot;expenseTypeName&quot;: &quot;交通&quot;,&#xd;
				&quot;crossCheckStatus&quot;: null,&#xd;
				&quot;expenseTypeKey&quot;: null,&#xd;
				&quot;expenseTypeIconName&quot;: &quot;transportation&quot;,&#xd;
				&quot;phoneNumber&quot;: null,&#xd;
				&quot;email&quot;: null,&#xd;
				&quot;expenseTypeIconURL&quot;: &quot;${jiaotongiconURL}&quot;,&#xd;
				&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
				&quot;expenseTypeCategoryDTO&quot;: {&#xd;
					&quot;expenseTypeCategoryOID&quot;: &quot;${trans_expenseTypeCategoryOID}&quot;,&#xd;
					&quot;name&quot;: &quot;费用类型&quot;,&#xd;
					&quot;code&quot;: null&#xd;
				},&#xd;
				&quot;costCenterItemOID&quot;: null,&#xd;
				&quot;costCenterItemName&quot;: null,&#xd;
				&quot;amount&quot;: 1,&#xd;
				&quot;originalAmount&quot;: 1,&#xd;
				&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;userOID&quot;: &quot;${userOID}&quot;,&#xd;
				&quot;mobile&quot;: null,&#xd;
				&quot;employeeId&quot;: null,&#xd;
				&quot;data&quot;: [{&#xd;
					&quot;fieldType&quot;: &quot;DATETIME&quot;,&#xd;
					&quot;name&quot;: &quot;到达时间&quot;,&#xd;
					&quot;value&quot;: &quot;${createTime}T00:30:00Z&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;end.time&quot;,&#xd;
					&quot;sequence&quot;: 5,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;${trans_endtime_fieldOID}&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: null,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}, {&#xd;
					&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
					&quot;name&quot;: &quot;城市&quot;,&#xd;
					&quot;value&quot;: &quot;西安&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;city&quot;,&#xd;
					&quot;sequence&quot;: 1,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;${trans_city_fieldOID}&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: null,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}, {&#xd;
					&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
					&quot;name&quot;: &quot;出发地&quot;,&#xd;
					&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;华为西安研究所\&quot;,\&quot;longitude\&quot;:108.83902,\&quot;latitude\&quot;:34.19428}&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;departure.location&quot;,&#xd;
					&quot;sequence&quot;: 2,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;${trans_departure_fieldOID}&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: null,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}, {&#xd;
					&quot;fieldType&quot;: &quot;DATETIME&quot;,&#xd;
					&quot;name&quot;: &quot;出发时间&quot;,&#xd;
					&quot;value&quot;: &quot;${createTime}T00:10:00Z&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;start.time&quot;,&#xd;
					&quot;sequence&quot;: 4,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;${trans_starttime_fieldOID}&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: null,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}, {&#xd;
					&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
					&quot;name&quot;: &quot;目的地&quot;,&#xd;
					&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;西安环普科技产业园\&quot;,\&quot;longitude\&quot;:108.84068,\&quot;latitude\&quot;:34.20974}&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;destination.location&quot;,&#xd;
					&quot;sequence&quot;: 3,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;${trans_destination_fieldOID}&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: null,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}],&#xd;
				&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
				&quot;comment&quot;: &quot;修改费用测试&quot;,&#xd;
				&quot;warning&quot;: &quot;&quot;,&#xd;
				&quot;overtime&quot;: &quot;N&quot;,&#xd;
				&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
				&quot;createdDate&quot;: &quot;${createTime}T16:00:00Z&quot;,&#xd;
				&quot;attachments&quot;: [{&#xd;
					&quot;id&quot;: &quot;276171&quot;,&#xd;
					&quot;attachmentOID&quot;: &quot;3a637d22-2844-4286-aca0-bf781defa500&quot;,&#xd;
					&quot;fileName&quot;: &quot;Desert.jpg&quot;,&#xd;
					&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
					&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/3a637d22-2844-4286-aca0-bf781defa500-Desert.jpg?Expires=1525599171&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=tixVacgy6QMsSFt19+UYfHL6CqE=&quot;,&#xd;
					&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/3a637d22-2844-4286-aca0-bf781defa500-Desert.jpg?Expires=1525599171&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=tixVacgy6QMsSFt19+UYfHL6CqE=&quot;,&#xd;
					&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/3a637d22-2844-4286-aca0-bf781defa500-Desert.jpg?Expires=1525599171&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=BmS3Oe9pVcI65ovtE5mmUpfGh/U=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
					&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/3a637d22-2844-4286-aca0-bf781defa500-Desert.jpg?Expires=1525599171&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=WId5caT78kQT2K1yO4/9LcfmdNk=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
					&quot;size&quot;: 845941,&#xd;
					&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
					&quot;createdDate&quot;: &quot;${createTime}T08:09:02Z&quot;,&#xd;
					&quot;public&quot;: false&#xd;
				}],&#xd;
				&quot;withReceipt&quot;: true,&#xd;
				&quot;readonly&quot;: false,&#xd;
				&quot;businessCode&quot;: null,&#xd;
				&quot;createLocation&quot;: null,&#xd;
				&quot;createTime&quot;: &quot;${createTime}T08:09:27Z&quot;,&#xd;
				&quot;rejectType&quot;: null,&#xd;
				&quot;rejectReason&quot;: null,&#xd;
				&quot;approverId&quot;: null,&#xd;
				&quot;approvalStepId&quot;: null,&#xd;
				&quot;approvalOperates&quot;: null,&#xd;
				&quot;approver&quot;: null,&#xd;
				&quot;referenceId&quot;: null,&#xd;
				&quot;unitPrice&quot;: null,&#xd;
				&quot;number&quot;: null,&#xd;
				&quot;receiptFailType&quot;: null,&#xd;
				&quot;receiptFailReason&quot;: null,&#xd;
				&quot;valid&quot;: false,&#xd;
				&quot;receiptID&quot;: null,&#xd;
				&quot;cardSignType&quot;: null,&#xd;
				&quot;nonVATinclusiveAmount&quot;: null,&#xd;
				&quot;taxAmount&quot;: null,&#xd;
				&quot;receiptType&quot;: null,&#xd;
				&quot;receiptTypeNo&quot;: null,&#xd;
				&quot;invoiceCode&quot;: null,&#xd;
				&quot;invoiceNumber&quot;: null,&#xd;
				&quot;invoiceDate&quot;: null,&#xd;
				&quot;priceTaxAmount&quot;: null,&#xd;
				&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
				&quot;receiptGoodsID&quot;: null,&#xd;
				&quot;taxRate&quot;: null,&#xd;
				&quot;checkCode&quot;: null,&#xd;
				&quot;invoiceLabelDTOS&quot;: [],&#xd;
				&quot;invoiceLabels&quot;: [{&#xd;
					&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
					&quot;name&quot;: &quot;公司&quot;,&#xd;
					&quot;level&quot;: &quot;INFO&quot;,&#xd;
					&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
					&quot;toast&quot;: null,&#xd;
					&quot;category&quot;: null,&#xd;
					&quot;oldLabel&quot;: false&#xd;
				}],&#xd;
				&quot;companyOID&quot;: null,&#xd;
				&quot;invoiceInstead&quot;: true,&#xd;
				&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
				&quot;paymentType&quot;: 1002,&#xd;
				&quot;source&quot;: null,&#xd;
				&quot;ownerOID&quot;: &quot;${userOID}&quot;,&#xd;
				&quot;checked&quot;: null,&#xd;
				&quot;createInvoice&quot;: true,&#xd;
				&quot;checkWarning&quot;: null,&#xd;
				&quot;digitalInvoice&quot;: null,&#xd;
				&quot;digitalInvoiceId&quot;: null,&#xd;
				&quot;actualCurrencyRate&quot;: 1,&#xd;
				&quot;originalActualCurrencyRate&quot;: 1,&#xd;
				&quot;companyCurrencyRate&quot;: 1,&#xd;
				&quot;actualCurrencyAmount&quot;: 1,&#xd;
				&quot;baseAmount&quot;: 1,&#xd;
				&quot;updateRate&quot;: false,&#xd;
				&quot;flightNo&quot;: null,&#xd;
				&quot;apportionUsed&quot;: false,&#xd;
				&quot;expenseApportion&quot;: null,&#xd;
				&quot;expenseReportOID&quot;: null,&#xd;
				&quot;amountChanged&quot;: null,&#xd;
				&quot;approvalStatus&quot;: null,&#xd;
				&quot;bankTransactionID&quot;: null,&#xd;
				&quot;expenseCreatedType&quot;: null,&#xd;
				&quot;overDue&quot;: null,&#xd;
				&quot;bankTransactionDetail&quot;: null,&#xd;
				&quot;baseCurrency&quot;: null,&#xd;
				&quot;subsidyRepeatedFlag&quot;: false,&#xd;
				&quot;orderAmount&quot;: 1,&#xd;
				&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
				&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
				&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
				&quot;receiptedStatus&quot;: 0,&#xd;
				&quot;stringCol3&quot;: &quot;{\&quot;address\&quot;:\&quot;西安环普科技产业园\&quot;,\&quot;longitude\&quot;:108.84068,\&quot;latitude\&quot;:34.20974}&quot;,&#xd;
				&quot;vatInvoice&quot;: false,&#xd;
				&quot;recognized&quot;: false,&#xd;
				&quot;stringCol1&quot;: &quot;西安&quot;,&#xd;
				&quot;stringCol2&quot;: null&#xd;
			},&#xd;
			&quot;lastModifiedDate&quot;: &quot;${createTime}T08:09:33Z&quot;,&#xd;
			&quot;status&quot;: 1000&#xd;
		}],&#xd;
		&quot;totalAmount&quot;: 1,&#xd;
		&quot;proportion&quot;: 100&#xd;
	}],&#xd;
	&quot;lastModifiedDate&quot;: &quot;${createTime}T08:32:50Z&quot;,&#xd;
	&quot;needApproval&quot;: false,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;overtimeCount&quot;: 0,&#xd;
	&quot;personalPaymentAmount&quot;: 0,&#xd;
	&quot;personalPaymentBaseAmount&quot;: 0,&#xd;
	&quot;printable&quot;: true,&#xd;
	&quot;realPaymentAmount&quot;: 0,&#xd;
	&quot;realPaymentBaseAmount&quot;: 0,&#xd;
	&quot;rejectType&quot;: 1000,&#xd;
	&quot;remark&quot;: &quot;日常报销&quot;,&#xd;
	&quot;reviewedFlag&quot;: false,&#xd;
	&quot;splitStatus&quot;: 0,&#xd;
	&quot;status&quot;: 1001,&#xd;
	&quot;statusView&quot;: 1001,&#xd;
	&quot;subCompanyOID&quot;: &quot;${departmentOID}&quot;,&#xd;
	&quot;title&quot;: &quot;报销单添加费用测试&quot;,&#xd;
	&quot;totalAmount&quot;: 1,&#xd;
	&quot;travelStandardValid&quot;: 1001,&#xd;
	&quot;travelStandardWarning&quot;: false,&#xd;
	&quot;type&quot;: 1001,&#xd;
	&quot;withReceiptAmount&quot;: 1,&#xd;
	&quot;withoutReceiptAmount&quot;: 0,&#xd;
	&quot;writeoffFlag&quot;: false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/expense/reports/custom/form/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="331686410">{&quot;passFlag&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用01_报销单提交(交通)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${AllDetal}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/expense/reports/custom/form/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1235267225">${SuccessSubmit}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用01_报销单撤销(交通)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${expenseReportOID}&quot;,&quot;entityType&quot;:1002}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/approvals/withdraw</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1849896742">&quot;successNum&quot;:1,&quot;failNum&quot;:0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用01_退出登录 " enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="新建费用报销单(机票)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1525339456000</longProp>
        <longProp name="ThreadGroup.end_time">1525339456000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="918312701">用户信息</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="获取登录token不成功，再次获取" enabled="true">
          <stringProp name="IfController.condition">&quot;${accessToken}&quot; ==&quot;&quot; || &quot;${accessToken}&quot; ==undefined</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="918312701">用户信息</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用02_获取公司信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/my/companies</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取setOfBooksId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">setOfBooksId;gongsiName</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.setOfBooksId;$.name</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用02_获取所有类型的单据(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/company/my/available/all/?formType=102</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取dailyFormOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">dailyFormOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.formName==&quot;日常报销单&quot;)].formOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用02_获取表单里面的字段(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用02_报销单创建(机票)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
	&quot;id&quot;: 10952,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: null,&#xd;
	&quot;formType&quot;: 3001,&#xd;
	&quot;asSystem&quot;: false,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T04:34:21Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: null,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1001,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: null,&#xd;
	&quot;companyOID&quot;: &quot;${companyOID}&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;form.description&quot;: &quot;{\&quot;enable\&quot;:false,\&quot;en\&quot;:{\&quot;title\&quot;:\&quot;caption\&quot;,\&quot;content\&quot;:\&quot;content\&quot;},\&quot;zh_cn\&quot;:{\&quot;title\&quot;:\&quot;说明文字\&quot;,\&quot;content\&quot;:\&quot;描述内容\&quot;}}&quot;,&#xd;
		&quot;enableAddSignForSubmitter&quot;: &quot;false&quot;,&#xd;
		&quot;enableAddSign&quot;: &quot;true&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: &quot;${tenantId}&quot;,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${departmentOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;报销单添加费用测试&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/draft</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取businessCode" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">businessCode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;businessCode&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取expenseReportOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseReportOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseReportOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取applicantOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">applicantOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOIDs" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOIDs</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;approverOIDs&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取bizOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">bizOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;bizOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用02_获取费用类型" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}/selected/expense/types?userOID=${userOID}&amp;createManually=true</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1930901582">&quot;entityOID&quot;:&quot;${dailyFormOID}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取机票expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">air_expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;机票&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取机票expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">air_expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;机票&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取机票expenseTypeCategoryOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">air_expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;机票&quot;)].expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取机票-出发地fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">air_departure_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;机票&quot;)].fields.[?(@.name==&quot;出发地&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取机票-目的地fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">air_destination_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;机票&quot;)].fields.[?(@.name==&quot;目的地&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取机票iconURL" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">iconURL</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;机票&quot;)].iconURL</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].fields.[?(@.name==&quot;城市&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用02_创建费用1(机票)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;304762&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;8c563298-ccd1-4ea2-8248-2c73e3d17a69&quot;,&#xd;
		&quot;fileName&quot;: &quot;Desert.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/8c563298-ccd1-4ea2-8248-2c73e3d17a69-Desert.jpg?Expires=1525676901&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=yKI3qIOyOxR70ntKKI4dn0Anz7c=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/8c563298-ccd1-4ea2-8248-2c73e3d17a69-Desert.jpg?Expires=1525676901&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=yKI3qIOyOxR70ntKKI4dn0Anz7c=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/8c563298-ccd1-4ea2-8248-2c73e3d17a69-Desert.jpg?Expires=1525676901&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=IxFaSLrBdjsT8fKO/GQPcz6m8QI=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/8c563298-ccd1-4ea2-8248-2c73e3d17a69-Desert.jpg?Expires=1525676901&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=fYgTMW5CItVgGN9wVhq0Af+S470=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 845941,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:08:21Z&quot;,&#xd;
		&quot;bytes&quot;: null,&#xd;
		&quot;checked&quot;: null,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;机票&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${air_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${air_expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;airTickets&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.air.tickets&quot;,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;amount&quot;: 800,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T07:59:37Z&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;报销单测试机票费用&quot;,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 111,&#xd;
		&quot;name&quot;: &quot;出发地&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;西安咸阳国际机场\&quot;,\&quot;longitude\&quot;:108.761268,\&quot;latitude\&quot;:34.435149}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;departure.location&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${air_departure_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 112,&#xd;
		&quot;name&quot;: &quot;目的地&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;上海虹桥国际机场\&quot;,\&quot;longitude\&quot;:121.3376,\&quot;latitude\&quot;:31.19668}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;destination.location&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${air_destination_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v5/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1254192484">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用02_获取报销单详情(机票)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1947514396">&quot;businessCode&quot;:&quot;${businessCode}&quot;</stringProp>
              <stringProp name="402202526">&quot;currencyCode&quot;:&quot;CNY&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取机票invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">air_invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;机票&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取机票expenseReportInvoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">air_expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[0].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">AllDetal</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用02_修改费用1(机票)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceOID&quot;: &quot;${air_invoiceOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${air_expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${air_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;机票&quot;,&#xd;
	&quot;crossCheckStatus&quot;: null,&#xd;
	&quot;expenseTypeKey&quot;: null,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;airTickets&quot;,&#xd;
	&quot;phoneNumber&quot;: null,&#xd;
	&quot;email&quot;: null,&#xd;
	&quot;expenseTypeIconURL&quot;: &quot;${iconURL}&quot;,&#xd;
	&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
	&quot;expenseTypeCategoryDTO&quot;: {&#xd;
		&quot;expenseTypeCategoryOID&quot;: &quot;${air_expenseTypeCategoryOID}&quot;,&#xd;
		&quot;name&quot;: &quot;费用类型&quot;,&#xd;
		&quot;code&quot;: null&#xd;
	},&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: 1,&#xd;
	&quot;originalAmount&quot;: 1,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;mobile&quot;: null,&#xd;
	&quot;employeeId&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;name&quot;: &quot;出发地&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;西安咸阳国际机场\&quot;,\&quot;longitude\&quot;:108.761268287,\&quot;latitude\&quot;:34.435148685}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;departure.location&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${air_departure_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;name&quot;: &quot;目的地&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;上海虹桥国际机场\&quot;,\&quot;longitude\&quot;:121.3376,\&quot;latitude\&quot;:31.19668}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;destination.location&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${air_destination_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
	&quot;comment&quot;: &quot;修改费用测试&quot;,&#xd;
	&quot;warning&quot;: &quot;&quot;,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}&quot;,&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;276224&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;8c563298-ccd1-4ea2-8248-2c73e3d17a69&quot;,&#xd;
		&quot;fileName&quot;: &quot;Desert.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/8c563298-ccd1-4ea2-8248-2c73e3d17a69-Desert.jpg?Expires=1525677404&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=cAfDmEiN8x6aABYw/m5PSy/Xmaw=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/8c563298-ccd1-4ea2-8248-2c73e3d17a69-Desert.jpg?Expires=1525677404&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=cAfDmEiN8x6aABYw/m5PSy/Xmaw=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/8c563298-ccd1-4ea2-8248-2c73e3d17a69-Desert.jpg?Expires=1525677404&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=3LIffhR2YQozvVNZNA1X/wp9f+A=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/8c563298-ccd1-4ea2-8248-2c73e3d17a69-Desert.jpg?Expires=1525677404&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=VG41DFTgj7Nhl7Li7UkGvEUSLl8=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 845941,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:08:21Z&quot;,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: null,&#xd;
	&quot;createTime&quot;: &quot;${createTime}T06:16:34Z&quot;,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;approverId&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;approvalOperates&quot;: null,&#xd;
	&quot;approver&quot;: null,&#xd;
	&quot;referenceId&quot;: null,&#xd;
	&quot;unitPrice&quot;: null,&#xd;
	&quot;number&quot;: null,&#xd;
	&quot;receiptFailType&quot;: null,&#xd;
	&quot;receiptFailReason&quot;: null,&#xd;
	&quot;valid&quot;: false,&#xd;
	&quot;receiptID&quot;: null,&#xd;
	&quot;cardSignType&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;receiptGoodsID&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;invoiceLabelDTOS&quot;: [],&#xd;
	&quot;invoiceLabels&quot;: [{&#xd;
		&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
		&quot;name&quot;: &quot;公司&quot;,&#xd;
		&quot;level&quot;: &quot;INFO&quot;,&#xd;
		&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
		&quot;toast&quot;: null,&#xd;
		&quot;category&quot;: null,&#xd;
		&quot;oldLabel&quot;: false&#xd;
	}],&#xd;
	&quot;companyOID&quot;: null,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;source&quot;: null,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;checked&quot;: null,&#xd;
	&quot;createInvoice&quot;: true,&#xd;
	&quot;checkWarning&quot;: null,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;digitalInvoiceId&quot;: null,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;originalActualCurrencyRate&quot;: 1,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;actualCurrencyAmount&quot;: 1,&#xd;
	&quot;baseAmount&quot;: 1,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;flightNo&quot;: null,&#xd;
	&quot;apportionUsed&quot;: false,&#xd;
	&quot;expenseApportion&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;amountChanged&quot;: null,&#xd;
	&quot;approvalStatus&quot;: null,&#xd;
	&quot;bankTransactionID&quot;: null,&#xd;
	&quot;expenseCreatedType&quot;: null,&#xd;
	&quot;overDue&quot;: null,&#xd;
	&quot;bankTransactionDetail&quot;: null,&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;subsidyRepeatedFlag&quot;: false,&#xd;
	&quot;orderAmount&quot;: 1,&#xd;
	&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
	&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
	&quot;receiptedStatus&quot;: 0,&#xd;
	&quot;stringCol1&quot;: &quot;{\&quot;address\&quot;:\&quot;西安咸阳国际机场\&quot;,\&quot;longitude\&quot;:108.761268287,\&quot;latitude\&quot;:34.435148685}&quot;,&#xd;
	&quot;stringCol2&quot;: null,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;stringCol3&quot;: null,&#xd;
	&quot;status&quot;: 1000,&#xd;
	&quot;index&quot;: 1,&#xd;
	&quot;preCreatedDate&quot;: &quot;${createTime}T16:00:00Z&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="193391358">success&quot;:true,&quot;code&quot;:&quot;0000</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用02_创建费用2(机票)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;304762&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;8c563298-ccd1-4ea2-8248-2c73e3d17a69&quot;,&#xd;
		&quot;fileName&quot;: &quot;Desert.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/8c563298-ccd1-4ea2-8248-2c73e3d17a69-Desert.jpg?Expires=1525676901&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=yKI3qIOyOxR70ntKKI4dn0Anz7c=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/8c563298-ccd1-4ea2-8248-2c73e3d17a69-Desert.jpg?Expires=1525676901&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=yKI3qIOyOxR70ntKKI4dn0Anz7c=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/8c563298-ccd1-4ea2-8248-2c73e3d17a69-Desert.jpg?Expires=1525676901&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=IxFaSLrBdjsT8fKO/GQPcz6m8QI=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/8c563298-ccd1-4ea2-8248-2c73e3d17a69-Desert.jpg?Expires=1525676901&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=fYgTMW5CItVgGN9wVhq0Af+S470=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 845941,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:08:21Z&quot;,&#xd;
		&quot;bytes&quot;: null,&#xd;
		&quot;checked&quot;: null,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;机票&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${air_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${air_expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;airTickets&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.air.tickets&quot;,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;amount&quot;: 900,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T07:59:37Z&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;报销单测试机票费用&quot;,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 111,&#xd;
		&quot;name&quot;: &quot;出发地&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;西安咸阳国际机场\&quot;,\&quot;longitude\&quot;:108.761268,\&quot;latitude\&quot;:34.435149}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;departure.location&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${air_departure_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 112,&#xd;
		&quot;name&quot;: &quot;目的地&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;上海虹桥国际机场\&quot;,\&quot;longitude\&quot;:121.3376,\&quot;latitude\&quot;:31.19668}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;destination.location&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${air_destination_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v5/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1254192484">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用02_获取报销单费用详情(快递)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_invoiceOID;alldata</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;机票&quot;)].invoiceOID;$</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用02_费用2删除(机票)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/remove/invoice/${expenseReportOID}/${express_invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用02_删除账本里费用2(机票)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoice/batch?invoiceOIDs=${express_invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用02_计算费用合计(机票)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&quot;${air_invoiceOID}&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoices/summary/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1978368329">baseCompanyPaymentSum&quot;:0.0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单详情" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="594935571">&quot;businessCode&quot;</stringProp>
              <stringProp name="1074092386">&quot;currencyCode&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="需要保存的报销单信息" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">draft;businessCode</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows;$.rows.businessCode</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL;NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取费用信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows.expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;expenseReportInvoices&quot;);
String detal = vars.get(&quot;draft&quot;);


JSONArray expenseReportInvoices = JSON.parseArray(json);
JSONObject draft = JSON.parseObject(detal);
draft.put(&quot;expenseReportInvoices&quot;,expenseReportInvoices);
String str =draft.toString();
vars.put(&quot;draft&quot;,str);


</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交报销单" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${draft}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1297119259">&quot;passFlag&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="拿到提交响应" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">checkResultList</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.checkResultList[0].externalPropertyName</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="报销单提交(机票)" enabled="true">
          <stringProp name="IfController.condition">&quot;${checkResultList}&quot;  !=&quot;null&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="00再次提交报销单" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${AllDetalNew2}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1235267225">${SuccessSubmit}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="加强制提交" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;draft&quot;);

json = json.replaceAll(&quot;ignoreBudgetWarningFlag\&quot;:false&quot;,&quot;ignoreBudgetWarningFlag\&quot;:true&quot;);
vars.put(&quot;AllDetalNew2&quot;,json);

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单撤销(机票)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${expenseReportOID}&quot;,&quot;entityType&quot;:1002}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/approvals/withdraw</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1849896742">&quot;successNum&quot;:1,&quot;failNum&quot;:0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="新建费用报销单(大巴)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1525339456000</longProp>
        <longProp name="ThreadGroup.end_time">1525339456000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="918312701">用户信息</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="获取登录token不成功，再次获取" enabled="true">
          <stringProp name="IfController.condition">&quot;${accessToken}&quot; ==&quot;&quot; || &quot;${accessToken}&quot; ==undefined</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="918312701">用户信息</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用03_获取公司信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/my/companies</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取setOfBooksId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">setOfBooksId;gongsiName</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.setOfBooksId;$.name</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用03_获取所有类型的单据(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/company/my/available/all/?formType=102</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取dailyFormOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">dailyFormOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.formName==&quot;日常报销单&quot;)].formOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用03_获取表单里面的字段(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用03_报销单创建(大巴)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
	&quot;id&quot;: 10952,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: null,&#xd;
	&quot;formType&quot;: 3001,&#xd;
	&quot;asSystem&quot;: false,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T04:34:21Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: null,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1001,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: null,&#xd;
	&quot;companyOID&quot;: &quot;${companyOID}&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;form.description&quot;: &quot;{\&quot;enable\&quot;:false,\&quot;en\&quot;:{\&quot;title\&quot;:\&quot;caption\&quot;,\&quot;content\&quot;:\&quot;content\&quot;},\&quot;zh_cn\&quot;:{\&quot;title\&quot;:\&quot;说明文字\&quot;,\&quot;content\&quot;:\&quot;描述内容\&quot;}}&quot;,&#xd;
		&quot;enableAddSignForSubmitter&quot;: &quot;false&quot;,&#xd;
		&quot;enableAddSign&quot;: &quot;true&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: &quot;${tenantId}&quot;,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${departmentOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;报销单添加费用测试&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/draft</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取businessCode" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">businessCode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;businessCode&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取expenseReportOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseReportOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseReportOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取applicantOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">applicantOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOIDs" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOIDs</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;approverOIDs&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取bizOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">bizOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;bizOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用03_获取费用类型" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}/selected/expense/types?userOID=${userOID}&amp;createManually=true</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1930901582">&quot;entityOID&quot;:&quot;${dailyFormOID}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取大巴expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">coach_expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;大巴&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取大巴expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">coach_expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;大巴&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取大巴expenseTypeCategoryOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">coach_expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;大巴&quot;)].expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取大巴-出发地fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">coach_departure_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;大巴&quot;)].fields.[?(@.name==&quot;出发地&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取大巴-目的地fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">coach_destination_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;大巴&quot;)].fields.[?(@.name==&quot;目的地&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取大巴iconURL" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">iconURL</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;大巴&quot;)].iconURL</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_expenseTypeOID;id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].expenseTypeOID;$..[?(@.name==&quot;快递&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].fields.[?(@.name==&quot;城市&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用03_创建费用1(大巴)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;304851&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;050f5f91-f359-43e7-b48b-21094facfb12&quot;,&#xd;
		&quot;fileName&quot;: &quot;Tulips.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/050f5f91-f359-43e7-b48b-21094facfb12-Tulips.jpg?Expires=1525679120&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=I1UfSvcMfKFpqZBEWJl2WqlekzY=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/050f5f91-f359-43e7-b48b-21094facfb12-Tulips.jpg?Expires=1525679120&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=I1UfSvcMfKFpqZBEWJl2WqlekzY=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/050f5f91-f359-43e7-b48b-21094facfb12-Tulips.jpg?Expires=1525679120&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=s4GAMXKFTU36gm94TObbY36iwMw=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/050f5f91-f359-43e7-b48b-21094facfb12-Tulips.jpg?Expires=1525679120&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=a8s5II5xT3ch02sYAEcz26oQrUs=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 620888,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:45:20Z&quot;,&#xd;
		&quot;bytes&quot;: null,&#xd;
		&quot;checked&quot;: null,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;大巴&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${coach_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${coach_expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;coach&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.coach&quot;,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;amount&quot;: 90,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T09:58:38Z&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;大巴费报销&quot;,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 111,&#xd;
		&quot;name&quot;: &quot;出发地&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;华为西安研究所\&quot;,\&quot;longitude\&quot;:108.83902,\&quot;latitude\&quot;:34.19428}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;departure.location&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${coach_departure_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 112,&#xd;
		&quot;name&quot;: &quot;目的地&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;西安环普科技产业园\&quot;,\&quot;longitude\&quot;:108.84068,\&quot;latitude\&quot;:34.20974}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;destination.location&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${coach_destination_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1629056898">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用03_获取报销单详情(大巴)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1947514396">&quot;businessCode&quot;:&quot;${businessCode}&quot;</stringProp>
              <stringProp name="402202526">&quot;currencyCode&quot;:&quot;CNY&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取大巴invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">coach_invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;大巴&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取大巴expenseReportInvoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">coach_expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[0].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用03_修改费用1(大巴)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceOID&quot;: &quot;${coach_invoiceOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${coach_expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${coach_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;大巴&quot;,&#xd;
	&quot;crossCheckStatus&quot;: null,&#xd;
	&quot;expenseTypeKey&quot;: null,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;coach&quot;,&#xd;
	&quot;phoneNumber&quot;: null,&#xd;
	&quot;email&quot;: null,&#xd;
	&quot;expenseTypeIconURL&quot;: &quot;${iconURL}&quot;,&#xd;
	&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
	&quot;expenseTypeCategoryDTO&quot;: {&#xd;
		&quot;expenseTypeCategoryOID&quot;: &quot;${coach_expenseTypeCategoryOID}&quot;,&#xd;
		&quot;name&quot;: &quot;费用类型&quot;,&#xd;
		&quot;code&quot;: null&#xd;
	},&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: 1,&#xd;
	&quot;originalAmount&quot;: 1,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;mobile&quot;: null,&#xd;
	&quot;employeeId&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;name&quot;: &quot;出发地&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;华为西安研究所\&quot;,\&quot;longitude\&quot;:108.83902,\&quot;latitude\&quot;:34.19428}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;departure.location&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${coach_departure_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;name&quot;: &quot;目的地&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;西安环普科技产业园\&quot;,\&quot;longitude\&quot;:108.84068,\&quot;latitude\&quot;:34.20974}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;destination.location&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${coach_destination_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
	&quot;comment&quot;: &quot;修改费用测试&quot;,&#xd;
	&quot;warning&quot;: &quot;&quot;,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}&quot;,&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;276230&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;050f5f91-f359-43e7-b48b-21094facfb12&quot;,&#xd;
		&quot;fileName&quot;: &quot;Tulips.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/050f5f91-f359-43e7-b48b-21094facfb12-Tulips.jpg?Expires=1525679180&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=NX7MfDiGPOF3SdAL7Wn7JKkM4ug=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/050f5f91-f359-43e7-b48b-21094facfb12-Tulips.jpg?Expires=1525679180&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=NX7MfDiGPOF3SdAL7Wn7JKkM4ug=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/050f5f91-f359-43e7-b48b-21094facfb12-Tulips.jpg?Expires=1525679180&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=kN1TEjs3mpmcUehlpQ785spJetE=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/050f5f91-f359-43e7-b48b-21094facfb12-Tulips.jpg?Expires=1525679180&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=GBPmIJAIhkW7EOPNylrfEqVgGVc=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 620888,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:45:20Z&quot;,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: null,&#xd;
	&quot;createTime&quot;: &quot;${createTime}T06:46:20Z&quot;,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;approverId&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;approvalOperates&quot;: null,&#xd;
	&quot;approver&quot;: null,&#xd;
	&quot;referenceId&quot;: null,&#xd;
	&quot;unitPrice&quot;: null,&#xd;
	&quot;number&quot;: null,&#xd;
	&quot;receiptFailType&quot;: null,&#xd;
	&quot;receiptFailReason&quot;: null,&#xd;
	&quot;valid&quot;: false,&#xd;
	&quot;receiptID&quot;: null,&#xd;
	&quot;cardSignType&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;receiptGoodsID&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;invoiceLabelDTOS&quot;: [],&#xd;
	&quot;invoiceLabels&quot;: [{&#xd;
		&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
		&quot;name&quot;: &quot;公司&quot;,&#xd;
		&quot;level&quot;: &quot;INFO&quot;,&#xd;
		&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
		&quot;toast&quot;: null,&#xd;
		&quot;category&quot;: null,&#xd;
		&quot;oldLabel&quot;: false&#xd;
	}],&#xd;
	&quot;companyOID&quot;: null,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;source&quot;: null,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;checked&quot;: null,&#xd;
	&quot;createInvoice&quot;: true,&#xd;
	&quot;checkWarning&quot;: null,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;digitalInvoiceId&quot;: null,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;originalActualCurrencyRate&quot;: 1,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;actualCurrencyAmount&quot;: 1,&#xd;
	&quot;baseAmount&quot;: 1,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;flightNo&quot;: null,&#xd;
	&quot;apportionUsed&quot;: false,&#xd;
	&quot;expenseApportion&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;amountChanged&quot;: null,&#xd;
	&quot;approvalStatus&quot;: null,&#xd;
	&quot;bankTransactionID&quot;: null,&#xd;
	&quot;expenseCreatedType&quot;: null,&#xd;
	&quot;overDue&quot;: null,&#xd;
	&quot;bankTransactionDetail&quot;: null,&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;subsidyRepeatedFlag&quot;: false,&#xd;
	&quot;orderAmount&quot;: 1,&#xd;
	&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
	&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
	&quot;receiptedStatus&quot;: 0,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;stringCol1&quot;: &quot;{\&quot;address\&quot;:\&quot;华为西安研究所\&quot;,\&quot;longitude\&quot;:108.83902,\&quot;latitude\&quot;:34.19428}&quot;,&#xd;
	&quot;stringCol2&quot;: null,&#xd;
	&quot;stringCol3&quot;: null,&#xd;
	&quot;status&quot;: 1000,&#xd;
	&quot;index&quot;: 1,&#xd;
	&quot;preCreatedDate&quot;: &quot;${createTime}T16:00:00Z&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1629056898">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用02_创建费用2(大巴)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;快递&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${express_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${id}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;express&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.express&quot;,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;amount&quot;: 100,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T08:19:53Z&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;办公用品报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 111,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${express_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-652290455">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用03_获取报销单详情(快递)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;快递&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">AllDetal</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用03_费用2删除(大巴)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/remove/invoice/${expenseReportOID}/${express_invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用03_删除账本里费用2(大巴)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoice/batch?invoiceOIDs=${express_invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单详情" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="594935571">&quot;businessCode&quot;</stringProp>
              <stringProp name="1074092386">&quot;currencyCode&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="需要保存的报销单信息" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">draft;businessCode</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows;$.rows.businessCode</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL;NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取费用信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows.expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;expenseReportInvoices&quot;);
String detal = vars.get(&quot;draft&quot;);


JSONArray expenseReportInvoices = JSON.parseArray(json);
JSONObject draft = JSON.parseObject(detal);
draft.put(&quot;expenseReportInvoices&quot;,expenseReportInvoices);
String str =draft.toString();
vars.put(&quot;draft&quot;,str);


</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交报销单" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${draft}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1297119259">&quot;passFlag&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="拿到提交响应" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">checkResultList</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.checkResultList[0].externalPropertyName</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="报销单提交(大巴)" enabled="true">
          <stringProp name="IfController.condition">&quot;${checkResultList}&quot;  !=&quot;null&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="00再次提交报销单" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${AllDetalNew2}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1235267225">${SuccessSubmit}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="加强制提交" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;draft&quot;);

json = json.replaceAll(&quot;ignoreBudgetWarningFlag\&quot;:false&quot;,&quot;ignoreBudgetWarningFlag\&quot;:true&quot;);
vars.put(&quot;AllDetalNew2&quot;,json);

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单撤销(大巴)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${expenseReportOID}&quot;,&quot;entityType&quot;:1002}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/approvals/withdraw</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1849896742">&quot;successNum&quot;:1,&quot;failNum&quot;:0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="新建费用报销单(火车)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1525339456000</longProp>
        <longProp name="ThreadGroup.end_time">1525339456000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="918312701">用户信息</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="获取登录token不成功，再次获取" enabled="true">
          <stringProp name="IfController.condition">&quot;${accessToken}&quot; ==&quot;&quot; || &quot;${accessToken}&quot; ==undefined</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="918312701">用户信息</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用04_获取公司信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/my/companies</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取setOfBooksId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">setOfBooksId;gongsiName</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.setOfBooksId;$.name</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用04_获取所有类型的单据(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/company/my/available/all/?formType=102</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取dailyFormOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">dailyFormOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.formName==&quot;日常报销单&quot;)].formOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用04_获取表单里面的字段(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用04_报销单创建(火车)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
	&quot;id&quot;: 10952,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: null,&#xd;
	&quot;formType&quot;: 3001,&#xd;
	&quot;asSystem&quot;: false,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T04:34:21Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: null,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1001,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: null,&#xd;
	&quot;companyOID&quot;: &quot;${companyOID}&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;form.description&quot;: &quot;{\&quot;enable\&quot;:false,\&quot;en\&quot;:{\&quot;title\&quot;:\&quot;caption\&quot;,\&quot;content\&quot;:\&quot;content\&quot;},\&quot;zh_cn\&quot;:{\&quot;title\&quot;:\&quot;说明文字\&quot;,\&quot;content\&quot;:\&quot;描述内容\&quot;}}&quot;,&#xd;
		&quot;enableAddSignForSubmitter&quot;: &quot;false&quot;,&#xd;
		&quot;enableAddSign&quot;: &quot;true&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: &quot;${tenantId}&quot;,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${departmentOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;报销单添加费用测试&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/draft</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取businessCode" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">businessCode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;businessCode&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取expenseReportOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseReportOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseReportOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取applicantOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">applicantOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOIDs" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOIDs</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;approverOIDs&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取bizOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">bizOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;bizOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用04_获取费用类型" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}/selected/expense/types?userOID=${userOID}&amp;createManually=true</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1930901582">&quot;entityOID&quot;:&quot;${dailyFormOID}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取火车expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">travel_expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;火车&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取火车expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">travel_expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;火车&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取火车expenseTypeCategoryOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">travel_expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;火车&quot;)].expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取火车-出发地fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">travel_departure_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;火车&quot;)].fields.[?(@.name==&quot;出发地&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取火车-目的地fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">travel_destination_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;火车&quot;)].fields.[?(@.name==&quot;目的地&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取火车iconURL" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">iconURL</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;火车&quot;)].iconURL</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_expenseTypeOID;id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].expenseTypeOID;$..[?(@.name==&quot;快递&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].fields.[?(@.name==&quot;城市&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用04_创建费用1(火车)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;304864&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;a4e68b00-95a4-48a3-8c16-af64b20fe8d4&quot;,&#xd;
		&quot;fileName&quot;: &quot;Desert.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/a4e68b00-95a4-48a3-8c16-af64b20fe8d4-Desert.jpg?Expires=1525687647&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=yn2HWHFhU6D0AYdXeVJ19FsFXuw=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/a4e68b00-95a4-48a3-8c16-af64b20fe8d4-Desert.jpg?Expires=1525687647&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=yn2HWHFhU6D0AYdXeVJ19FsFXuw=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/a4e68b00-95a4-48a3-8c16-af64b20fe8d4-Desert.jpg?Expires=1525687647&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=LKJFXMTGm0Q3Q2edfxXZ6gZi0b0=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/a4e68b00-95a4-48a3-8c16-af64b20fe8d4-Desert.jpg?Expires=1525687647&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=E4QMYSPbb5dA13+WnBzgprxC958=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 845941,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T09:07:27Z&quot;,&#xd;
		&quot;bytes&quot;: null,&#xd;
		&quot;checked&quot;: null,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;火车&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${travel_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${travel_expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;travel&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.travel&quot;,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;amount&quot;: 200,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T10:26:25Z&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;火车费报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 111,&#xd;
		&quot;name&quot;: &quot;出发地&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;西安火车站\&quot;,\&quot;longitude\&quot;:108.962682113,\&quot;latitude\&quot;:34.277386079}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;departure.location&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${travel_departure_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 112,&#xd;
		&quot;name&quot;: &quot;目的地&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;上海火车站[地铁站]\&quot;,\&quot;longitude\&quot;:121.455716,\&quot;latitude\&quot;:31.247401}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;destination.location&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${travel_destination_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1254192484">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用04_获取报销单详情(火车)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1947514396">&quot;businessCode&quot;:&quot;${businessCode}&quot;</stringProp>
              <stringProp name="402202526">&quot;currencyCode&quot;:&quot;CNY&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取火车invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">travel_invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;火车&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取火车expenseReportInvoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">travel_expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[0].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">AllDetal</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用04_修改费用1(火车)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceOID&quot;: &quot;${travel_invoiceOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${travel_expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${travel_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;火车&quot;,&#xd;
	&quot;crossCheckStatus&quot;: null,&#xd;
	&quot;expenseTypeKey&quot;: null,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;travel&quot;,&#xd;
	&quot;phoneNumber&quot;: null,&#xd;
	&quot;email&quot;: null,&#xd;
	&quot;expenseTypeIconURL&quot;: &quot;${iconURL}&quot;,&#xd;
	&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
	&quot;expenseTypeCategoryDTO&quot;: {&#xd;
		&quot;expenseTypeCategoryOID&quot;: &quot;${travel_expenseTypeCategoryOID}&quot;,&#xd;
		&quot;name&quot;: &quot;费用类型&quot;,&#xd;
		&quot;code&quot;: null&#xd;
	},&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: 1,&#xd;
	&quot;originalAmount&quot;: 1,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;mobile&quot;: null,&#xd;
	&quot;employeeId&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;name&quot;: &quot;出发地&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;西安火车站\&quot;,\&quot;longitude\&quot;:108.962682113,\&quot;latitude\&quot;:34.277386079}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;departure.location&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${travel_departure_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;name&quot;: &quot;目的地&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;上海火车站[地铁站]\&quot;,\&quot;longitude\&quot;:121.455716,\&quot;latitude\&quot;:31.247401}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;destination.location&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${travel_destination_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
	&quot;comment&quot;: &quot;修改费用测试&quot;,&#xd;
	&quot;warning&quot;: &quot;&quot;,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}&quot;,&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;276299&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;a4e68b00-95a4-48a3-8c16-af64b20fe8d4&quot;,&#xd;
		&quot;fileName&quot;: &quot;Desert.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/a4e68b00-95a4-48a3-8c16-af64b20fe8d4-Desert.jpg?Expires=1525687674&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=NPIfvsckZUGi0UfPVzHPrpbKT/s=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/a4e68b00-95a4-48a3-8c16-af64b20fe8d4-Desert.jpg?Expires=1525687674&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=NPIfvsckZUGi0UfPVzHPrpbKT/s=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/a4e68b00-95a4-48a3-8c16-af64b20fe8d4-Desert.jpg?Expires=1525687674&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=QnVCFOwIWBqlMobOREY0zLVq3IA=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/a4e68b00-95a4-48a3-8c16-af64b20fe8d4-Desert.jpg?Expires=1525687674&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=TSEQKy4Sti+hwnRlO9yuB4zmYSw=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 845941,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T09:07:27Z&quot;,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: null,&#xd;
	&quot;createTime&quot;: &quot;${createTime}T09:07:53Z&quot;,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;approverId&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;approvalOperates&quot;: null,&#xd;
	&quot;approver&quot;: null,&#xd;
	&quot;referenceId&quot;: null,&#xd;
	&quot;unitPrice&quot;: null,&#xd;
	&quot;number&quot;: null,&#xd;
	&quot;receiptFailType&quot;: null,&#xd;
	&quot;receiptFailReason&quot;: null,&#xd;
	&quot;valid&quot;: false,&#xd;
	&quot;receiptID&quot;: null,&#xd;
	&quot;cardSignType&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;receiptGoodsID&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;invoiceLabelDTOS&quot;: [],&#xd;
	&quot;invoiceLabels&quot;: [{&#xd;
		&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
		&quot;name&quot;: &quot;公司&quot;,&#xd;
		&quot;level&quot;: &quot;INFO&quot;,&#xd;
		&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
		&quot;toast&quot;: null,&#xd;
		&quot;category&quot;: null,&#xd;
		&quot;oldLabel&quot;: false&#xd;
	}],&#xd;
	&quot;companyOID&quot;: null,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;source&quot;: null,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;checked&quot;: null,&#xd;
	&quot;createInvoice&quot;: true,&#xd;
	&quot;checkWarning&quot;: null,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;digitalInvoiceId&quot;: null,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;originalActualCurrencyRate&quot;: 1,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;actualCurrencyAmount&quot;: 1,&#xd;
	&quot;baseAmount&quot;: 1,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;flightNo&quot;: null,&#xd;
	&quot;apportionUsed&quot;: false,&#xd;
	&quot;expenseApportion&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;amountChanged&quot;: null,&#xd;
	&quot;approvalStatus&quot;: null,&#xd;
	&quot;bankTransactionID&quot;: null,&#xd;
	&quot;expenseCreatedType&quot;: null,&#xd;
	&quot;overDue&quot;: null,&#xd;
	&quot;bankTransactionDetail&quot;: null,&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;subsidyRepeatedFlag&quot;: false,&#xd;
	&quot;orderAmount&quot;: 1,&#xd;
	&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
	&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
	&quot;receiptedStatus&quot;: 0,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;stringCol1&quot;: &quot;{\&quot;address\&quot;:\&quot;西安火车站\&quot;,\&quot;longitude\&quot;:108.962682113,\&quot;latitude\&quot;:34.277386079}&quot;,&#xd;
	&quot;stringCol2&quot;: null,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;stringCol3&quot;: null,&#xd;
	&quot;status&quot;: 1000,&#xd;
	&quot;index&quot;: 1,&#xd;
	&quot;preCreatedDate&quot;: &quot;${createTime}T16:00:00Z&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1629056898">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用02_创建费用2(火车)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;快递&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${express_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${id}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;express&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.express&quot;,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;amount&quot;: 100,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T08:19:53Z&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;办公用品报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 111,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${express_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1254192484">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用04_获取报销单详情(快递)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;快递&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用04_费用2删除(火车)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/remove/invoice/${expenseReportOID}/${express_invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用04_删除账本里费用2(火车)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoice/batch?invoiceOIDs=${express_invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用04_计算费用合计(火车)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&quot;${travel_invoiceOID}&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoices/summary/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1978369290">baseCompanyPaymentSum&quot;:1.0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单提交(火车)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${AllDetal}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1235267225">${SuccessSubmit}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单详情" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="594935571">&quot;businessCode&quot;</stringProp>
              <stringProp name="1074092386">&quot;currencyCode&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="需要保存的报销单信息" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">draft;businessCode</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows;$.rows.businessCode</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL;NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取费用信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows.expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;expenseReportInvoices&quot;);
String detal = vars.get(&quot;draft&quot;);


JSONArray expenseReportInvoices = JSON.parseArray(json);
JSONObject draft = JSON.parseObject(detal);
draft.put(&quot;expenseReportInvoices&quot;,expenseReportInvoices);
String str =draft.toString();
vars.put(&quot;draft&quot;,str);


</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交报销单" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${draft}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1297119259">&quot;passFlag&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="拿到提交响应" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">checkResultList</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.checkResultList[0].externalPropertyName</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="报销单提交(大巴)" enabled="true">
          <stringProp name="IfController.condition">&quot;${checkResultList}&quot;  !=&quot;null&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="00再次提交报销单" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${AllDetalNew2}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1235267225">${SuccessSubmit}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="加强制提交" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;draft&quot;);

json = json.replaceAll(&quot;ignoreBudgetWarningFlag\&quot;:false&quot;,&quot;ignoreBudgetWarningFlag\&quot;:true&quot;);
vars.put(&quot;AllDetalNew2&quot;,json);

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单撤销(火车)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${expenseReportOID}&quot;,&quot;entityType&quot;:1002}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/approvals/withdraw</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1849896742">&quot;successNum&quot;:1,&quot;failNum&quot;:0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="新建费用报销单(餐饮)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1525339456000</longProp>
        <longProp name="ThreadGroup.end_time">1525339456000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="918312701">用户信息</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="获取登录token不成功，再次获取" enabled="true">
          <stringProp name="IfController.condition">&quot;${accessToken}&quot; ==&quot;&quot; || &quot;${accessToken}&quot; ==undefined</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="918312701">用户信息</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用05_获取公司信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/my/companies</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取setOfBooksId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">setOfBooksId;gongsiName</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.setOfBooksId;$.name</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用05_获取所有类型的单据(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/company/my/available/all/?formType=102</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取dailyFormOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">dailyFormOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.formName==&quot;日常报销单&quot;)].formOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用05_获取表单里面的字段(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用05_报销单创建(餐饮)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
	&quot;id&quot;: 10952,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: null,&#xd;
	&quot;formType&quot;: 3001,&#xd;
	&quot;asSystem&quot;: false,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T04:34:21Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: null,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1001,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: null,&#xd;
	&quot;companyOID&quot;: &quot;${companyOID}&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;form.description&quot;: &quot;{\&quot;enable\&quot;:false,\&quot;en\&quot;:{\&quot;title\&quot;:\&quot;caption\&quot;,\&quot;content\&quot;:\&quot;content\&quot;},\&quot;zh_cn\&quot;:{\&quot;title\&quot;:\&quot;说明文字\&quot;,\&quot;content\&quot;:\&quot;描述内容\&quot;}}&quot;,&#xd;
		&quot;enableAddSignForSubmitter&quot;: &quot;false&quot;,&#xd;
		&quot;enableAddSign&quot;: &quot;true&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: &quot;${tenantId}&quot;,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${departmentOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;报销单添加费用测试&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/draft</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取businessCode" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">businessCode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;businessCode&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取expenseReportOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseReportOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseReportOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取applicantOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">applicantOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOIDs" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOIDs</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;approverOIDs&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取bizOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">bizOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;bizOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用05_获取费用类型" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}/selected/expense/types?userOID=${userOID}&amp;createManually=true</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1930901582">&quot;entityOID&quot;:&quot;${dailyFormOID}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐饮expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">food_expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;餐饮&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐饮expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">food_expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;餐饮&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐饮expenseTypeCategoryOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">food_expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;餐饮&quot;)].expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐饮-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">food_city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;餐饮&quot;)].fields.[?(@.name==&quot;城市&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐饮-就餐地点fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">food_location_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;餐饮&quot;)].fields.[?(@.name==&quot;就餐地点&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐饮-人数fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">food_count_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;餐饮&quot;)].fields.[?(@.name==&quot;人数&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐饮-对象fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">food_person_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;餐饮&quot;)].fields.[?(@.name==&quot;对象&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐饮iconURL" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">iconURL</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;餐饮&quot;)].iconURL</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].fields.[?(@.name==&quot;城市&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_expenseTypeOID;id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].expenseTypeOID;$..[?(@.name==&quot;快递&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用05_创建费用1(餐饮)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;304868&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;19eb4ee5-5eeb-4488-8a8a-e6b5afbd690c&quot;,&#xd;
		&quot;fileName&quot;: &quot;Desert.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/19eb4ee5-5eeb-4488-8a8a-e6b5afbd690c-Desert.jpg?Expires=1525689923&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=83nWXjrUNQOSc0rBEzr8otGt/UQ=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/19eb4ee5-5eeb-4488-8a8a-e6b5afbd690c-Desert.jpg?Expires=1525689923&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=83nWXjrUNQOSc0rBEzr8otGt/UQ=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/19eb4ee5-5eeb-4488-8a8a-e6b5afbd690c-Desert.jpg?Expires=1525689923&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=8gItTv04Jmr0p4a0/kKFYkrSdG4=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/19eb4ee5-5eeb-4488-8a8a-e6b5afbd690c-Desert.jpg?Expires=1525689923&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=d6xkuezB4ojYvuaGkDVh0Lc2XUQ=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 845941,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T09:45:23Z&quot;,&#xd;
		&quot;bytes&quot;: null,&#xd;
		&quot;checked&quot;: null,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;餐饮&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${food_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${food_expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;foodbeverage&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.food.beverage&quot;,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;amount&quot;: 300,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T10:37:36Z&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;就餐费报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 111,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${food_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 112,&#xd;
		&quot;name&quot;: &quot;就餐地点&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;西安饭庄(锦业路店)\&quot;,\&quot;longitude\&quot;:108.87323,\&quot;latitude\&quot;:34.19258}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;location&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${food_location_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;LONG&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;LONG&quot;,&#xd;
		&quot;mappedColumnId&quot;: 101,&#xd;
		&quot;name&quot;: &quot;人数&quot;,&#xd;
		&quot;value&quot;: 3,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;head.count&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${food_count_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 113,&#xd;
		&quot;name&quot;: &quot;对象&quot;,&#xd;
		&quot;value&quot;: &quot;a,b,c&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;person&quot;,&#xd;
		&quot;sequence&quot;: 4,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${food_person_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1254192484">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用05_获取报销单详情(餐饮)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1947514396">&quot;businessCode&quot;:&quot;${businessCode}&quot;</stringProp>
              <stringProp name="402202526">&quot;currencyCode&quot;:&quot;CNY&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐饮invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">food_invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;餐饮&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐饮expenseReportInvoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">food_expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[0].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用05_修改费用1(餐饮)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceOID&quot;: &quot;${food_invoiceOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${food_expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${food_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;餐饮&quot;,&#xd;
	&quot;crossCheckStatus&quot;: null,&#xd;
	&quot;expenseTypeKey&quot;: null,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;foodbeverage&quot;,&#xd;
	&quot;phoneNumber&quot;: null,&#xd;
	&quot;email&quot;: null,&#xd;
	&quot;expenseTypeIconURL&quot;: &quot;${iconURL}&quot;,&#xd;
	&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
	&quot;expenseTypeCategoryDTO&quot;: {&#xd;
		&quot;expenseTypeCategoryOID&quot;: &quot;${food_expenseTypeCategoryOID}&quot;,&#xd;
		&quot;name&quot;: &quot;费用类型&quot;,&#xd;
		&quot;code&quot;: null&#xd;
	},&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: 1,&#xd;
	&quot;originalAmount&quot;: 1,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;mobile&quot;: null,&#xd;
	&quot;employeeId&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${food_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;name&quot;: &quot;就餐地点&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;西安饭庄(锦业路店)\&quot;,\&quot;longitude\&quot;:108.87323,\&quot;latitude\&quot;:34.19258}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;location&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${food_location_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;LONG&quot;,&#xd;
		&quot;name&quot;: &quot;人数&quot;,&#xd;
		&quot;value&quot;: &quot;3&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;head.count&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${food_count_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;对象&quot;,&#xd;
		&quot;value&quot;: &quot;a，b，c&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;person&quot;,&#xd;
		&quot;sequence&quot;: 4,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${food_person_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
	&quot;comment&quot;: &quot;修改费用测试&quot;,&#xd;
	&quot;warning&quot;: &quot;&quot;,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}&quot;,&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;276316&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;19eb4ee5-5eeb-4488-8a8a-e6b5afbd690c&quot;,&#xd;
		&quot;fileName&quot;: &quot;Desert.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/19eb4ee5-5eeb-4488-8a8a-e6b5afbd690c-Desert.jpg?Expires=1525690066&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=3oq/14qhpJe+Q1WgUjca9c9ssJ4=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/19eb4ee5-5eeb-4488-8a8a-e6b5afbd690c-Desert.jpg?Expires=1525690066&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=3oq/14qhpJe+Q1WgUjca9c9ssJ4=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/19eb4ee5-5eeb-4488-8a8a-e6b5afbd690c-Desert.jpg?Expires=1525690066&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=VRKF1zeWHdEt1rx6LJFnR2sxrv4=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/19eb4ee5-5eeb-4488-8a8a-e6b5afbd690c-Desert.jpg?Expires=1525690066&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=y+4xOXmS2kCQgxS22pITARD4a8U=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 845941,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T09:45:24Z&quot;,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: null,&#xd;
	&quot;createTime&quot;: &quot;${createTime}T09:47:44Z&quot;,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;approverId&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;approvalOperates&quot;: null,&#xd;
	&quot;approver&quot;: null,&#xd;
	&quot;referenceId&quot;: null,&#xd;
	&quot;unitPrice&quot;: null,&#xd;
	&quot;number&quot;: null,&#xd;
	&quot;receiptFailType&quot;: null,&#xd;
	&quot;receiptFailReason&quot;: null,&#xd;
	&quot;valid&quot;: false,&#xd;
	&quot;receiptID&quot;: null,&#xd;
	&quot;cardSignType&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;receiptGoodsID&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;invoiceLabelDTOS&quot;: [],&#xd;
	&quot;invoiceLabels&quot;: [{&#xd;
		&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
		&quot;name&quot;: &quot;公司&quot;,&#xd;
		&quot;level&quot;: &quot;INFO&quot;,&#xd;
		&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
		&quot;toast&quot;: null,&#xd;
		&quot;category&quot;: null,&#xd;
		&quot;oldLabel&quot;: false&#xd;
	}],&#xd;
	&quot;companyOID&quot;: null,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: null,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;source&quot;: null,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;checked&quot;: null,&#xd;
	&quot;createInvoice&quot;: true,&#xd;
	&quot;checkWarning&quot;: null,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;digitalInvoiceId&quot;: null,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;originalActualCurrencyRate&quot;: 1,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;actualCurrencyAmount&quot;: 1,&#xd;
	&quot;baseAmount&quot;: 1,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;flightNo&quot;: null,&#xd;
	&quot;apportionUsed&quot;: false,&#xd;
	&quot;expenseApportion&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;amountChanged&quot;: null,&#xd;
	&quot;approvalStatus&quot;: null,&#xd;
	&quot;bankTransactionID&quot;: null,&#xd;
	&quot;expenseCreatedType&quot;: null,&#xd;
	&quot;overDue&quot;: null,&#xd;
	&quot;bankTransactionDetail&quot;: null,&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;subsidyRepeatedFlag&quot;: false,&#xd;
	&quot;orderAmount&quot;: 1,&#xd;
	&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
	&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
	&quot;receiptedStatus&quot;: 0,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;stringCol1&quot;: &quot;西安&quot;,&#xd;
	&quot;stringCol2&quot;: null,&#xd;
	&quot;stringCol3&quot;: &quot;a，b，c&quot;,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;status&quot;: 1000,&#xd;
	&quot;index&quot;: 1,&#xd;
	&quot;preCreatedDate&quot;: &quot;${createTime}T16:00:00Z&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1629056898">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用02_创建费用2(餐饮)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;快递&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${express_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${id}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;express&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.express&quot;,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;amount&quot;: 100,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T08:19:53Z&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;办公用品报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 111,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${express_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1254192484">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用05_获取报销单详情(快递)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;快递&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">AllDetal</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用05_费用2删除(餐饮)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/remove/invoice/${expenseReportOID}/${express_invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用05_删除账本里费用2(餐饮)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoice/batch?invoiceOIDs=${express_invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用05_计算费用合计(餐饮)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&quot;${food_invoiceOID}&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoices/summary/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1978369290">baseCompanyPaymentSum&quot;:1.0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用05_报销单提交(餐饮)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${AllDetal}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1235267225">${SuccessSubmit}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单详情" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="594935571">&quot;businessCode&quot;</stringProp>
              <stringProp name="1074092386">&quot;currencyCode&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="需要保存的报销单信息" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">draft;businessCode</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows;$.rows.businessCode</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL;NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取费用信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows.expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;expenseReportInvoices&quot;);
String detal = vars.get(&quot;draft&quot;);


JSONArray expenseReportInvoices = JSON.parseArray(json);
JSONObject draft = JSON.parseObject(detal);
draft.put(&quot;expenseReportInvoices&quot;,expenseReportInvoices);
String str =draft.toString();
vars.put(&quot;draft&quot;,str);


</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交报销单" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${draft}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1297119259">&quot;passFlag&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="拿到提交响应" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">checkResultList</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.checkResultList[0].externalPropertyName</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="报销单提交(大巴)" enabled="true">
          <stringProp name="IfController.condition">&quot;${checkResultList}&quot;  !=&quot;null&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="00再次提交报销单" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${AllDetalNew2}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1235267225">${SuccessSubmit}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="加强制提交" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;draft&quot;);

json = json.replaceAll(&quot;ignoreBudgetWarningFlag\&quot;:false&quot;,&quot;ignoreBudgetWarningFlag\&quot;:true&quot;);
vars.put(&quot;AllDetalNew2&quot;,json);

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用05_报销单撤销(餐饮)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${expenseReportOID}&quot;,&quot;entityType&quot;:1002}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/approvals/withdraw</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1849896742">&quot;successNum&quot;:1,&quot;failNum&quot;:0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用05_退出登录 " enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="新建费用报销单(娱乐)" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1525339456000</longProp>
        <longProp name="ThreadGroup.end_time">1525339456000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="918312701">用户信息</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="获取登录token不成功，再次获取" enabled="true">
          <stringProp name="IfController.condition">&quot;${accessToken}&quot; ==&quot;&quot; || &quot;${accessToken}&quot; ==undefined</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="918312701">用户信息</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用06_获取公司信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/my/companies</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取setOfBooksId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">setOfBooksId;gongsiName</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.setOfBooksId;$.name</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用06_获取所有类型的单据(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/company/my/available/all/?formType=102</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取dailyFormOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">dailyFormOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.formName==&quot;日常报销单&quot;)].formOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用06_获取表单里面的字段(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用06_报销单创建(娱乐)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
	&quot;id&quot;: 10952,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: null,&#xd;
	&quot;formType&quot;: 3001,&#xd;
	&quot;asSystem&quot;: false,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T04:34:21Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: null,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1001,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: null,&#xd;
	&quot;companyOID&quot;: &quot;${companyOID}&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;form.description&quot;: &quot;{\&quot;enable\&quot;:false,\&quot;en\&quot;:{\&quot;title\&quot;:\&quot;caption\&quot;,\&quot;content\&quot;:\&quot;content\&quot;},\&quot;zh_cn\&quot;:{\&quot;title\&quot;:\&quot;说明文字\&quot;,\&quot;content\&quot;:\&quot;描述内容\&quot;}}&quot;,&#xd;
		&quot;enableAddSignForSubmitter&quot;: &quot;false&quot;,&#xd;
		&quot;enableAddSign&quot;: &quot;true&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: &quot;${tenantId}&quot;,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${departmentOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;报销单添加费用测试&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/draft</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取businessCode" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">businessCode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;businessCode&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取expenseReportOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseReportOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseReportOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取applicantOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">applicantOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOIDs" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOIDs</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;approverOIDs&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取bizOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">bizOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;bizOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用06_获取费用类型" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}/selected/expense/types?userOID=${userOID}&amp;createManually=true</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1930901582">&quot;entityOID&quot;:&quot;${dailyFormOID}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取娱乐expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">team_expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;娱乐&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取娱乐expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">team_expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;娱乐&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取娱乐expenseTypeCategoryOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">team_expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;娱乐&quot;)].expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取娱乐-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">team_city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;娱乐&quot;)].fields.[?(@.name==&quot;城市&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取娱乐方式fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">team_method_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;娱乐&quot;)].fields.[?(@.name==&quot;方式&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取娱乐-人数fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">team_count_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;娱乐&quot;)].fields.[?(@.name==&quot;人数&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取娱乐-对象fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">team_person_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;娱乐&quot;)].fields.[?(@.name==&quot;对象&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取娱乐iconURL" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">iconURL</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;娱乐&quot;)].iconURL</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递expenseTypeOID" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">express_expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].fields.[?(@.name==&quot;城市&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_expenseTypeOID;id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].expenseTypeOID;$..[?(@.name==&quot;快递&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用06_创建费用1(娱乐)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;304870&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;4bda6183-9ba9-4e00-bbeb-a831d24eb88e&quot;,&#xd;
		&quot;fileName&quot;: &quot;Desert.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/4bda6183-9ba9-4e00-bbeb-a831d24eb88e-Desert.jpg?Expires=1525691395&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=vOjnGxOfrZuVuZ8txAgRyU4d+q8=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/4bda6183-9ba9-4e00-bbeb-a831d24eb88e-Desert.jpg?Expires=1525691395&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=vOjnGxOfrZuVuZ8txAgRyU4d+q8=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/4bda6183-9ba9-4e00-bbeb-a831d24eb88e-Desert.jpg?Expires=1525691395&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=ZNSsOqzLxHrh1HkfeGbFZkZ1dug=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/4bda6183-9ba9-4e00-bbeb-a831d24eb88e-Desert.jpg?Expires=1525691395&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=G0Azn065IeGocstBQFAevRftxXo=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 845941,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T10:09:55Z&quot;,&#xd;
		&quot;bytes&quot;: null,&#xd;
		&quot;checked&quot;: null,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;娱乐&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${team_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${team_expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;teambuilding&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.team.building&quot;,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;amount&quot;: 3.1,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T10:41:14Z&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;事由&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;替票&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 111,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${team_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 112,&#xd;
		&quot;name&quot;: &quot;方式&quot;,&#xd;
		&quot;value&quot;: &quot;KTV&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;method&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${team_method_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;LONG&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;LONG&quot;,&#xd;
		&quot;mappedColumnId&quot;: 101,&#xd;
		&quot;name&quot;: &quot;人数&quot;,&#xd;
		&quot;value&quot;: 3,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;head.count&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${team_count_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 113,&#xd;
		&quot;name&quot;: &quot;对象&quot;,&#xd;
		&quot;value&quot;: &quot;abc&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;person&quot;,&#xd;
		&quot;sequence&quot;: 4,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${team_person_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1254192484">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用06_获取报销单详情(娱乐)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1947514396">&quot;businessCode&quot;:&quot;${businessCode}&quot;</stringProp>
              <stringProp name="402202526">&quot;currencyCode&quot;:&quot;CNY&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取娱乐invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">team_invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;娱乐&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取娱乐expenseReportInvoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">team_expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[0].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用06_修改费用1(娱乐)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceOID&quot;: &quot;${team_invoiceOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${team_expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${team_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;娱乐&quot;,&#xd;
	&quot;crossCheckStatus&quot;: null,&#xd;
	&quot;expenseTypeKey&quot;: null,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;teambuilding&quot;,&#xd;
	&quot;phoneNumber&quot;: null,&#xd;
	&quot;email&quot;: null,&#xd;
	&quot;expenseTypeIconURL&quot;: &quot;${iconURL}&quot;,&#xd;
	&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
	&quot;expenseTypeCategoryDTO&quot;: {&#xd;
		&quot;expenseTypeCategoryOID&quot;: &quot;${team_expenseTypeCategoryOID}&quot;,&#xd;
		&quot;name&quot;: &quot;费用类型&quot;,&#xd;
		&quot;code&quot;: null&#xd;
	},&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: 1,&#xd;
	&quot;originalAmount&quot;: 1,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;mobile&quot;: null,&#xd;
	&quot;employeeId&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${team_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;方式&quot;,&#xd;
		&quot;value&quot;: &quot;KTV&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;method&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${team_method_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;LONG&quot;,&#xd;
		&quot;name&quot;: &quot;人数&quot;,&#xd;
		&quot;value&quot;: &quot;3&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;head.count&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${team_count_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;对象&quot;,&#xd;
		&quot;value&quot;: &quot;a，b，c&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;person&quot;,&#xd;
		&quot;sequence&quot;: 4,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${team_person_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
	&quot;comment&quot;: &quot;修改费用测试&quot;,&#xd;
	&quot;warning&quot;: &quot;&quot;,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}&quot;,&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;276319&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;4bda6183-9ba9-4e00-bbeb-a831d24eb88e&quot;,&#xd;
		&quot;fileName&quot;: &quot;Desert.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/4bda6183-9ba9-4e00-bbeb-a831d24eb88e-Desert.jpg?Expires=1525691508&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=45TwzekumfJ/vhRZEfSSipBxQ1U=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/4bda6183-9ba9-4e00-bbeb-a831d24eb88e-Desert.jpg?Expires=1525691508&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=45TwzekumfJ/vhRZEfSSipBxQ1U=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/4bda6183-9ba9-4e00-bbeb-a831d24eb88e-Desert.jpg?Expires=1525691508&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=1LVpobNUsyNZAosFDc172P69AO8=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/4bda6183-9ba9-4e00-bbeb-a831d24eb88e-Desert.jpg?Expires=1525691508&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=CwcRfw1krlupjVvYPvUb2sFs0wI=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 845941,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T10:09:56Z&quot;,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: null,&#xd;
	&quot;createTime&quot;: &quot;${createTime}T10:11:47Z&quot;,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;approverId&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;approvalOperates&quot;: null,&#xd;
	&quot;approver&quot;: null,&#xd;
	&quot;referenceId&quot;: null,&#xd;
	&quot;unitPrice&quot;: null,&#xd;
	&quot;number&quot;: null,&#xd;
	&quot;receiptFailType&quot;: null,&#xd;
	&quot;receiptFailReason&quot;: null,&#xd;
	&quot;valid&quot;: false,&#xd;
	&quot;receiptID&quot;: null,&#xd;
	&quot;cardSignType&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;receiptGoodsID&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;invoiceLabelDTOS&quot;: [],&#xd;
	&quot;invoiceLabels&quot;: [{&#xd;
		&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
		&quot;name&quot;: &quot;公司&quot;,&#xd;
		&quot;level&quot;: &quot;INFO&quot;,&#xd;
		&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
		&quot;toast&quot;: null,&#xd;
		&quot;category&quot;: null,&#xd;
		&quot;oldLabel&quot;: false&#xd;
	}],&#xd;
	&quot;companyOID&quot;: null,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: null,&#xd;
	&quot;paymentType&quot;: 1001,&#xd;
	&quot;source&quot;: null,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;checked&quot;: null,&#xd;
	&quot;createInvoice&quot;: true,&#xd;
	&quot;checkWarning&quot;: null,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;digitalInvoiceId&quot;: null,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;originalActualCurrencyRate&quot;: 1,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;actualCurrencyAmount&quot;: 1,&#xd;
	&quot;baseAmount&quot;: 1,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;flightNo&quot;: null,&#xd;
	&quot;apportionUsed&quot;: false,&#xd;
	&quot;expenseApportion&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;amountChanged&quot;: null,&#xd;
	&quot;approvalStatus&quot;: null,&#xd;
	&quot;bankTransactionID&quot;: null,&#xd;
	&quot;expenseCreatedType&quot;: null,&#xd;
	&quot;overDue&quot;: null,&#xd;
	&quot;bankTransactionDetail&quot;: null,&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;subsidyRepeatedFlag&quot;: false,&#xd;
	&quot;orderAmount&quot;: 1,&#xd;
	&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
	&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
	&quot;receiptedStatus&quot;: 0,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;stringCol3&quot;: &quot;a，b，c&quot;,&#xd;
	&quot;stringCol1&quot;: &quot;西安&quot;,&#xd;
	&quot;stringCol2&quot;: null,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;status&quot;: 1000,&#xd;
	&quot;index&quot;: 1,&#xd;
	&quot;preCreatedDate&quot;: &quot;${createTime}T16:00:00Z&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1629056898">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用02_创建费用2(娱乐)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;快递&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${express_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${id}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;express&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.express&quot;,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;amount&quot;: 100,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T08:19:53Z&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;办公用品报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 111,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${express_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1254192484">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用06_获取报销单详情(快递)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;快递&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">AllDetal</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用06_费用2删除(娱乐)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/remove/invoice/${expenseReportOID}/${express_invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用06_删除账本里费用2(娱乐)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoice/batch?invoiceOIDs=${express_invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单详情" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="594935571">&quot;businessCode&quot;</stringProp>
              <stringProp name="1074092386">&quot;currencyCode&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="需要保存的报销单信息" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">draft;businessCode</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows;$.rows.businessCode</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL;NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取费用信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows.expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;expenseReportInvoices&quot;);
String detal = vars.get(&quot;draft&quot;);


JSONArray expenseReportInvoices = JSON.parseArray(json);
JSONObject draft = JSON.parseObject(detal);
draft.put(&quot;expenseReportInvoices&quot;,expenseReportInvoices);
String str =draft.toString();
vars.put(&quot;draft&quot;,str);


</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交报销单" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${draft}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1297119259">&quot;passFlag&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="拿到提交响应" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">checkResultList</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.checkResultList[0].externalPropertyName</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="报销单提交(大巴)" enabled="true">
          <stringProp name="IfController.condition">&quot;${checkResultList}&quot;  !=&quot;null&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="00再次提交报销单" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${AllDetalNew2}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1235267225">${SuccessSubmit}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="加强制提交" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;draft&quot;);

json = json.replaceAll(&quot;ignoreBudgetWarningFlag\&quot;:false&quot;,&quot;ignoreBudgetWarningFlag\&quot;:true&quot;);
vars.put(&quot;AllDetalNew2&quot;,json);

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用06_计算费用合计(娱乐)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&quot;${team_invoiceOID}&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoices/summary/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-534127293">&quot;basePersonalPaymentSum&quot;:1.0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用06_报销单提交(娱乐)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${AllDetal}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="拿到提交响应" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">checkResultList</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.checkResultList[0].externalPropertyName</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="强制提交" enabled="false">
          <stringProp name="IfController.condition">&quot;${checkResultList}&quot; !=&quot;null&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="再次提交报销单" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${AllDetalNew}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1235267225">${SuccessSubmit}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="加强制提交" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;AllDetal&quot;);
json = json.replaceAll(&quot;:null,&quot;,&quot;:\&quot;null\&quot;,&quot;);
JSONObject jsonObject = JSONObject.parseObject(json);

jsonObject.put(&quot;ignoreBudgetWarningFlag&quot;,true);

String str =jsonObject.toString();
str  = str.replaceAll(&quot;\&quot;null\&quot;&quot;,&quot;null&quot;);

vars.put(&quot;AllDetalNew&quot;,str);

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用06_报销单撤销(娱乐)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${expenseReportOID}&quot;,&quot;entityType&quot;:1002}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/approvals/withdraw</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1849896742">&quot;successNum&quot;:1,&quot;failNum&quot;:0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="新建费用报销单(办公)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1525339456000</longProp>
        <longProp name="ThreadGroup.end_time">1525339456000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="918312701">用户信息</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="获取登录token不成功，再次获取" enabled="true">
          <stringProp name="IfController.condition">&quot;${accessToken}&quot; ==&quot;&quot; || &quot;${accessToken}&quot; ==undefined</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="918312701">用户信息</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用07_获取公司信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/my/companies</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取setOfBooksId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">setOfBooksId;gongsiName</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.setOfBooksId;$.name</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用07_获取所有类型的单据(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/company/my/available/all/?formType=102</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取dailyFormOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">dailyFormOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.formName==&quot;日常报销单&quot;)].formOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用07_获取表单里面的字段(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用07_报销单创建(办公)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
	&quot;id&quot;: 10952,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: null,&#xd;
	&quot;formType&quot;: 3001,&#xd;
	&quot;asSystem&quot;: false,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T04:34:21Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: null,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1001,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: null,&#xd;
	&quot;companyOID&quot;: &quot;${companyOID}&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;form.description&quot;: &quot;{\&quot;enable\&quot;:false,\&quot;en\&quot;:{\&quot;title\&quot;:\&quot;caption\&quot;,\&quot;content\&quot;:\&quot;content\&quot;},\&quot;zh_cn\&quot;:{\&quot;title\&quot;:\&quot;说明文字\&quot;,\&quot;content\&quot;:\&quot;描述内容\&quot;}}&quot;,&#xd;
		&quot;enableAddSignForSubmitter&quot;: &quot;false&quot;,&#xd;
		&quot;enableAddSign&quot;: &quot;true&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: &quot;${tenantId}&quot;,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${departmentOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;报销单添加费用测试&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/draft</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取businessCode" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">businessCode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;businessCode&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取expenseReportOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseReportOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseReportOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取applicantOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">applicantOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOIDs" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOIDs</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;approverOIDs&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取bizOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">bizOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;bizOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用07_获取费用类型" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}/selected/expense/types?userOID=${userOID}&amp;createManually=true</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1930901582">&quot;entityOID&quot;:&quot;${dailyFormOID}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取办公expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">office_expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;办公&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取办公expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">office_expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;办公&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取办公expenseTypeCategoryOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">office_expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;办公&quot;)].expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取办公-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">office_city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;办公&quot;)].fields.[?(@.name==&quot;城市&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取办公-说明fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">office_name_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;办公&quot;)].fields.[?(@.name==&quot;说明&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取办公iconURL" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">iconURL</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;办公&quot;)].iconURL</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].fields.[?(@.name==&quot;城市&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_expenseTypeOID;id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].expenseTypeOID;$..[?(@.name==&quot;快递&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用07_创建费用1(办公)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;304906&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;07878e1d-8823-48e8-9fd4-d661bc8960d6&quot;,&#xd;
		&quot;fileName&quot;: &quot;Desert.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/07878e1d-8823-48e8-9fd4-d661bc8960d6-Desert.jpg?Expires=1525702249&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=Fc69JlyOTX4oIKCuP66IMwhRY7g=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/07878e1d-8823-48e8-9fd4-d661bc8960d6-Desert.jpg?Expires=1525702249&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=Fc69JlyOTX4oIKCuP66IMwhRY7g=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/07878e1d-8823-48e8-9fd4-d661bc8960d6-Desert.jpg?Expires=1525702249&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=1/hSjBFWYkqmABgvCCYgm66raQo=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/07878e1d-8823-48e8-9fd4-d661bc8960d6-Desert.jpg?Expires=1525702249&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=2Kxev2xYIM+2Fg2Jx8wrOWsR+2Q=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 845941,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T13:10:49Z&quot;,&#xd;
		&quot;bytes&quot;: null,&#xd;
		&quot;checked&quot;: null,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;办公&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${office_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${office_expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;office&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.office&quot;,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;amount&quot;: 5,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T11:38:53Z&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;事由&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;替票&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 111,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${office_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 112,&#xd;
		&quot;name&quot;: &quot;说明&quot;,&#xd;
		&quot;value&quot;: &quot;说明&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;name&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${office_name_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1254192484">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用07_获取报销单详情(办公)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1947514396">&quot;businessCode&quot;:&quot;${businessCode}&quot;</stringProp>
              <stringProp name="402202526">&quot;currencyCode&quot;:&quot;CNY&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取办公invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">office_invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;办公&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取办公expenseReportInvoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">office_expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[0].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用07_修改费用1(办公)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceOID&quot;: &quot;${office_invoiceOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${office_expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${office_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;办公&quot;,&#xd;
	&quot;crossCheckStatus&quot;: null,&#xd;
	&quot;expenseTypeKey&quot;: null,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;office&quot;,&#xd;
	&quot;phoneNumber&quot;: null,&#xd;
	&quot;email&quot;: null,&#xd;
	&quot;expenseTypeIconURL&quot;: &quot;${iconURL}&quot;,&#xd;
	&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
	&quot;expenseTypeCategoryDTO&quot;: {&#xd;
		&quot;expenseTypeCategoryOID&quot;: &quot;${office_expenseTypeCategoryOID}&quot;,&#xd;
		&quot;name&quot;: &quot;费用类型&quot;,&#xd;
		&quot;code&quot;: null&#xd;
	},&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: 1,&#xd;
	&quot;originalAmount&quot;: 1,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;mobile&quot;: null,&#xd;
	&quot;employeeId&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${office_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: &quot;西安&quot;,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;说明&quot;,&#xd;
		&quot;value&quot;: &quot;办公用品&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;name&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${office_name_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: &quot;办公用品&quot;,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
	&quot;comment&quot;: &quot;修改费用测试&quot;,&#xd;
	&quot;warning&quot;: &quot;&quot;,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}&quot;,&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;276324&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;07878e1d-8823-48e8-9fd4-d661bc8960d6&quot;,&#xd;
		&quot;fileName&quot;: &quot;Desert.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/07878e1d-8823-48e8-9fd4-d661bc8960d6-Desert.jpg?Expires=1525702307&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=SghhC/tY5TCxMDkggv3gjdPSBL8=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/07878e1d-8823-48e8-9fd4-d661bc8960d6-Desert.jpg?Expires=1525702307&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=SghhC/tY5TCxMDkggv3gjdPSBL8=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/07878e1d-8823-48e8-9fd4-d661bc8960d6-Desert.jpg?Expires=1525702307&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=jJUWvxzLnJMMJ6dEnuhsZHZ5GqU=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/07878e1d-8823-48e8-9fd4-d661bc8960d6-Desert.jpg?Expires=1525702307&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=uCfQ5DBXNrnT3j7JQv5/yzuDgIk=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 845941,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T13:10:50Z&quot;,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: null,&#xd;
	&quot;createTime&quot;: &quot;${createTime}T13:11:38Z&quot;,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;approverId&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;approvalOperates&quot;: null,&#xd;
	&quot;approver&quot;: null,&#xd;
	&quot;referenceId&quot;: null,&#xd;
	&quot;unitPrice&quot;: null,&#xd;
	&quot;number&quot;: null,&#xd;
	&quot;receiptFailType&quot;: null,&#xd;
	&quot;receiptFailReason&quot;: null,&#xd;
	&quot;valid&quot;: false,&#xd;
	&quot;receiptID&quot;: null,&#xd;
	&quot;cardSignType&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;receiptGoodsID&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;invoiceLabelDTOS&quot;: [],&#xd;
	&quot;invoiceLabels&quot;: [{&#xd;
		&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
		&quot;name&quot;: &quot;公司&quot;,&#xd;
		&quot;level&quot;: &quot;INFO&quot;,&#xd;
		&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
		&quot;toast&quot;: null,&#xd;
		&quot;category&quot;: null,&#xd;
		&quot;oldLabel&quot;: false&#xd;
	}],&#xd;
	&quot;companyOID&quot;: null,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: null,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;source&quot;: null,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;checked&quot;: null,&#xd;
	&quot;createInvoice&quot;: true,&#xd;
	&quot;checkWarning&quot;: null,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;digitalInvoiceId&quot;: null,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;originalActualCurrencyRate&quot;: 1,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;actualCurrencyAmount&quot;: 1,&#xd;
	&quot;baseAmount&quot;: 1,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;flightNo&quot;: null,&#xd;
	&quot;apportionUsed&quot;: false,&#xd;
	&quot;expenseApportion&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;amountChanged&quot;: null,&#xd;
	&quot;approvalStatus&quot;: null,&#xd;
	&quot;bankTransactionID&quot;: null,&#xd;
	&quot;expenseCreatedType&quot;: null,&#xd;
	&quot;overDue&quot;: null,&#xd;
	&quot;bankTransactionDetail&quot;: null,&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;subsidyRepeatedFlag&quot;: false,&#xd;
	&quot;orderAmount&quot;: 1,&#xd;
	&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
	&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
	&quot;receiptedStatus&quot;: 0,&#xd;
	&quot;stringCol3&quot;: null,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;stringCol1&quot;: &quot;西安&quot;,&#xd;
	&quot;stringCol2&quot;: null,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;status&quot;: 1000,&#xd;
	&quot;index&quot;: 1,&#xd;
	&quot;preCreatedDate&quot;: &quot;${createTime}T16:00:00Z&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="981219709">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用02_创建费用2(办公)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;快递&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${express_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${id}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;express&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.express&quot;,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;amount&quot;: 100,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T08:19:53Z&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;办公用品报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 111,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${express_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1254192484">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用07_获取报销单详情(快递)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;快递&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">AllDetal</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用07_费用2删除(办公)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/remove/invoice/${expenseReportOID}/${express_invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用07_删除账本里费用2(办公)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoice/batch?invoiceOIDs=${express_invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用07_计算费用合计(办公)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&quot;${office_invoiceOID}&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoices/summary/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="313507500">&quot;baseCompanyPaymentSum&quot;:1.0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用07_报销单提交(办公)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${AllDetal}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1235267225">${SuccessSubmit}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单详情" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="594935571">&quot;businessCode&quot;</stringProp>
              <stringProp name="1074092386">&quot;currencyCode&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="需要保存的报销单信息" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">draft;businessCode</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows;$.rows.businessCode</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL;NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取费用信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows.expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;expenseReportInvoices&quot;);
String detal = vars.get(&quot;draft&quot;);


JSONArray expenseReportInvoices = JSON.parseArray(json);
JSONObject draft = JSON.parseObject(detal);
draft.put(&quot;expenseReportInvoices&quot;,expenseReportInvoices);
String str =draft.toString();
vars.put(&quot;draft&quot;,str);


</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交报销单" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${draft}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1297119259">&quot;passFlag&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="拿到提交响应" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">checkResultList</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.checkResultList[0].externalPropertyName</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="报销单提交(大巴)" enabled="true">
          <stringProp name="IfController.condition">&quot;${checkResultList}&quot;  !=&quot;null&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="00再次提交报销单" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${AllDetalNew2}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1235267225">${SuccessSubmit}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="加强制提交" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;draft&quot;);

json = json.replaceAll(&quot;ignoreBudgetWarningFlag\&quot;:false&quot;,&quot;ignoreBudgetWarningFlag\&quot;:true&quot;);
vars.put(&quot;AllDetalNew2&quot;,json);

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用07_报销单撤销(办公)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${expenseReportOID}&quot;,&quot;entityType&quot;:1002}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/approvals/withdraw</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1849896742">&quot;successNum&quot;:1,&quot;failNum&quot;:0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用07_退出登录 " enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="新建费用报销单(会务)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1525339456000</longProp>
        <longProp name="ThreadGroup.end_time">1525339456000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="918312701">用户信息</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="获取登录token不成功，再次获取" enabled="true">
          <stringProp name="IfController.condition">&quot;${accessToken}&quot; ==&quot;&quot; || &quot;${accessToken}&quot; ==undefined</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="918312701">用户信息</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用08_获取公司信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/my/companies</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取setOfBooksId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">setOfBooksId;gongsiName</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.setOfBooksId;$.name</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用08_获取所有类型的单据(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/company/my/available/all/?formType=102</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取dailyFormOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">dailyFormOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.formName==&quot;日常报销单&quot;)].formOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用08_获取表单里面的字段(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用08_报销单创建(会务)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
	&quot;id&quot;: 10952,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: null,&#xd;
	&quot;formType&quot;: 3001,&#xd;
	&quot;asSystem&quot;: false,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T04:34:21Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: null,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1001,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: null,&#xd;
	&quot;companyOID&quot;: &quot;${companyOID}&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;form.description&quot;: &quot;{\&quot;enable\&quot;:false,\&quot;en\&quot;:{\&quot;title\&quot;:\&quot;caption\&quot;,\&quot;content\&quot;:\&quot;content\&quot;},\&quot;zh_cn\&quot;:{\&quot;title\&quot;:\&quot;说明文字\&quot;,\&quot;content\&quot;:\&quot;描述内容\&quot;}}&quot;,&#xd;
		&quot;enableAddSignForSubmitter&quot;: &quot;false&quot;,&#xd;
		&quot;enableAddSign&quot;: &quot;true&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: &quot;${tenantId}&quot;,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${departmentOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;报销单添加费用测试&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/draft</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取businessCode" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">businessCode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;businessCode&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取expenseReportOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseReportOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseReportOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取applicantOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">applicantOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOIDs" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOIDs</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;approverOIDs&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取bizOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">bizOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;bizOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用08_获取费用类型" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}/selected/expense/types?userOID=${userOID}&amp;createManually=true</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1930901582">&quot;entityOID&quot;:&quot;${dailyFormOID}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取会务expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">meetings_expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;会务&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取会务expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">meetings_expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;会务&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取会务expenseTypeCategoryOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">meetings_expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;会务&quot;)].expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取会务-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">meetings_city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;会务&quot;)].fields.[?(@.name==&quot;城市&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取会务-地点fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">meetings_location_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;会务&quot;)].fields.[?(@.name==&quot;地点&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取会务-人数fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">meetings_count_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;会务&quot;)].fields.[?(@.name==&quot;人数&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取会务iconURL" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">iconURL</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;会务&quot;)].iconURL</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].fields.[?(@.name==&quot;城市&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_expenseTypeOID;id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].expenseTypeOID;$..[?(@.name==&quot;快递&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用08_创建费用1(会务)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;304873&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;38b581f3-c31e-465b-9940-809dfc369bf3&quot;,&#xd;
		&quot;fileName&quot;: &quot;Desert.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/38b581f3-c31e-465b-9940-809dfc369bf3-Desert.jpg?Expires=1525703859&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=l7jVq9kgGfRxuhCSfpj7mAyBuPE=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/38b581f3-c31e-465b-9940-809dfc369bf3-Desert.jpg?Expires=1525703859&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=l7jVq9kgGfRxuhCSfpj7mAyBuPE=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/38b581f3-c31e-465b-9940-809dfc369bf3-Desert.jpg?Expires=1525703859&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=sssd2wKH0tSVkDKEeVvuUrgPTbE=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/38b581f3-c31e-465b-9940-809dfc369bf3-Desert.jpg?Expires=1525703859&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=q8dcrPaiKmUYAQPzCSSbTd9EIBs=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 845941,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T13:37:38Z&quot;,&#xd;
		&quot;bytes&quot;: null,&#xd;
		&quot;checked&quot;: null,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;会务&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${meetings_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${meetings_expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;meetings&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.meetings&quot;,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;amount&quot;: 5,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T10:48:12Z&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;事由&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;替票&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 111,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${meetings_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 112,&#xd;
		&quot;name&quot;: &quot;地点&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;西安环普科技产业园\&quot;,\&quot;longitude\&quot;:108.84068,\&quot;latitude\&quot;:34.20974}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;location&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${meetings_location_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;LONG&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;LONG&quot;,&#xd;
		&quot;mappedColumnId&quot;: 101,&#xd;
		&quot;name&quot;: &quot;人数&quot;,&#xd;
		&quot;value&quot;: 10,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;head.count&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${meetings_count_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1254192484">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用08_获取报销单详情(会务)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1947514396">&quot;businessCode&quot;:&quot;${businessCode}&quot;</stringProp>
              <stringProp name="402202526">&quot;currencyCode&quot;:&quot;CNY&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取会务invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">meetings_invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;会务&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取会务expenseReportInvoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">meetings_expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[0].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用08_修改费用1(会务)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceOID&quot;: &quot;${meetings_invoiceOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${meetings_expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${meetings_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;会务&quot;,&#xd;
	&quot;crossCheckStatus&quot;: null,&#xd;
	&quot;expenseTypeKey&quot;: null,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;meetings&quot;,&#xd;
	&quot;phoneNumber&quot;: null,&#xd;
	&quot;email&quot;: null,&#xd;
	&quot;expenseTypeIconURL&quot;: &quot;${iconURL}&quot;,&#xd;
	&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
	&quot;expenseTypeCategoryDTO&quot;: {&#xd;
		&quot;expenseTypeCategoryOID&quot;: &quot;${meetings_expenseTypeCategoryOID}&quot;,&#xd;
		&quot;name&quot;: &quot;费用类型&quot;,&#xd;
		&quot;code&quot;: null&#xd;
	},&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: 10,&#xd;
	&quot;originalAmount&quot;: 1,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;mobile&quot;: null,&#xd;
	&quot;employeeId&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${meetings_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: &quot;西安&quot;,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;name&quot;: &quot;地点&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;麦当劳(环普产业园店)\&quot;,\&quot;longitude\&quot;:108.83977,\&quot;latitude\&quot;:34.21055}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;location&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${meetings_location_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: &quot;{\&quot;address\&quot;:\&quot;麦当劳(环普产业园店)\&quot;,\&quot;longitude\&quot;:108.83977,\&quot;latitude\&quot;:34.21055}&quot;,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;LONG&quot;,&#xd;
		&quot;name&quot;: &quot;人数&quot;,&#xd;
		&quot;value&quot;: &quot;1&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;head.count&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${meetings_count_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: &quot;1&quot;,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
	&quot;comment&quot;: &quot;修改费用测试&quot;,&#xd;
	&quot;warning&quot;: &quot;&quot;,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}&quot;,&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;276325&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;38b581f3-c31e-465b-9940-809dfc369bf3&quot;,&#xd;
		&quot;fileName&quot;: &quot;Desert.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/38b581f3-c31e-465b-9940-809dfc369bf3-Desert.jpg?Expires=1525703887&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=eleuvp7Q+GhGPYLznGNZamrPIN8=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/38b581f3-c31e-465b-9940-809dfc369bf3-Desert.jpg?Expires=1525703887&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=eleuvp7Q+GhGPYLznGNZamrPIN8=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/38b581f3-c31e-465b-9940-809dfc369bf3-Desert.jpg?Expires=1525703887&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=yhY61CYgysbZ4v6d2hpxaDYP0qA=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/38b581f3-c31e-465b-9940-809dfc369bf3-Desert.jpg?Expires=1525703887&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=RL4BMRMfjXGTsZiEsW24i9/lCI0=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 845941,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T13:37:38Z&quot;,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: null,&#xd;
	&quot;createTime&quot;: &quot;${createTime}T13:37:59Z&quot;,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;approverId&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;approvalOperates&quot;: null,&#xd;
	&quot;approver&quot;: null,&#xd;
	&quot;referenceId&quot;: null,&#xd;
	&quot;unitPrice&quot;: null,&#xd;
	&quot;number&quot;: null,&#xd;
	&quot;receiptFailType&quot;: null,&#xd;
	&quot;receiptFailReason&quot;: null,&#xd;
	&quot;valid&quot;: false,&#xd;
	&quot;receiptID&quot;: null,&#xd;
	&quot;cardSignType&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;receiptGoodsID&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;invoiceLabelDTOS&quot;: [],&#xd;
	&quot;invoiceLabels&quot;: [{&#xd;
		&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
		&quot;name&quot;: &quot;公司&quot;,&#xd;
		&quot;level&quot;: &quot;INFO&quot;,&#xd;
		&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
		&quot;toast&quot;: null,&#xd;
		&quot;category&quot;: null,&#xd;
		&quot;oldLabel&quot;: false&#xd;
	}],&#xd;
	&quot;companyOID&quot;: null,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: null,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;source&quot;: null,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;checked&quot;: null,&#xd;
	&quot;createInvoice&quot;: true,&#xd;
	&quot;checkWarning&quot;: null,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;digitalInvoiceId&quot;: null,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;originalActualCurrencyRate&quot;: 1,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;actualCurrencyAmount&quot;: 1,&#xd;
	&quot;baseAmount&quot;: 1,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;flightNo&quot;: null,&#xd;
	&quot;apportionUsed&quot;: false,&#xd;
	&quot;expenseApportion&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;amountChanged&quot;: null,&#xd;
	&quot;approvalStatus&quot;: null,&#xd;
	&quot;bankTransactionID&quot;: null,&#xd;
	&quot;expenseCreatedType&quot;: null,&#xd;
	&quot;overDue&quot;: null,&#xd;
	&quot;bankTransactionDetail&quot;: null,&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;subsidyRepeatedFlag&quot;: false,&#xd;
	&quot;orderAmount&quot;: 1,&#xd;
	&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
	&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
	&quot;receiptedStatus&quot;: 0,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;stringCol1&quot;: &quot;西安&quot;,&#xd;
	&quot;stringCol2&quot;: null,&#xd;
	&quot;stringCol3&quot;: null,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;status&quot;: 1000,&#xd;
	&quot;index&quot;: 1,&#xd;
	&quot;preCreatedDate&quot;: &quot;${createTime}T16:00:00Z&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1629056898">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用02_创建费用2(会务)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;快递&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${express_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${id}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;express&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.express&quot;,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;amount&quot;: 100,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T08:19:53Z&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;办公用品报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 111,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${express_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1254192484">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用08_获取报销单详情(会务费用2)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;快递&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">AllDetal</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用08_费用2删除(会务)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/remove/invoice/${expenseReportOID}/${express_invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用08_删除账本里费用2(会务)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoice/batch?invoiceOIDs=${express_invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用08_计算费用合计(会务)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&quot;${meetings_invoiceOID}&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoices/summary/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1199907754">baseCompanyPaymentSum&quot;:10.0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单详情" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="594935571">&quot;businessCode&quot;</stringProp>
              <stringProp name="1074092386">&quot;currencyCode&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="需要保存的报销单信息" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">draft;businessCode</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows;$.rows.businessCode</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL;NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取费用信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows.expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;expenseReportInvoices&quot;);
String detal = vars.get(&quot;draft&quot;);


JSONArray expenseReportInvoices = JSON.parseArray(json);
JSONObject draft = JSON.parseObject(detal);
draft.put(&quot;expenseReportInvoices&quot;,expenseReportInvoices);
String str =draft.toString();
vars.put(&quot;draft&quot;,str);


</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交报销单" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${draft}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1297119259">&quot;passFlag&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="拿到提交响应" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">checkResultList</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.checkResultList[0].externalPropertyName</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="报销单提交(大巴)" enabled="true">
          <stringProp name="IfController.condition">&quot;${checkResultList}&quot;  !=&quot;null&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="00再次提交报销单" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${AllDetalNew2}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1235267225">${SuccessSubmit}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="加强制提交" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;draft&quot;);

json = json.replaceAll(&quot;ignoreBudgetWarningFlag\&quot;:false&quot;,&quot;ignoreBudgetWarningFlag\&quot;:true&quot;);
vars.put(&quot;AllDetalNew2&quot;,json);

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用08_报销单提交(会务)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${AllDetal}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1235267225">${SuccessSubmit}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用08_报销单撤销(会务)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${expenseReportOID}&quot;,&quot;entityType&quot;:1002}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/approvals/withdraw</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1849896742">&quot;successNum&quot;:1,&quot;failNum&quot;:0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用08_退出登录 " enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="新建费用报销单(通讯)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1525339456000</longProp>
        <longProp name="ThreadGroup.end_time">1525339456000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="918312701">用户信息</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="获取登录token不成功，再次获取" enabled="true">
          <stringProp name="IfController.condition">&quot;${accessToken}&quot; ==&quot;&quot; || &quot;${accessToken}&quot; ==undefined</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="918312701">用户信息</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用09_获取公司信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/my/companies</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取setOfBooksId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">setOfBooksId;gongsiName</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.setOfBooksId;$.name</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用09_获取所有类型的单据(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/company/my/available/all/?formType=102</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取dailyFormOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">dailyFormOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.formName==&quot;日常报销单&quot;)].formOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用09_获取表单里面的字段(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用09_报销单创建(通讯)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
	&quot;id&quot;: 10952,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: null,&#xd;
	&quot;formType&quot;: 3001,&#xd;
	&quot;asSystem&quot;: false,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T04:34:21Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: null,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1001,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: null,&#xd;
	&quot;companyOID&quot;: &quot;${companyOID}&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;form.description&quot;: &quot;{\&quot;enable\&quot;:false,\&quot;en\&quot;:{\&quot;title\&quot;:\&quot;caption\&quot;,\&quot;content\&quot;:\&quot;content\&quot;},\&quot;zh_cn\&quot;:{\&quot;title\&quot;:\&quot;说明文字\&quot;,\&quot;content\&quot;:\&quot;描述内容\&quot;}}&quot;,&#xd;
		&quot;enableAddSignForSubmitter&quot;: &quot;false&quot;,&#xd;
		&quot;enableAddSign&quot;: &quot;true&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: &quot;${tenantId}&quot;,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${departmentOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;报销单添加费用测试&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/draft</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取businessCode" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">businessCode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;businessCode&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取expenseReportOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseReportOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseReportOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取applicantOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">applicantOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOIDs" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOIDs</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;approverOIDs&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取bizOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">bizOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;bizOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用09_获取费用类型" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}/selected/expense/types?userOID=${userOID}&amp;createManually=true</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1930901582">&quot;entityOID&quot;:&quot;${dailyFormOID}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取通讯expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">communication_expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;通讯&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取通讯expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">communication_expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;通讯&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取通讯expenseTypeCategoryOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">communication_expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;通讯&quot;)].expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取通讯-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">communication_city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;通讯&quot;)].fields.[?(@.name==&quot;城市&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取通讯-电话号码fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">communication_phone_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;通讯&quot;)].fields.[?(@.name==&quot;电话号码&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取通讯iconURL" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">iconURL</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;通讯&quot;)].iconURL</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].fields.[?(@.name==&quot;城市&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_expenseTypeOID;id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].expenseTypeOID;$..[?(@.name==&quot;快递&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用09_创建费用1(通讯)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;304881&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;5039461d-e8e6-466e-b2ff-992e2834fd63&quot;,&#xd;
		&quot;fileName&quot;: &quot;Desert.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/5039461d-e8e6-466e-b2ff-992e2834fd63-Desert.jpg?Expires=1525747424&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=jnVGgkTfnKNomuqvG2ckJ8VwC1c=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/5039461d-e8e6-466e-b2ff-992e2834fd63-Desert.jpg?Expires=1525747424&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=jnVGgkTfnKNomuqvG2ckJ8VwC1c=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/5039461d-e8e6-466e-b2ff-992e2834fd63-Desert.jpg?Expires=1525747424&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=PiqUPCyV9QUxN/2q9PDIfJ0h7gc=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/5039461d-e8e6-466e-b2ff-992e2834fd63-Desert.jpg?Expires=1525747424&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=DM9ALtI/nVxGXAfg0TpmsFfKY4k=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 845941,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T01:43:44Z&quot;,&#xd;
		&quot;bytes&quot;: null,&#xd;
		&quot;checked&quot;: null,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;通讯&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${communication_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${communication_expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;communication&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.communication&quot;,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;amount&quot;: 5,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T10:51:03Z&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;事由&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;替票&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 111,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${communication_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 112,&#xd;
		&quot;name&quot;: &quot;电话号码&quot;,&#xd;
		&quot;value&quot;: &quot;110&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;phone.number&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${communication_phone_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1254192484">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用09_获取报销单详情(通讯)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1947514396">&quot;businessCode&quot;:&quot;${businessCode}&quot;</stringProp>
              <stringProp name="402202526">&quot;currencyCode&quot;:&quot;CNY&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取通讯invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">communication_invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;通讯&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取通讯expenseReportInvoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">communication_expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[0].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">AllDetal</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用09_修改费用1(通讯)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceOID&quot;: &quot;${communication_invoiceOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${communication_expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${communication_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;通讯&quot;,&#xd;
	&quot;crossCheckStatus&quot;: null,&#xd;
	&quot;expenseTypeKey&quot;: null,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;communication&quot;,&#xd;
	&quot;phoneNumber&quot;: null,&#xd;
	&quot;email&quot;: null,&#xd;
	&quot;expenseTypeIconURL&quot;: &quot;${iconURL}&quot;,&#xd;
	&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
	&quot;expenseTypeCategoryDTO&quot;: {&#xd;
		&quot;expenseTypeCategoryOID&quot;: &quot;${communication_expenseTypeCategoryOID}&quot;,&#xd;
		&quot;name&quot;: &quot;费用类型&quot;,&#xd;
		&quot;code&quot;: null&#xd;
	},&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: 10,&#xd;
	&quot;originalAmount&quot;: 1,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;mobile&quot;: null,&#xd;
	&quot;employeeId&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${communication_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: &quot;西安&quot;,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;电话号码&quot;,&#xd;
		&quot;value&quot;: &quot;13700000021&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;phone.number&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${communication_phone_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: &quot;13700000021&quot;,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
	&quot;comment&quot;: &quot;修改费用测试&quot;,&#xd;
	&quot;warning&quot;: &quot;&quot;,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}&quot;,&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;276363&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;5039461d-e8e6-466e-b2ff-992e2834fd63&quot;,&#xd;
		&quot;fileName&quot;: &quot;Desert.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/5039461d-e8e6-466e-b2ff-992e2834fd63-Desert.jpg?Expires=1525747445&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=L9Gbob33dvSkMrlhtApZX91iJ+w=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/5039461d-e8e6-466e-b2ff-992e2834fd63-Desert.jpg?Expires=1525747445&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=L9Gbob33dvSkMrlhtApZX91iJ+w=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/5039461d-e8e6-466e-b2ff-992e2834fd63-Desert.jpg?Expires=1525747445&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=q5ATp5BmrJlw1xAL9QRiqnOtao8=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/5039461d-e8e6-466e-b2ff-992e2834fd63-Desert.jpg?Expires=1525747445&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=9pBIcxaXR/WD58zG4pFkZ+/7JFE=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 845941,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T01:43:44Z&quot;,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: null,&#xd;
	&quot;createTime&quot;: &quot;${createTime}T01:44:04Z&quot;,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;approverId&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;approvalOperates&quot;: null,&#xd;
	&quot;approver&quot;: null,&#xd;
	&quot;referenceId&quot;: null,&#xd;
	&quot;unitPrice&quot;: null,&#xd;
	&quot;number&quot;: null,&#xd;
	&quot;receiptFailType&quot;: null,&#xd;
	&quot;receiptFailReason&quot;: null,&#xd;
	&quot;valid&quot;: false,&#xd;
	&quot;receiptID&quot;: null,&#xd;
	&quot;cardSignType&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;receiptGoodsID&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;invoiceLabelDTOS&quot;: [],&#xd;
	&quot;invoiceLabels&quot;: [{&#xd;
		&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
		&quot;name&quot;: &quot;公司&quot;,&#xd;
		&quot;level&quot;: &quot;INFO&quot;,&#xd;
		&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
		&quot;toast&quot;: null,&#xd;
		&quot;category&quot;: null,&#xd;
		&quot;oldLabel&quot;: false&#xd;
	}],&#xd;
	&quot;companyOID&quot;: null,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: null,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;source&quot;: null,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;checked&quot;: null,&#xd;
	&quot;createInvoice&quot;: true,&#xd;
	&quot;checkWarning&quot;: null,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;digitalInvoiceId&quot;: null,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;originalActualCurrencyRate&quot;: 1,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;actualCurrencyAmount&quot;: 1,&#xd;
	&quot;baseAmount&quot;: 1,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;flightNo&quot;: null,&#xd;
	&quot;apportionUsed&quot;: false,&#xd;
	&quot;expenseApportion&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;amountChanged&quot;: null,&#xd;
	&quot;approvalStatus&quot;: null,&#xd;
	&quot;bankTransactionID&quot;: null,&#xd;
	&quot;expenseCreatedType&quot;: null,&#xd;
	&quot;overDue&quot;: null,&#xd;
	&quot;bankTransactionDetail&quot;: null,&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;subsidyRepeatedFlag&quot;: false,&#xd;
	&quot;orderAmount&quot;: 1,&#xd;
	&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
	&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
	&quot;receiptedStatus&quot;: 0,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;stringCol1&quot;: &quot;西安&quot;,&#xd;
	&quot;stringCol2&quot;: null,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;stringCol3&quot;: null,&#xd;
	&quot;status&quot;: 1000,&#xd;
	&quot;index&quot;: 1,&#xd;
	&quot;preCreatedDate&quot;: &quot;${createTime}T16:00:00Z&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1629056898">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用02_创建费用2(通讯)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;快递&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${express_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${id}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;express&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.express&quot;,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;amount&quot;: 100,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T08:19:53Z&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;办公用品报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 111,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${express_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1254192484">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用09_获取报销单详情(通讯费用2)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;快递&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用09_费用2删除(通讯)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/remove/invoice/${expenseReportOID}/${express_invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用09_删除账本里费用2(通讯)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoice/batch?invoiceOIDs=${express_invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用09_计算费用合计(通讯)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&quot;${communication_invoiceOID}&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoices/summary/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1128799816">&quot;baseCompanyPaymentSum&quot;:10.0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用09_报销单提交(通讯)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${AllDetal}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1235267225">${SuccessSubmit}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单详情" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="594935571">&quot;businessCode&quot;</stringProp>
              <stringProp name="1074092386">&quot;currencyCode&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="需要保存的报销单信息" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">draft;businessCode</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows;$.rows.businessCode</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL;NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取费用信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows.expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;expenseReportInvoices&quot;);
String detal = vars.get(&quot;draft&quot;);


JSONArray expenseReportInvoices = JSON.parseArray(json);
JSONObject draft = JSON.parseObject(detal);
draft.put(&quot;expenseReportInvoices&quot;,expenseReportInvoices);
String str =draft.toString();
vars.put(&quot;draft&quot;,str);


</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交报销单" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${draft}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1297119259">&quot;passFlag&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="拿到提交响应" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">checkResultList</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.checkResultList[0].externalPropertyName</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="报销单提交(大巴)" enabled="true">
          <stringProp name="IfController.condition">&quot;${checkResultList}&quot;  !=&quot;null&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="00再次提交报销单" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${AllDetalNew2}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1235267225">${SuccessSubmit}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="加强制提交" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;draft&quot;);

json = json.replaceAll(&quot;ignoreBudgetWarningFlag\&quot;:false&quot;,&quot;ignoreBudgetWarningFlag\&quot;:true&quot;);
vars.put(&quot;AllDetalNew2&quot;,json);

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用09_报销单撤销(通讯)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${expenseReportOID}&quot;,&quot;entityType&quot;:1002}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/approvals/withdraw?</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1849896742">&quot;successNum&quot;:1,&quot;failNum&quot;:0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用09_退出登录 " enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="新建费用报销单(酒店)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1525339456000</longProp>
        <longProp name="ThreadGroup.end_time">1525339456000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="918312701">用户信息</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="获取登录token不成功，再次获取" enabled="true">
          <stringProp name="IfController.condition">&quot;${accessToken}&quot; ==&quot;&quot; || &quot;${accessToken}&quot; ==undefined</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="918312701">用户信息</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用10_获取公司信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/my/companies</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取setOfBooksId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">setOfBooksId;gongsiName</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.setOfBooksId;$.name</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用10_获取所有类型的单据(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/company/my/available/all/?formType=102</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取dailyFormOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">dailyFormOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.formName==&quot;日常报销单&quot;)].formOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用10_获取表单里面的字段(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用10_报销单创建(酒店)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
	&quot;id&quot;: 10952,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: null,&#xd;
	&quot;formType&quot;: 3001,&#xd;
	&quot;asSystem&quot;: false,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T04:34:21Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: null,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1001,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: null,&#xd;
	&quot;companyOID&quot;: &quot;${companyOID}&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;form.description&quot;: &quot;{\&quot;enable\&quot;:false,\&quot;en\&quot;:{\&quot;title\&quot;:\&quot;caption\&quot;,\&quot;content\&quot;:\&quot;content\&quot;},\&quot;zh_cn\&quot;:{\&quot;title\&quot;:\&quot;说明文字\&quot;,\&quot;content\&quot;:\&quot;描述内容\&quot;}}&quot;,&#xd;
		&quot;enableAddSignForSubmitter&quot;: &quot;false&quot;,&#xd;
		&quot;enableAddSign&quot;: &quot;true&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: &quot;${tenantId}&quot;,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${departmentOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;报销单添加费用测试&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/draft</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取businessCode" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">businessCode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;businessCode&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取expenseReportOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseReportOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseReportOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取applicantOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">applicantOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOIDs" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOIDs</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;approverOIDs&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取bizOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">bizOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;bizOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用10_获取费用类型" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}/selected/expense/types?userOID=${userOID}&amp;createManually=true</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1930901582">&quot;entityOID&quot;:&quot;${dailyFormOID}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取酒店expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">hotel_expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;酒店&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取酒店expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">hotel_expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;酒店&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取酒店expenseTypeCategoryOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">hotel_expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;酒店&quot;)].expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取酒店-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">hotel_city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;酒店&quot;)].fields.[?(@.name==&quot;城市&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取酒店-酒店名称fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">hotel_name_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;酒店&quot;)].fields.[?(@.name==&quot;酒店名称&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取酒店-入住天数fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">hotel_days_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;酒店&quot;)].fields.[?(@.name==&quot;入住天数&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取酒店iconURL" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">iconURL</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;酒店&quot;)].iconURL</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].fields.[?(@.name==&quot;城市&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_expenseTypeOID;id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].expenseTypeOID;$..[?(@.name==&quot;快递&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用10_创建费用1(酒店)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;304884&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;26930413-fbe7-49ac-8bcc-b4c7376598b6&quot;,&#xd;
		&quot;fileName&quot;: &quot;Desert.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/26930413-fbe7-49ac-8bcc-b4c7376598b6-Desert.jpg?Expires=1525749953&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=+QS/vbilsgXdvTWGrNG7Y0ftv+s=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/26930413-fbe7-49ac-8bcc-b4c7376598b6-Desert.jpg?Expires=1525749953&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=+QS/vbilsgXdvTWGrNG7Y0ftv+s=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/26930413-fbe7-49ac-8bcc-b4c7376598b6-Desert.jpg?Expires=1525749953&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=jH4wEnPyb/xx8SrsO1nz1noz6PI=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/26930413-fbe7-49ac-8bcc-b4c7376598b6-Desert.jpg?Expires=1525749953&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=uS2WOKYZMET9ig5QGrsQDxBZPg4=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 845941,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T02:25:53Z&quot;,&#xd;
		&quot;bytes&quot;: null,&#xd;
		&quot;checked&quot;: null,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;酒店&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${hotel_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${hotel_expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;hotel&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.hotel&quot;,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;amount&quot;: 5,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T10:52:38Z&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;事由&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;替票&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 111,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${hotel_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 112,&#xd;
		&quot;name&quot;: &quot;酒店名称&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;三亚喜来登度假酒店\&quot;,\&quot;longitude\&quot;:109.633061,\&quot;latitude\&quot;:18.227359}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;hotel.name&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${hotel_name_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;LONG&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;LONG&quot;,&#xd;
		&quot;mappedColumnId&quot;: 101,&#xd;
		&quot;name&quot;: &quot;入住天数&quot;,&#xd;
		&quot;value&quot;: 2,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;days&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${hotel_days_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1254192484">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用10_获取报销单详情(酒店)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1947514396">&quot;businessCode&quot;:&quot;${businessCode}&quot;</stringProp>
              <stringProp name="402202526">&quot;currencyCode&quot;:&quot;CNY&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取酒店invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">hotel_invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;酒店&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取酒店expenseReportInvoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">hotel_expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[0].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用10_修改费用1(酒店)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceOID&quot;: &quot;${hotel_invoiceOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${hotel_expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${hotel_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;酒店&quot;,&#xd;
	&quot;crossCheckStatus&quot;: null,&#xd;
	&quot;expenseTypeKey&quot;: null,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;hotel&quot;,&#xd;
	&quot;phoneNumber&quot;: null,&#xd;
	&quot;email&quot;: null,&#xd;
	&quot;expenseTypeIconURL&quot;: &quot;${iconURL}&quot;,&#xd;
	&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
	&quot;expenseTypeCategoryDTO&quot;: {&#xd;
		&quot;expenseTypeCategoryOID&quot;: &quot;${hotel_expenseTypeCategoryOID}&quot;,&#xd;
		&quot;name&quot;: &quot;费用类型&quot;,&#xd;
		&quot;code&quot;: null&#xd;
	},&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: 10,&#xd;
	&quot;originalAmount&quot;: 1,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;mobile&quot;: null,&#xd;
	&quot;employeeId&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${hotel_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: &quot;西安&quot;,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;name&quot;: &quot;酒店名称&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;软件新城软件公寓\&quot;,\&quot;longitude\&quot;:108.83882,\&quot;latitude\&quot;:34.21698}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;hotel.name&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${hotel_name_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: &quot;{\&quot;address\&quot;:\&quot;软件新城软件公寓\&quot;,\&quot;longitude\&quot;:108.83882,\&quot;latitude\&quot;:34.21698}&quot;,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;LONG&quot;,&#xd;
		&quot;name&quot;: &quot;入住天数&quot;,&#xd;
		&quot;value&quot;: &quot;1&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;days&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${hotel_days_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: &quot;1&quot;,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
	&quot;comment&quot;: &quot;修改费用测试&quot;,&#xd;
	&quot;warning&quot;: &quot;&quot;,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}&quot;,&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;276381&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;26930413-fbe7-49ac-8bcc-b4c7376598b6&quot;,&#xd;
		&quot;fileName&quot;: &quot;Desert.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/26930413-fbe7-49ac-8bcc-b4c7376598b6-Desert.jpg?Expires=1525749979&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=d8lWgluHjqIKLRuFvJa0XPhd6lU=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/26930413-fbe7-49ac-8bcc-b4c7376598b6-Desert.jpg?Expires=1525749979&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=d8lWgluHjqIKLRuFvJa0XPhd6lU=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/26930413-fbe7-49ac-8bcc-b4c7376598b6-Desert.jpg?Expires=1525749979&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=PPDmSkp9PU+dnC3iiIBQX9loq9s=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/26930413-fbe7-49ac-8bcc-b4c7376598b6-Desert.jpg?Expires=1525749979&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=m8za7S52TzXt6+1LqMOSTcqFuq8=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 845941,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T02:25:54Z&quot;,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: null,&#xd;
	&quot;createTime&quot;: &quot;${createTime}T02:26:13Z&quot;,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;approverId&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;approvalOperates&quot;: null,&#xd;
	&quot;approver&quot;: null,&#xd;
	&quot;referenceId&quot;: null,&#xd;
	&quot;unitPrice&quot;: null,&#xd;
	&quot;number&quot;: null,&#xd;
	&quot;receiptFailType&quot;: null,&#xd;
	&quot;receiptFailReason&quot;: null,&#xd;
	&quot;valid&quot;: false,&#xd;
	&quot;receiptID&quot;: null,&#xd;
	&quot;cardSignType&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;receiptGoodsID&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;invoiceLabelDTOS&quot;: [],&#xd;
	&quot;invoiceLabels&quot;: [{&#xd;
		&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
		&quot;name&quot;: &quot;公司&quot;,&#xd;
		&quot;level&quot;: &quot;INFO&quot;,&#xd;
		&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
		&quot;toast&quot;: null,&#xd;
		&quot;category&quot;: null,&#xd;
		&quot;oldLabel&quot;: false&#xd;
	}],&#xd;
	&quot;companyOID&quot;: null,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: null,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;source&quot;: null,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;checked&quot;: null,&#xd;
	&quot;createInvoice&quot;: true,&#xd;
	&quot;checkWarning&quot;: null,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;digitalInvoiceId&quot;: null,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;originalActualCurrencyRate&quot;: 1,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;actualCurrencyAmount&quot;: 1,&#xd;
	&quot;baseAmount&quot;: 1,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;flightNo&quot;: null,&#xd;
	&quot;apportionUsed&quot;: false,&#xd;
	&quot;expenseApportion&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;amountChanged&quot;: null,&#xd;
	&quot;approvalStatus&quot;: null,&#xd;
	&quot;bankTransactionID&quot;: null,&#xd;
	&quot;expenseCreatedType&quot;: null,&#xd;
	&quot;overDue&quot;: null,&#xd;
	&quot;bankTransactionDetail&quot;: null,&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;subsidyRepeatedFlag&quot;: false,&#xd;
	&quot;orderAmount&quot;: 1,&#xd;
	&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
	&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
	&quot;receiptedStatus&quot;: 0,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;stringCol1&quot;: &quot;西安&quot;,&#xd;
	&quot;stringCol2&quot;: null,&#xd;
	&quot;stringCol3&quot;: null,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;status&quot;: 1000,&#xd;
	&quot;index&quot;: 1,&#xd;
	&quot;preCreatedDate&quot;: &quot;${createTime}T16:00:00Z&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1629056898">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用02_创建费用2(酒店)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;快递&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${express_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${id}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;express&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.express&quot;,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;amount&quot;: 100,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T08:19:53Z&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;办公用品报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 111,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${express_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1254192484">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用10_获取报销单详情(酒店费用2)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;快递&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">AllDetal</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用10_费用2删除(酒店)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/remove/invoice/${expenseReportOID}/${express_invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用10_删除账本里费用2(酒店)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoice/batch?invoiceOIDs=${express_invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用10_计算费用合计(酒店)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&quot;${hotel_invoiceOID}&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoices/summary/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1128799816">&quot;baseCompanyPaymentSum&quot;:10.0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用10_报销单提交(酒店)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${AllDetal}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1235267225">${SuccessSubmit}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单详情" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="594935571">&quot;businessCode&quot;</stringProp>
              <stringProp name="1074092386">&quot;currencyCode&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="需要保存的报销单信息" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">draft;businessCode</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows;$.rows.businessCode</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL;NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取费用信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows.expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;expenseReportInvoices&quot;);
String detal = vars.get(&quot;draft&quot;);


JSONArray expenseReportInvoices = JSON.parseArray(json);
JSONObject draft = JSON.parseObject(detal);
draft.put(&quot;expenseReportInvoices&quot;,expenseReportInvoices);
String str =draft.toString();
vars.put(&quot;draft&quot;,str);


</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交报销单" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${draft}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1297119259">&quot;passFlag&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="拿到提交响应" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">checkResultList</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.checkResultList[0].externalPropertyName</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="报销单提交(大巴)" enabled="true">
          <stringProp name="IfController.condition">&quot;${checkResultList}&quot;  !=&quot;null&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="00再次提交报销单" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${AllDetalNew2}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1235267225">${SuccessSubmit}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="加强制提交" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;draft&quot;);

json = json.replaceAll(&quot;ignoreBudgetWarningFlag\&quot;:false&quot;,&quot;ignoreBudgetWarningFlag\&quot;:true&quot;);
vars.put(&quot;AllDetalNew2&quot;,json);

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用10_报销单撤销(酒店)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${expenseReportOID}&quot;,&quot;entityType&quot;:1002}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/approvals/withdraw</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1849896742">&quot;successNum&quot;:1,&quot;failNum&quot;:0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用10_退出登录 " enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="新建费用报销单(汽油)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1525339456000</longProp>
        <longProp name="ThreadGroup.end_time">1525339456000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="918312701">用户信息</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="获取登录token不成功，再次获取" enabled="true">
          <stringProp name="IfController.condition">&quot;${accessToken}&quot; ==&quot;&quot; || &quot;${accessToken}&quot; ==undefined</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="918312701">用户信息</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用12_获取公司信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/my/companies</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取setOfBooksId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">setOfBooksId;gongsiName</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.setOfBooksId;$.name</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用12_获取所有类型的单据(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/company/my/available/all/?formType=102</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取dailyFormOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">dailyFormOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.formName==&quot;日常报销单&quot;)].formOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用12_获取表单里面的字段(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用12_报销单创建(汽油)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
	&quot;id&quot;: 10952,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: null,&#xd;
	&quot;formType&quot;: 3001,&#xd;
	&quot;asSystem&quot;: false,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T04:34:21Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: null,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1001,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: null,&#xd;
	&quot;companyOID&quot;: &quot;${companyOID}&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;form.description&quot;: &quot;{\&quot;enable\&quot;:false,\&quot;en\&quot;:{\&quot;title\&quot;:\&quot;caption\&quot;,\&quot;content\&quot;:\&quot;content\&quot;},\&quot;zh_cn\&quot;:{\&quot;title\&quot;:\&quot;说明文字\&quot;,\&quot;content\&quot;:\&quot;描述内容\&quot;}}&quot;,&#xd;
		&quot;enableAddSignForSubmitter&quot;: &quot;false&quot;,&#xd;
		&quot;enableAddSign&quot;: &quot;true&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: &quot;${tenantId}&quot;,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${departmentOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;报销单添加费用测试&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/draft</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取businessCode" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">businessCode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;businessCode&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取expenseReportOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseReportOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseReportOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取applicantOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">applicantOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOIDs" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOIDs</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;approverOIDs&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取bizOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">bizOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;bizOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用12_获取费用类型" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}/selected/expense/types?userOID=${userOID}&amp;createManually=true</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1930901582">&quot;entityOID&quot;:&quot;${dailyFormOID}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取汽油expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;汽油&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取汽油expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;汽油&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取汽油expenseTypeCategoryOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;汽油&quot;)].expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取汽油iconURL" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">iconURL</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;汽油&quot;)].iconURL</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].fields.[?(@.name==&quot;城市&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_expenseTypeOID;id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].expenseTypeOID;$..[?(@.name==&quot;快递&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用12_创建费用1(汽油)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;304889&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;e904b324-71ff-465a-8d7b-f4663d327413&quot;,&#xd;
		&quot;fileName&quot;: &quot;Desert.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/e904b324-71ff-465a-8d7b-f4663d327413-Desert.jpg?Expires=1525754105&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=hOQ/F6vfRnm4vEhNeAJOgvGYQuM=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/e904b324-71ff-465a-8d7b-f4663d327413-Desert.jpg?Expires=1525754105&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=hOQ/F6vfRnm4vEhNeAJOgvGYQuM=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/e904b324-71ff-465a-8d7b-f4663d327413-Desert.jpg?Expires=1525754105&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=X6hCRSaaIV+8uKYqvX3e9VuRkKs=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/e904b324-71ff-465a-8d7b-f4663d327413-Desert.jpg?Expires=1525754105&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=aqgQzWfB5yz+uUQncOIduI3jP+8=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 845941,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T03:35:05Z&quot;,&#xd;
		&quot;bytes&quot;: null,&#xd;
		&quot;checked&quot;: null,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;汽油&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;gasoline&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.gasoline&quot;,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;amount&quot;: 5,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T10:55:55Z&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;事由&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;替票&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;data&quot;: [],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1254192484">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用12_获取报销单详情(汽油)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1947514396">&quot;businessCode&quot;:&quot;${businessCode}&quot;</stringProp>
              <stringProp name="402202526">&quot;currencyCode&quot;:&quot;CNY&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取汽油invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;汽油&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取汽油expenseReportInvoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[0].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用12_修改费用1(汽油)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceOID&quot;: &quot;${invoiceOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;汽油&quot;,&#xd;
	&quot;crossCheckStatus&quot;: null,&#xd;
	&quot;expenseTypeKey&quot;: null,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;gasoline&quot;,&#xd;
	&quot;phoneNumber&quot;: null,&#xd;
	&quot;email&quot;: null,&#xd;
	&quot;expenseTypeIconURL&quot;: &quot;${iconURL}&quot;,&#xd;
	&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
	&quot;expenseTypeCategoryDTO&quot;: {&#xd;
		&quot;expenseTypeCategoryOID&quot;: &quot;${expenseTypeCategoryOID}&quot;,&#xd;
		&quot;name&quot;: &quot;费用类型&quot;,&#xd;
		&quot;code&quot;: null&#xd;
	},&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: 10,&#xd;
	&quot;originalAmount&quot;: 1,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;mobile&quot;: null,&#xd;
	&quot;employeeId&quot;: null,&#xd;
	&quot;data&quot;: [],&#xd;
	&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
	&quot;comment&quot;: &quot;修改费用测试&quot;,&#xd;
	&quot;warning&quot;: &quot;&quot;,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}&quot;,&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;276391&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;e904b324-71ff-465a-8d7b-f4663d327413&quot;,&#xd;
		&quot;fileName&quot;: &quot;Desert.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/e904b324-71ff-465a-8d7b-f4663d327413-Desert.jpg?Expires=1525754243&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=Bl1Xl3th/Ajgu5c7rXzJa96Jk5M=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/e904b324-71ff-465a-8d7b-f4663d327413-Desert.jpg?Expires=1525754243&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=Bl1Xl3th/Ajgu5c7rXzJa96Jk5M=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/e904b324-71ff-465a-8d7b-f4663d327413-Desert.jpg?Expires=1525754243&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=Wv1YC/7FuWDiJopFdp+o5ytPncw=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/e904b324-71ff-465a-8d7b-f4663d327413-Desert.jpg?Expires=1525754243&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=P9dK4ti0PH+7b/4YRfBmy3Mpbtw=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 845941,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T03:35:06Z&quot;,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: null,&#xd;
	&quot;createTime&quot;: &quot;${createTime}T03:37:13Z&quot;,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;approverId&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;approvalOperates&quot;: null,&#xd;
	&quot;approver&quot;: null,&#xd;
	&quot;referenceId&quot;: null,&#xd;
	&quot;unitPrice&quot;: null,&#xd;
	&quot;number&quot;: null,&#xd;
	&quot;receiptFailType&quot;: null,&#xd;
	&quot;receiptFailReason&quot;: null,&#xd;
	&quot;valid&quot;: false,&#xd;
	&quot;receiptID&quot;: null,&#xd;
	&quot;cardSignType&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;receiptGoodsID&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;invoiceLabelDTOS&quot;: [],&#xd;
	&quot;invoiceLabels&quot;: [{&#xd;
		&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
		&quot;name&quot;: &quot;公司&quot;,&#xd;
		&quot;level&quot;: &quot;INFO&quot;,&#xd;
		&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
		&quot;toast&quot;: null,&#xd;
		&quot;category&quot;: null,&#xd;
		&quot;oldLabel&quot;: false&#xd;
	}],&#xd;
	&quot;companyOID&quot;: null,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: null,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;source&quot;: null,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;checked&quot;: null,&#xd;
	&quot;createInvoice&quot;: true,&#xd;
	&quot;checkWarning&quot;: null,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;digitalInvoiceId&quot;: null,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;originalActualCurrencyRate&quot;: 1,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;actualCurrencyAmount&quot;: 1,&#xd;
	&quot;baseAmount&quot;: 1,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;flightNo&quot;: null,&#xd;
	&quot;apportionUsed&quot;: false,&#xd;
	&quot;expenseApportion&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;amountChanged&quot;: null,&#xd;
	&quot;approvalStatus&quot;: null,&#xd;
	&quot;bankTransactionID&quot;: null,&#xd;
	&quot;expenseCreatedType&quot;: null,&#xd;
	&quot;overDue&quot;: null,&#xd;
	&quot;bankTransactionDetail&quot;: null,&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;subsidyRepeatedFlag&quot;: false,&#xd;
	&quot;orderAmount&quot;: 1,&#xd;
	&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
	&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
	&quot;receiptedStatus&quot;: 0,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;stringCol1&quot;: null,&#xd;
	&quot;stringCol2&quot;: null,&#xd;
	&quot;stringCol3&quot;: null,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;status&quot;: 1000,&#xd;
	&quot;index&quot;: 1,&#xd;
	&quot;preCreatedDate&quot;: &quot;${createTime}T16:00:00Z&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1629056898">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用02_创建费用2(汽油)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;快递&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${express_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${id}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;express&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.express&quot;,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;amount&quot;: 100,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T08:19:53Z&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;办公用品报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 111,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${express_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1254192484">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用12_获取报销单详情(快递费用2)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;快递&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">AllDetal</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用12_费用2删除(汽油)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/remove/invoice/${expenseReportOID}/${express_invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用12_删除账本里费用2(汽油)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoice/batch?invoiceOIDs=${express_invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用12_计算费用合计(汽油)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&quot;${invoiceOID}&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoices/summary/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1199907754">baseCompanyPaymentSum&quot;:10.0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用12_报销单提交(汽油)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${AllDetal}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1235267225">${SuccessSubmit}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单详情" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="594935571">&quot;businessCode&quot;</stringProp>
              <stringProp name="1074092386">&quot;currencyCode&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="需要保存的报销单信息" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">draft;businessCode</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows;$.rows.businessCode</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL;NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取费用信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows.expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;expenseReportInvoices&quot;);
String detal = vars.get(&quot;draft&quot;);


JSONArray expenseReportInvoices = JSON.parseArray(json);
JSONObject draft = JSON.parseObject(detal);
draft.put(&quot;expenseReportInvoices&quot;,expenseReportInvoices);
String str =draft.toString();
vars.put(&quot;draft&quot;,str);


</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交报销单" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${draft}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1297119259">&quot;passFlag&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="拿到提交响应" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">checkResultList</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.checkResultList[0].externalPropertyName</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="报销单提交(大巴)" enabled="true">
          <stringProp name="IfController.condition">&quot;${checkResultList}&quot;  !=&quot;null&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="00再次提交报销单" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${AllDetalNew2}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1235267225">${SuccessSubmit}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="加强制提交" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;draft&quot;);

json = json.replaceAll(&quot;ignoreBudgetWarningFlag\&quot;:false&quot;,&quot;ignoreBudgetWarningFlag\&quot;:true&quot;);
vars.put(&quot;AllDetalNew2&quot;,json);

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用12_报销单撤销(汽油)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${expenseReportOID}&quot;,&quot;entityType&quot;:1002}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/approvals/withdraw</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1849896742">&quot;successNum&quot;:1,&quot;failNum&quot;:0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用12_退出登录 " enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="新建费用报销单(档案)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1525339456000</longProp>
        <longProp name="ThreadGroup.end_time">1525339456000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="918312701">用户信息</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="获取登录token不成功，再次获取" enabled="true">
          <stringProp name="IfController.condition">&quot;${accessToken}&quot; ==&quot;&quot; || &quot;${accessToken}&quot; ==undefined</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="918312701">用户信息</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用13_获取公司信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/my/companies</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取setOfBooksId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">setOfBooksId;gongsiName</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.setOfBooksId;$.name</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用13_获取所有类型的单据(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/company/my/available/all/?formType=102</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取dailyFormOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">dailyFormOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.formName==&quot;日常报销单&quot;)].formOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用13_获取表单里面的字段(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用13_报销单创建(档案)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
	&quot;id&quot;: 10952,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: null,&#xd;
	&quot;formType&quot;: 3001,&#xd;
	&quot;asSystem&quot;: false,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T04:34:21Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: null,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1001,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: null,&#xd;
	&quot;companyOID&quot;: &quot;${companyOID}&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;form.description&quot;: &quot;{\&quot;enable\&quot;:false,\&quot;en\&quot;:{\&quot;title\&quot;:\&quot;caption\&quot;,\&quot;content\&quot;:\&quot;content\&quot;},\&quot;zh_cn\&quot;:{\&quot;title\&quot;:\&quot;说明文字\&quot;,\&quot;content\&quot;:\&quot;描述内容\&quot;}}&quot;,&#xd;
		&quot;enableAddSignForSubmitter&quot;: &quot;false&quot;,&#xd;
		&quot;enableAddSign&quot;: &quot;true&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: &quot;${tenantId}&quot;,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${departmentOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;报销单添加费用测试&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/draft</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取businessCode" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">businessCode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;businessCode&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取expenseReportOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseReportOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseReportOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取applicantOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">applicantOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOIDs" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOIDs</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;approverOIDs&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取bizOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">bizOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;bizOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用13_获取费用类型" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}/selected/expense/types?userOID=${userOID}&amp;createManually=true</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1930901582">&quot;entityOID&quot;:&quot;${dailyFormOID}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取档案expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;档案&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取档案expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;档案&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取档案expenseTypeCategoryOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;档案&quot;)].expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取档案-开始日期fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">startDate_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;档案&quot;)].fields.[?(@.name==&quot;开始日期&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取档案-结束日期fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">endDate_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;档案&quot;)].fields.[?(@.name==&quot;结束日期&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取档案-参与人fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">participants_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;档案&quot;)].fields.[?(@.name==&quot;参与人&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取档案iconURL" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">iconURL</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;档案&quot;)].iconURL</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].fields.[?(@.name==&quot;城市&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_expenseTypeOID;id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].expenseTypeOID;$..[?(@.name==&quot;快递&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用13_创建费用1(档案)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;304890&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;4f4eb927-cf44-4653-b851-c1b51d9dfac7&quot;,&#xd;
		&quot;fileName&quot;: &quot;Desert.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/4f4eb927-cf44-4653-b851-c1b51d9dfac7-Desert.jpg?Expires=1526357024&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=yIdXrdhGVBfwNtxsuRXJJczWeOc=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/4f4eb927-cf44-4653-b851-c1b51d9dfac7-Desert.jpg?Expires=1526357024&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=yIdXrdhGVBfwNtxsuRXJJczWeOc=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/4f4eb927-cf44-4653-b851-c1b51d9dfac7-Desert.jpg?Expires=1526357024&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=QhFlTIFeMoLW+XMcwwL9VAPsdzI=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/4f4eb927-cf44-4653-b851-c1b51d9dfac7-Desert.jpg?Expires=1526357024&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=dfRIAQc+bH5nZ9hr6oeR+PuMdfk=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 845941,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T03:03:44Z&quot;,&#xd;
		&quot;bytes&quot;: null,&#xd;
		&quot;checked&quot;: null,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;档案&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;file&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.file&quot;,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;amount&quot;: 5,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T11:03:06Z&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;事由&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;替票&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;DATE&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;DATE&quot;,&#xd;
		&quot;mappedColumnId&quot;: 141,&#xd;
		&quot;name&quot;: &quot;开始日期&quot;,&#xd;
		&quot;value&quot;: &quot;${createTime}T19:02:55Z&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;start.date&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${startDate_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;DATE&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;DATE&quot;,&#xd;
		&quot;mappedColumnId&quot;: 142,&#xd;
		&quot;name&quot;: &quot;结束日期&quot;,&#xd;
		&quot;value&quot;: &quot;${createTime}T19:02:57Z&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;end.date&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${endDate_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;PARTICIPANTS&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 171,&#xd;
		&quot;name&quot;: &quot;参与人&quot;,&#xd;
		&quot;value&quot;: &quot;[{\&quot;id\&quot;:\&quot;1089044\&quot;,\&quot;login\&quot;:\&quot;tfqw1033123456\&quot;,\&quot;userOID\&quot;:\&quot;${userOID}\&quot;,\&quot;companyOID\&quot;:\&quot;${companyOID}\&quot;,\&quot;password\&quot;:null,\&quot;fullName\&quot;:\&quot;自动化测试Admin\&quot;,\&quot;firstName\&quot;:null,\&quot;lastName\&quot;:null,\&quot;email\&quot;:\&quot;autoadmin@huilianyi.com\&quot;,\&quot;mobile\&quot;:\&quot;${username}\&quot;,\&quot;mobileStatus\&quot;:\&quot;not.validate\&quot;,\&quot;employeeID\&quot;:\&quot;123456\&quot;,\&quot;title\&quot;:null,\&quot;activated\&quot;:true,\&quot;authorities\&quot;:[\&quot;ROLE_COMPANY_ADMIN\&quot;,\&quot;ROLE_USER\&quot;,\&quot;ROLE_COMPANY_FINANCE_ADMIN\&quot;,\&quot;ROLE_DATA_ADMIN\&quot;,\&quot;ROLE_COMPANY_BOOK_ADMIN\&quot;,\&quot;ROLE_TENANT_ADMIN\&quot;],\&quot;departmentOID\&quot;:\&quot;${departmentOID}\&quot;,\&quot;departmentName\&quot;:\&quot;HLY自动化测试团\&quot;,\&quot;filePath\&quot;:null,\&quot;avatar\&quot;:null,\&quot;status\&quot;:null,\&quot;companyName\&quot;:\&quot;HLY自动化测试团\&quot;,\&quot;corporationOID\&quot;:\&quot;${corporationOID}\&quot;,\&quot;setOfBooksCode\&quot;:null,\&quot;language\&quot;:\&quot;zh_CN\&quot;,\&quot;pageRoles\&quot;:[{\&quot;pageName\&quot;:\&quot;FINANCEMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;EXPENSEAUDIT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;RECEIPTEDINVOICES\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;EXPENSEPAYMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;LOANMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;LOANGLOBALVIEW\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;REPAYMENTSLIPMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;LOANBILLMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;PAYMENTBATCH\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;EXPENSEVIEW\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;VENDORRECONCILIATION\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;VENDORMAINTENANCE\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;PRINTINVOICEBATCH\&quot;,\&quot;action\&quot;:2}],\&quot;financeRoleOID\&quot;:\&quot;b17b0771-1d03-4d9c-a0fe-02542abfa330\&quot;,\&quot;companyId\&quot;:933,\&quot;tenantId\&quot;:\&quot;${tenantId}\&quot;,\&quot;companyAccountCode\&quot;:null,\&quot;gender\&quot;:1,\&quot;deviceValidate\&quot;:false,\&quot;directManager\&quot;:null,\&quot;directManagerId\&quot;:null,\&quot;directManagerName\&quot;:null,\&quot;departmentPath\&quot;:null,\&quot;pcfpMode\&quot;:9001,\&quot;countryCode\&quot;:\&quot;86\&quot;,\&quot;resetPassword\&quot;:false,\&quot;rankCode\&quot;:null,\&quot;dutyCode\&quot;:null,\&quot;employeeTypeCode\&quot;:null,\&quot;senior\&quot;:false,\&quot;deleted\&quot;:false}]&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;participants&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${participants_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1254192484">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用13_获取报销单详情(档案)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1947514396">&quot;businessCode&quot;:&quot;${businessCode}&quot;</stringProp>
              <stringProp name="402202526">&quot;currencyCode&quot;:&quot;CNY&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取档案invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;档案&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取档案expenseReportInvoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[0].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">AllDetal</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用13_修改费用1(档案)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceOID&quot;: &quot;${invoiceOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;档案&quot;,&#xd;
	&quot;crossCheckStatus&quot;: 1,&#xd;
	&quot;expenseTypeKey&quot;: null,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;file&quot;,&#xd;
	&quot;phoneNumber&quot;: null,&#xd;
	&quot;email&quot;: null,&#xd;
	&quot;expenseTypeIconURL&quot;: &quot;${iconURL}&quot;,&#xd;
	&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
	&quot;expenseTypeCategoryDTO&quot;: {&#xd;
		&quot;expenseTypeCategoryOID&quot;: &quot;${expenseTypeCategoryOID}&quot;,&#xd;
		&quot;name&quot;: &quot;费用类型&quot;,&#xd;
		&quot;code&quot;: null&#xd;
	},&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: 12,&#xd;
	&quot;originalAmount&quot;: 12,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;mobile&quot;: null,&#xd;
	&quot;employeeId&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;DATE&quot;,&#xd;
		&quot;name&quot;: &quot;开始日期&quot;,&#xd;
		&quot;value&quot;: &quot;2018-05-15T11:03:49Z&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;start.date&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: null,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${startDate_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: &quot;2018-05-15T03:03:49Z&quot;,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;DATE&quot;,&#xd;
		&quot;name&quot;: &quot;结束日期&quot;,&#xd;
		&quot;value&quot;: &quot;2018-05-19T11:03:55Z&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;end.date&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: null,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${endDate_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: &quot;2018-05-19T03:03:55Z&quot;,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;PARTICIPANTS&quot;,&#xd;
		&quot;name&quot;: &quot;参与人&quot;,&#xd;
		&quot;value&quot;: &quot;[{\&quot;id\&quot;:\&quot;197249\&quot;,\&quot;login\&quot;:\&quot;${login}\&quot;,\&quot;userOID\&quot;:\&quot;${userOID}\&quot;,\&quot;companyOID\&quot;:\&quot;${companyOID}\&quot;,\&quot;password\&quot;:null,\&quot;fullName\&quot;:\&quot;${fullName}\&quot;,\&quot;firstName\&quot;:null,\&quot;lastName\&quot;:null,\&quot;email\&quot;:\&quot;${email}\&quot;,\&quot;mobile\&quot;:\&quot;${mobile}\&quot;,\&quot;employeeID\&quot;:\&quot;${employeeID}\&quot;,\&quot;title\&quot;:null,\&quot;activated\&quot;:true,\&quot;authorities\&quot;:[\&quot;ROLE_COMPANY_ADMIN\&quot;,\&quot;ROLE_USER\&quot;,\&quot;ROLE_COMPANY_FINANCE_ADMIN\&quot;,\&quot;ROLE_TENANT_ADMIN\&quot;],\&quot;departmentOID\&quot;:\&quot;${departmentOID}\&quot;,\&quot;departmentName\&quot;:\&quot;HLY自动化\&quot;,\&quot;filePath\&quot;:null,\&quot;avatar\&quot;:null,\&quot;status\&quot;:null,\&quot;companyName\&quot;:\&quot;HLY自动化\&quot;,\&quot;corporationOID\&quot;:\&quot;${corporationOID}\&quot;,\&quot;language\&quot;:\&quot;zh_CN\&quot;,\&quot;pageRoles\&quot;:[{\&quot;pageName\&quot;:\&quot;FINANCEMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;EXPENSEAUDIT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;RECEIPTEDINVOICES\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;EXPENSEPAYMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;LOANMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;LOANGLOBALVIEW\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;REPAYMENTSLIPMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;LOANBILLMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;PAYMENTBATCH\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;EXPENSEVIEW\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;VENDORRECONCILIATION\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;VENDORMAINTENANCE\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;PRINTINVOICEBATCH\&quot;,\&quot;action\&quot;:2}],\&quot;financeRoleOID\&quot;:\&quot;adeeed31-b361-480e-8b03-8d71deef3723\&quot;,\&quot;companyId\&quot;:889138,\&quot;tenantId\&quot;:\&quot;${tenantId}\&quot;,\&quot;directManager\&quot;:null,\&quot;directManagerId\&quot;:null,\&quot;directManagerName\&quot;:null,\&quot;departmentPath\&quot;:null,\&quot;senior\&quot;:false,\&quot;deleted\&quot;:false}]&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;participants&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: null,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${participants_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: &quot;[{\&quot;id\&quot;:\&quot;197249\&quot;,\&quot;login\&quot;:\&quot;${login}\&quot;,\&quot;userOID\&quot;:\&quot;${userOID}\&quot;,\&quot;companyOID\&quot;:\&quot;${companyOID}\&quot;,\&quot;password\&quot;:null,\&quot;fullName\&quot;:\&quot;${fullName}\&quot;,\&quot;firstName\&quot;:null,\&quot;lastName\&quot;:null,\&quot;email\&quot;:\&quot;${email}\&quot;,\&quot;mobile\&quot;:\&quot;${mobile}\&quot;,\&quot;employeeID\&quot;:\&quot;${employeeID}\&quot;,\&quot;title\&quot;:null,\&quot;activated\&quot;:true,\&quot;authorities\&quot;:[\&quot;ROLE_COMPANY_ADMIN\&quot;,\&quot;ROLE_USER\&quot;,\&quot;ROLE_COMPANY_FINANCE_ADMIN\&quot;,\&quot;ROLE_TENANT_ADMIN\&quot;],\&quot;departmentOID\&quot;:\&quot;${departmentOID}\&quot;,\&quot;departmentName\&quot;:\&quot;HLY自动化\&quot;,\&quot;filePath\&quot;:null,\&quot;avatar\&quot;:null,\&quot;status\&quot;:null,\&quot;companyName\&quot;:\&quot;HLY自动化\&quot;,\&quot;corporationOID\&quot;:\&quot;${corporationOID}\&quot;,\&quot;language\&quot;:\&quot;zh_CN\&quot;,\&quot;pageRoles\&quot;:[{\&quot;pageName\&quot;:\&quot;FINANCEMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;EXPENSEAUDIT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;RECEIPTEDINVOICES\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;EXPENSEPAYMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;LOANMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;LOANGLOBALVIEW\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;REPAYMENTSLIPMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;LOANBILLMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;PAYMENTBATCH\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;EXPENSEVIEW\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;VENDORRECONCILIATION\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;VENDORMAINTENANCE\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;PRINTINVOICEBATCH\&quot;,\&quot;action\&quot;:2}],\&quot;financeRoleOID\&quot;:\&quot;adeeed31-b361-480e-8b03-8d71deef3723\&quot;,\&quot;companyId\&quot;:889138,\&quot;tenantId\&quot;:\&quot;${tenantId}\&quot;,\&quot;directManager\&quot;:null,\&quot;directManagerId\&quot;:null,\&quot;directManagerName\&quot;:null,\&quot;departmentPath\&quot;:null,\&quot;senior\&quot;:false,\&quot;deleted\&quot;:false}]&quot;,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
	&quot;comment&quot;: &quot;修改费用测试&quot;,&#xd;
	&quot;warning&quot;: &quot;&quot;,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}&quot;,&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;277021&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;4f4eb927-cf44-4653-b851-c1b51d9dfac7&quot;,&#xd;
		&quot;fileName&quot;: &quot;Desert.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/4f4eb927-cf44-4653-b851-c1b51d9dfac7-Desert.jpg?Expires=1526357033&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=JAeBxtQCW3mLkiGR5MIPDOUmA8k=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/4f4eb927-cf44-4653-b851-c1b51d9dfac7-Desert.jpg?Expires=1526357033&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=JAeBxtQCW3mLkiGR5MIPDOUmA8k=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/4f4eb927-cf44-4653-b851-c1b51d9dfac7-Desert.jpg?Expires=1526357033&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=yanfpt8jjQQKxquh33y7WZQ01Ss=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/4f4eb927-cf44-4653-b851-c1b51d9dfac7-Desert.jpg?Expires=1526357033&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=sXdPIXzubWG3Td5G/xT92xIPpzM=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 845941,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T03:03:45Z&quot;,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: null,&#xd;
	&quot;createTime&quot;: &quot;${createTime}T03:03:52Z&quot;,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;approverId&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;approvalOperates&quot;: null,&#xd;
	&quot;approver&quot;: null,&#xd;
	&quot;referenceId&quot;: null,&#xd;
	&quot;unitPrice&quot;: null,&#xd;
	&quot;number&quot;: null,&#xd;
	&quot;receiptFailType&quot;: null,&#xd;
	&quot;receiptFailReason&quot;: null,&#xd;
	&quot;valid&quot;: false,&#xd;
	&quot;receiptID&quot;: null,&#xd;
	&quot;cardSignType&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;receiptGoodsID&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;invoiceLabelDTOS&quot;: [],&#xd;
	&quot;invoiceLabels&quot;: [{&#xd;
		&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
		&quot;name&quot;: &quot;公司&quot;,&#xd;
		&quot;level&quot;: &quot;INFO&quot;,&#xd;
		&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
		&quot;toast&quot;: null,&#xd;
		&quot;category&quot;: null,&#xd;
		&quot;oldLabel&quot;: false&#xd;
	}],&#xd;
	&quot;companyOID&quot;: null,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: null,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;source&quot;: null,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;checked&quot;: null,&#xd;
	&quot;createInvoice&quot;: true,&#xd;
	&quot;checkWarning&quot;: null,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;digitalInvoiceId&quot;: null,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;originalActualCurrencyRate&quot;: 1,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;actualCurrencyAmount&quot;: 12,&#xd;
	&quot;baseAmount&quot;: 12,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;flightNo&quot;: null,&#xd;
	&quot;apportionUsed&quot;: false,&#xd;
	&quot;expenseApportion&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;amountChanged&quot;: null,&#xd;
	&quot;approvalStatus&quot;: null,&#xd;
	&quot;bankTransactionID&quot;: null,&#xd;
	&quot;expenseCreatedType&quot;: null,&#xd;
	&quot;overDue&quot;: null,&#xd;
	&quot;bankTransactionDetail&quot;: null,&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;subsidyRepeatedFlag&quot;: false,&#xd;
	&quot;orderAmount&quot;: 12,&#xd;
	&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
	&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
	&quot;receiptedStatus&quot;: 0,&#xd;
	&quot;stringCol3&quot;: null,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;stringCol1&quot;: null,&#xd;
	&quot;stringCol2&quot;: null,&#xd;
	&quot;status&quot;: 1000,&#xd;
	&quot;index&quot;: 1,&#xd;
	&quot;preCreatedDate&quot;: &quot;${createTime}T16:00:00Z&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1629056898">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用02_创建费用2(档案)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;快递&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${express_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${id}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;express&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.express&quot;,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;amount&quot;: 100,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T08:19:53Z&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;办公用品报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 111,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${express_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1254192484">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用13_获取报销单详情(快递费用2)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;快递&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">AllDetal</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用13_费用2删除(档案)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/remove/invoice/${expenseReportOID}/${express_invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用13_删除账本里费用2(档案)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoice/batch?invoiceOIDs=${express_invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用13_计算费用合计(档案)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&quot;${invoiceOID}&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoices/summary/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1128801738">&quot;baseCompanyPaymentSum&quot;:12.0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单提交(档案)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${AllDetal}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">checkResultList</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.checkResultList[0].externalPropertyName</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="拿到提交响应" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">checkResultList</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.checkResultList[0].externalPropertyName</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果（If）控制器" enabled="false">
          <stringProp name="IfController.condition">&quot;${checkResultList}&quot;  !=&quot;null&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="费用报销单关联多申请单-账本导入费用_提交报销单" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${AllDetalNew2}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1235267225">${SuccessSubmit}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;AllDetal&quot;);
log.info(&quot;AllDetal:&quot;+json);
str = json.replaceAll(&quot;ignoreBudgetWarningFlag\&quot;:false&quot;,&quot;ignoreBudgetWarningFlag\&quot;:true&quot;);
vars.put(&quot;AllDetalNew2&quot;,str);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">checkResultList</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.checkResultList</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单详情" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="594935571">&quot;businessCode&quot;</stringProp>
              <stringProp name="1074092386">&quot;currencyCode&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="需要保存的报销单信息" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">draft;businessCode</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows;$.rows.businessCode</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL;NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取费用信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows.expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;expenseReportInvoices&quot;);
String detal = vars.get(&quot;draft&quot;);


JSONArray expenseReportInvoices = JSON.parseArray(json);
JSONObject draft = JSON.parseObject(detal);
draft.put(&quot;expenseReportInvoices&quot;,expenseReportInvoices);
String str =draft.toString();
vars.put(&quot;draft&quot;,str);


</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交报销单" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${draft}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1297119259">&quot;passFlag&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="拿到提交响应" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">checkResultList</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.checkResultList[0].externalPropertyName</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="报销单提交(大巴)" enabled="true">
          <stringProp name="IfController.condition">&quot;${checkResultList}&quot;  !=&quot;null&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="00再次提交报销单" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${AllDetalNew2}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1235267225">${SuccessSubmit}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="加强制提交" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;draft&quot;);

json = json.replaceAll(&quot;ignoreBudgetWarningFlag\&quot;:false&quot;,&quot;ignoreBudgetWarningFlag\&quot;:true&quot;);
vars.put(&quot;AllDetalNew2&quot;,json);

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单撤销(档案)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${expenseReportOID}&quot;,&quot;entityType&quot;:1002}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/approvals/withdraw</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1849896742">&quot;successNum&quot;:1,&quot;failNum&quot;:0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="新建费用报销单(体检)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1525339456000</longProp>
        <longProp name="ThreadGroup.end_time">1525339456000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="918312701">用户信息</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="获取登录token不成功，再次获取" enabled="true">
          <stringProp name="IfController.condition">&quot;${accessToken}&quot; ==&quot;&quot; || &quot;${accessToken}&quot; ==undefined</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="918312701">用户信息</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用14_获取公司信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/my/companies</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取setOfBooksId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">setOfBooksId;gongsiName</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.setOfBooksId;$.name</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用14_获取所有类型的单据(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/company/my/available/all/?formType=102</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取dailyFormOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">dailyFormOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.formName==&quot;日常报销单&quot;)].formOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用14_获取表单里面的字段(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用14_报销单创建(体检)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
	&quot;id&quot;: 10952,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: null,&#xd;
	&quot;formType&quot;: 3001,&#xd;
	&quot;asSystem&quot;: false,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T04:34:21Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: null,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1001,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: null,&#xd;
	&quot;companyOID&quot;: &quot;${companyOID}&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;form.description&quot;: &quot;{\&quot;enable\&quot;:false,\&quot;en\&quot;:{\&quot;title\&quot;:\&quot;caption\&quot;,\&quot;content\&quot;:\&quot;content\&quot;},\&quot;zh_cn\&quot;:{\&quot;title\&quot;:\&quot;说明文字\&quot;,\&quot;content\&quot;:\&quot;描述内容\&quot;}}&quot;,&#xd;
		&quot;enableAddSignForSubmitter&quot;: &quot;false&quot;,&#xd;
		&quot;enableAddSign&quot;: &quot;true&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: &quot;${tenantId}&quot;,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${departmentOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;报销单添加费用测试&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/draft</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取businessCode" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">businessCode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;businessCode&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取expenseReportOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseReportOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseReportOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取applicantOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">applicantOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOIDs" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOIDs</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;approverOIDs&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取bizOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">bizOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;bizOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用14_获取费用类型" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}/selected/expense/types?userOID=${userOID}&amp;createManually=true</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1930901582">&quot;entityOID&quot;:&quot;${dailyFormOID}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取体检expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;体检&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取体检expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;体检&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取体检expenseTypeCategoryOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;体检&quot;)].expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取体检-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;体检&quot;)].fields.[?(@.name==&quot;城市&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取体检iconURL" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">iconURL</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;体检&quot;)].iconURL</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].fields.[?(@.name==&quot;城市&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_expenseTypeOID;id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].expenseTypeOID;$..[?(@.name==&quot;快递&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用14_创建费用1(体检)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;304892&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;4db565c7-b5a7-4df2-b7f9-22e2c70ae0b8&quot;,&#xd;
		&quot;fileName&quot;: &quot;Desert.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/4db565c7-b5a7-4df2-b7f9-22e2c70ae0b8-Desert.jpg?Expires=1525771021&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=apwaCd8iTsS6ERi6WbFFXfF74bI=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/4db565c7-b5a7-4df2-b7f9-22e2c70ae0b8-Desert.jpg?Expires=1525771021&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=apwaCd8iTsS6ERi6WbFFXfF74bI=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/4db565c7-b5a7-4df2-b7f9-22e2c70ae0b8-Desert.jpg?Expires=1525771021&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=wBpJt5IqS2iZuzvERy2YakKlnNA=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/4db565c7-b5a7-4df2-b7f9-22e2c70ae0b8-Desert.jpg?Expires=1525771021&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=ymHcWRrMy6T65jz8XcInfNzoGOc=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 845941,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T08:17:01Z&quot;,&#xd;
		&quot;bytes&quot;: null,&#xd;
		&quot;checked&quot;: null,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;体检&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;examination&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.examination&quot;,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;amount&quot;: 5,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T11:04:59Z&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;事由&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;替票&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 111,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1254192484">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用14_获取报销单详情(体检)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1947514396">&quot;businessCode&quot;:&quot;${businessCode}&quot;</stringProp>
              <stringProp name="402202526">&quot;currencyCode&quot;:&quot;CNY&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取体检invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;体检&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取体检expenseReportInvoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[0].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用14_修改费用1(体检)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceOID&quot;: &quot;${invoiceOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;体检&quot;,&#xd;
	&quot;crossCheckStatus&quot;: null,&#xd;
	&quot;expenseTypeKey&quot;: null,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;examination&quot;,&#xd;
	&quot;phoneNumber&quot;: null,&#xd;
	&quot;email&quot;: null,&#xd;
	&quot;expenseTypeIconURL&quot;: &quot;${iconURL}&quot;,&#xd;
	&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
	&quot;expenseTypeCategoryDTO&quot;: {&#xd;
		&quot;expenseTypeCategoryOID&quot;: &quot;${expenseTypeCategoryOID}&quot;,&#xd;
		&quot;name&quot;: &quot;费用类型&quot;,&#xd;
		&quot;code&quot;: null&#xd;
	},&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: 10,&#xd;
	&quot;originalAmount&quot;: 1,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;mobile&quot;: null,&#xd;
	&quot;employeeId&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: &quot;西安&quot;,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
	&quot;comment&quot;: &quot;修改费用测试&quot;,&#xd;
	&quot;warning&quot;: &quot;&quot;,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}&quot;,&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;276452&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;4db565c7-b5a7-4df2-b7f9-22e2c70ae0b8&quot;,&#xd;
		&quot;fileName&quot;: &quot;Desert.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/4db565c7-b5a7-4df2-b7f9-22e2c70ae0b8-Desert.jpg?Expires=1525771050&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=8U4+Z0/5tcXx+qwGyQ2ayKM9RVE=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/4db565c7-b5a7-4df2-b7f9-22e2c70ae0b8-Desert.jpg?Expires=1525771050&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=8U4+Z0/5tcXx+qwGyQ2ayKM9RVE=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/4db565c7-b5a7-4df2-b7f9-22e2c70ae0b8-Desert.jpg?Expires=1525771050&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=seD3w3sIWOZNn/4A+i44qVJfMj8=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/4db565c7-b5a7-4df2-b7f9-22e2c70ae0b8-Desert.jpg?Expires=1525771050&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=Y9RnMzNfRYRmbA/tfYbqZW2qSsE=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 845941,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T08:17:01Z&quot;,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: null,&#xd;
	&quot;createTime&quot;: &quot;${createTime}T08:17:23Z&quot;,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;approverId&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;approvalOperates&quot;: null,&#xd;
	&quot;approver&quot;: null,&#xd;
	&quot;referenceId&quot;: null,&#xd;
	&quot;unitPrice&quot;: null,&#xd;
	&quot;number&quot;: null,&#xd;
	&quot;receiptFailType&quot;: null,&#xd;
	&quot;receiptFailReason&quot;: null,&#xd;
	&quot;valid&quot;: false,&#xd;
	&quot;receiptID&quot;: null,&#xd;
	&quot;cardSignType&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;receiptGoodsID&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;invoiceLabelDTOS&quot;: [],&#xd;
	&quot;invoiceLabels&quot;: [{&#xd;
		&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
		&quot;name&quot;: &quot;公司&quot;,&#xd;
		&quot;level&quot;: &quot;INFO&quot;,&#xd;
		&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
		&quot;toast&quot;: null,&#xd;
		&quot;category&quot;: null,&#xd;
		&quot;oldLabel&quot;: false&#xd;
	}],&#xd;
	&quot;companyOID&quot;: null,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: null,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;source&quot;: null,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;checked&quot;: null,&#xd;
	&quot;createInvoice&quot;: true,&#xd;
	&quot;checkWarning&quot;: null,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;digitalInvoiceId&quot;: null,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;originalActualCurrencyRate&quot;: 1,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;actualCurrencyAmount&quot;: 1,&#xd;
	&quot;baseAmount&quot;: 1,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;flightNo&quot;: null,&#xd;
	&quot;apportionUsed&quot;: false,&#xd;
	&quot;expenseApportion&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;amountChanged&quot;: null,&#xd;
	&quot;approvalStatus&quot;: null,&#xd;
	&quot;bankTransactionID&quot;: null,&#xd;
	&quot;expenseCreatedType&quot;: null,&#xd;
	&quot;overDue&quot;: null,&#xd;
	&quot;bankTransactionDetail&quot;: null,&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;subsidyRepeatedFlag&quot;: false,&#xd;
	&quot;orderAmount&quot;: 1,&#xd;
	&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
	&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
	&quot;receiptedStatus&quot;: 0,&#xd;
	&quot;stringCol3&quot;: null,&#xd;
	&quot;stringCol1&quot;: &quot;西安&quot;,&#xd;
	&quot;stringCol2&quot;: null,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;status&quot;: 1000,&#xd;
	&quot;index&quot;: 1,&#xd;
	&quot;preCreatedDate&quot;: &quot;${createTime}T16:00:00Z&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1629056898">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用02_创建费用2(体检)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;快递&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${express_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${id}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;express&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.express&quot;,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;amount&quot;: 100,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T08:19:53Z&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;办公用品报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 111,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${express_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1254192484">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用14_获取报销单详情(体检费用2)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;快递&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">AllDetal</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用14_费用2删除(体检)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/remove/invoice/${expenseReportOID}/${express_invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用14_删除账本里费用2(体检)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoice/batch?invoiceOIDs=${express_invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用14_计算费用合计(体检)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&quot;${invoiceOID}&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoices/summary/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1128799816">&quot;baseCompanyPaymentSum&quot;:10.0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用14_报销单提交(体检)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${AllDetal}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1235267225">${SuccessSubmit}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单详情" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="594935571">&quot;businessCode&quot;</stringProp>
              <stringProp name="1074092386">&quot;currencyCode&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="需要保存的报销单信息" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">draft;businessCode</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows;$.rows.businessCode</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL;NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取费用信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows.expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;expenseReportInvoices&quot;);
String detal = vars.get(&quot;draft&quot;);


JSONArray expenseReportInvoices = JSON.parseArray(json);
JSONObject draft = JSON.parseObject(detal);
draft.put(&quot;expenseReportInvoices&quot;,expenseReportInvoices);
String str =draft.toString();
vars.put(&quot;draft&quot;,str);


</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交报销单" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${draft}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1297119259">&quot;passFlag&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="拿到提交响应" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">checkResultList</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.checkResultList[0].externalPropertyName</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="报销单提交(大巴)" enabled="true">
          <stringProp name="IfController.condition">&quot;${checkResultList}&quot;  !=&quot;null&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="00再次提交报销单" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${AllDetalNew2}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1235267225">${SuccessSubmit}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="加强制提交" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;draft&quot;);

json = json.replaceAll(&quot;ignoreBudgetWarningFlag\&quot;:false&quot;,&quot;ignoreBudgetWarningFlag\&quot;:true&quot;);
vars.put(&quot;AllDetalNew2&quot;,json);

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用14_报销单撤销(体检)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${expenseReportOID}&quot;,&quot;entityType&quot;:1002}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/approvals/withdraw</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1849896742">&quot;successNum&quot;:1,&quot;failNum&quot;:0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="新建费用报销单(签证)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1525339456000</longProp>
        <longProp name="ThreadGroup.end_time">1525339456000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="918312701">用户信息</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="获取登录token不成功，再次获取" enabled="true">
          <stringProp name="IfController.condition">&quot;${accessToken}&quot; ==&quot;&quot; || &quot;${accessToken}&quot; ==undefined</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="918312701">用户信息</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用15_获取公司信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/my/companies</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取setOfBooksId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">setOfBooksId;gongsiName</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.setOfBooksId;$.name</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用15_获取所有类型的单据(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/company/my/available/all/?formType=102</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取dailyFormOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">dailyFormOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.formName==&quot;日常报销单&quot;)].formOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用15_获取表单里面的字段(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用15_报销单创建(签证)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
	&quot;id&quot;: 10952,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: null,&#xd;
	&quot;formType&quot;: 3001,&#xd;
	&quot;asSystem&quot;: false,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T04:34:21Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: null,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1001,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: null,&#xd;
	&quot;companyOID&quot;: &quot;${companyOID}&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;form.description&quot;: &quot;{\&quot;enable\&quot;:false,\&quot;en\&quot;:{\&quot;title\&quot;:\&quot;caption\&quot;,\&quot;content\&quot;:\&quot;content\&quot;},\&quot;zh_cn\&quot;:{\&quot;title\&quot;:\&quot;说明文字\&quot;,\&quot;content\&quot;:\&quot;描述内容\&quot;}}&quot;,&#xd;
		&quot;enableAddSignForSubmitter&quot;: &quot;false&quot;,&#xd;
		&quot;enableAddSign&quot;: &quot;true&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: &quot;${tenantId}&quot;,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${departmentOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;报销单添加费用测试&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/draft</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取businessCode" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">businessCode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;businessCode&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取expenseReportOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseReportOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseReportOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取applicantOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">applicantOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOIDs" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOIDs</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;approverOIDs&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取bizOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">bizOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;bizOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用15_获取费用类型" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}/selected/expense/types?userOID=${userOID}&amp;createManually=true</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1930901582">&quot;entityOID&quot;:&quot;${dailyFormOID}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取签证expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;签证&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取签证expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;签证&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取签证expenseTypeCategoryOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;签证&quot;)].expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取签证-国家fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">country_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;签证&quot;)].fields.[?(@.name==&quot;国家&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取签证iconURL" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">iconURL</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;签证&quot;)].iconURL</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].fields.[?(@.name==&quot;城市&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_expenseTypeOID;id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].expenseTypeOID;$..[?(@.name==&quot;快递&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用15_创建费用1(签证)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;304893&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;e8321935-c02a-4cfb-8a69-af61d31f0a73&quot;,&#xd;
		&quot;fileName&quot;: &quot;Desert.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/e8321935-c02a-4cfb-8a69-af61d31f0a73-Desert.jpg?Expires=1525775211&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=ya7HNJi0yz8LokEctiz2XN4I9JI=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/e8321935-c02a-4cfb-8a69-af61d31f0a73-Desert.jpg?Expires=1525775211&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=ya7HNJi0yz8LokEctiz2XN4I9JI=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/e8321935-c02a-4cfb-8a69-af61d31f0a73-Desert.jpg?Expires=1525775211&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=fDANaPqegiiLK5vT0870qL/+X2U=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/e8321935-c02a-4cfb-8a69-af61d31f0a73-Desert.jpg?Expires=1525775211&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=sBPkV2DDxtuTpwcObI7hu5IfvD8=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 845941,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T09:26:51Z&quot;,&#xd;
		&quot;bytes&quot;: null,&#xd;
		&quot;checked&quot;: null,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;签证&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;visa&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.visa&quot;,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;amount&quot;: 5,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T11:06:34Z&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;事由&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;替票&quot;,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 111,&#xd;
		&quot;name&quot;: &quot;国家&quot;,&#xd;
		&quot;value&quot;: &quot;中国&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;country&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${country_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1254192484">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用15_获取报销单详情(签证)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1947514396">&quot;businessCode&quot;:&quot;${businessCode}&quot;</stringProp>
              <stringProp name="402202526">&quot;currencyCode&quot;:&quot;CNY&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取签证invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;签证&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取签证expenseReportInvoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[0].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用15_修改费用1(签证)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceOID&quot;: &quot;${invoiceOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;签证&quot;,&#xd;
	&quot;crossCheckStatus&quot;: null,&#xd;
	&quot;expenseTypeKey&quot;: null,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;visa&quot;,&#xd;
	&quot;phoneNumber&quot;: null,&#xd;
	&quot;email&quot;: null,&#xd;
	&quot;expenseTypeIconURL&quot;: &quot;${iconURL}&quot;,&#xd;
	&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
	&quot;expenseTypeCategoryDTO&quot;: {&#xd;
		&quot;expenseTypeCategoryOID&quot;: &quot;${expenseTypeCategoryOID}&quot;,&#xd;
		&quot;name&quot;: &quot;费用类型&quot;,&#xd;
		&quot;code&quot;: null&#xd;
	},&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: 10,&#xd;
	&quot;originalAmount&quot;: 1,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;mobile&quot;: null,&#xd;
	&quot;employeeId&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;国家&quot;,&#xd;
		&quot;value&quot;: &quot;中国&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;country&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${country_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: &quot;中国&quot;,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
	&quot;comment&quot;: &quot;修改费用测试&quot;,&#xd;
	&quot;warning&quot;: &quot;&quot;,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}&quot;,&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;276470&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;e8321935-c02a-4cfb-8a69-af61d31f0a73&quot;,&#xd;
		&quot;fileName&quot;: &quot;Desert.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/e8321935-c02a-4cfb-8a69-af61d31f0a73-Desert.jpg?Expires=1525775226&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=cMBdWMffrfCwe3VN1l2Irp797zw=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/e8321935-c02a-4cfb-8a69-af61d31f0a73-Desert.jpg?Expires=1525775226&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=cMBdWMffrfCwe3VN1l2Irp797zw=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/e8321935-c02a-4cfb-8a69-af61d31f0a73-Desert.jpg?Expires=1525775226&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=/hU3pdvJSRYrmvnIW4fvDVF6WLk=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/e8321935-c02a-4cfb-8a69-af61d31f0a73-Desert.jpg?Expires=1525775226&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=U+qFuswcju7DTVTZE2i/x64Stzg=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 845941,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T09:26:51Z&quot;,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: null,&#xd;
	&quot;createTime&quot;: &quot;${createTime}T09:27:04Z&quot;,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;approverId&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;approvalOperates&quot;: null,&#xd;
	&quot;approver&quot;: null,&#xd;
	&quot;referenceId&quot;: null,&#xd;
	&quot;unitPrice&quot;: null,&#xd;
	&quot;number&quot;: null,&#xd;
	&quot;receiptFailType&quot;: null,&#xd;
	&quot;receiptFailReason&quot;: null,&#xd;
	&quot;valid&quot;: false,&#xd;
	&quot;receiptID&quot;: null,&#xd;
	&quot;cardSignType&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;receiptGoodsID&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;invoiceLabelDTOS&quot;: [],&#xd;
	&quot;invoiceLabels&quot;: [{&#xd;
		&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
		&quot;name&quot;: &quot;公司&quot;,&#xd;
		&quot;level&quot;: &quot;INFO&quot;,&#xd;
		&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
		&quot;toast&quot;: null,&#xd;
		&quot;category&quot;: null,&#xd;
		&quot;oldLabel&quot;: false&#xd;
	}],&#xd;
	&quot;companyOID&quot;: null,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: null,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;source&quot;: null,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;checked&quot;: null,&#xd;
	&quot;createInvoice&quot;: true,&#xd;
	&quot;checkWarning&quot;: null,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;digitalInvoiceId&quot;: null,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;originalActualCurrencyRate&quot;: 1,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;actualCurrencyAmount&quot;: 1,&#xd;
	&quot;baseAmount&quot;: 1,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;flightNo&quot;: null,&#xd;
	&quot;apportionUsed&quot;: false,&#xd;
	&quot;expenseApportion&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;amountChanged&quot;: null,&#xd;
	&quot;approvalStatus&quot;: null,&#xd;
	&quot;bankTransactionID&quot;: null,&#xd;
	&quot;expenseCreatedType&quot;: null,&#xd;
	&quot;overDue&quot;: null,&#xd;
	&quot;bankTransactionDetail&quot;: null,&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;subsidyRepeatedFlag&quot;: false,&#xd;
	&quot;orderAmount&quot;: 1,&#xd;
	&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
	&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
	&quot;receiptedStatus&quot;: 0,&#xd;
	&quot;stringCol3&quot;: null,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;stringCol1&quot;: &quot;中国&quot;,&#xd;
	&quot;stringCol2&quot;: null,&#xd;
	&quot;status&quot;: 1000,&#xd;
	&quot;index&quot;: 1,&#xd;
	&quot;preCreatedDate&quot;: &quot;${createTime}T16:00:00Z&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1629056898">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用02_创建费用2(签证)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;快递&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${express_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${id}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;express&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.express&quot;,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;amount&quot;: 100,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T08:19:53Z&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;办公用品报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 111,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${express_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1254192484">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用15_获取报销单详情(签证费用2)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;快递&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">AllDetal</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用15_费用2删除(签证)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/remove/invoice/${expenseReportOID}/${express_invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用15_删除账本里费用2(签证)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoice/batch?invoiceOIDs=${express_invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用15_计算费用合计(签证)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&quot;${invoiceOID}&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoices/summary/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1128799816">&quot;baseCompanyPaymentSum&quot;:10.0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单详情" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="594935571">&quot;businessCode&quot;</stringProp>
              <stringProp name="1074092386">&quot;currencyCode&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="需要保存的报销单信息" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">draft;businessCode</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows;$.rows.businessCode</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL;NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取费用信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows.expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;expenseReportInvoices&quot;);
String detal = vars.get(&quot;draft&quot;);


JSONArray expenseReportInvoices = JSON.parseArray(json);
JSONObject draft = JSON.parseObject(detal);
draft.put(&quot;expenseReportInvoices&quot;,expenseReportInvoices);
String str =draft.toString();
vars.put(&quot;draft&quot;,str);


</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交报销单" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${draft}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1297119259">&quot;passFlag&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="拿到提交响应" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">checkResultList</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.checkResultList[0].externalPropertyName</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="报销单提交(大巴)" enabled="true">
          <stringProp name="IfController.condition">&quot;${checkResultList}&quot;  !=&quot;null&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="00再次提交报销单" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${AllDetalNew2}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1235267225">${SuccessSubmit}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="加强制提交" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;draft&quot;);

json = json.replaceAll(&quot;ignoreBudgetWarningFlag\&quot;:false&quot;,&quot;ignoreBudgetWarningFlag\&quot;:true&quot;);
vars.put(&quot;AllDetalNew2&quot;,json);

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用15_报销单提交(签证)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${AllDetal}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1235267225">${SuccessSubmit}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用15_报销单撤销(签证)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${expenseReportOID}&quot;,&quot;entityType&quot;:1002}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/approvals/withdraw</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1849896742">&quot;successNum&quot;:1,&quot;failNum&quot;:0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="新建费用报销单(餐补)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1525339456000</longProp>
        <longProp name="ThreadGroup.end_time">1525339456000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="918312701">用户信息</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="获取登录token不成功，再次获取" enabled="true">
          <stringProp name="IfController.condition">&quot;${accessToken}&quot; ==&quot;&quot; || &quot;${accessToken}&quot; ==undefined</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="918312701">用户信息</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用16_获取公司信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/my/companies</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取setOfBooksId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">setOfBooksId;gongsiName</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.setOfBooksId;$.name</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用16_获取所有类型的单据(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/company/my/available/all/?formType=102</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取dailyFormOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">dailyFormOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.formName==&quot;日常报销单&quot;)].formOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用16_获取表单里面的字段(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用16_报销单创建(餐补)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
	&quot;id&quot;: 10952,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: null,&#xd;
	&quot;formType&quot;: 3001,&#xd;
	&quot;asSystem&quot;: false,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;2018-05-04T04:34:21Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;2018-05-09T11:44:18Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-09T11:44:18Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-09T11:44:18Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 56285,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 56286,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-09T11:44:18Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-09T11:44:18Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 56287,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 56288,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: null,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1001,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: null,&#xd;
	&quot;companyOID&quot;: &quot;${companyOID}&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;form.description&quot;: &quot;{\&quot;enable\&quot;:false,\&quot;en\&quot;:{\&quot;title\&quot;:\&quot;caption\&quot;,\&quot;content\&quot;:\&quot;content\&quot;},\&quot;zh_cn\&quot;:{\&quot;title\&quot;:\&quot;说明文字\&quot;,\&quot;content\&quot;:\&quot;描述内容\&quot;}}&quot;,&#xd;
		&quot;enableAddSignForSubmitter&quot;: &quot;false&quot;,&#xd;
		&quot;enableAddSign&quot;: &quot;true&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: &quot;${tenantId}&quot;,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-09T11:44:18Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-09T11:44:18Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${departmentOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 56285,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 56286,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;2018-05-09T11:44:18Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;2018-05-09T11:44:18Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;测试16种费用类型&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 56287,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 56288,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/draft</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取businessCode" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">businessCode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;businessCode&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取expenseReportOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseReportOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseReportOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取applicantOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">applicantOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOIDs" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOIDs</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;approverOIDs&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取bizOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">bizOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;bizOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用16_获取费用类型" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}/selected/expense/types?userOID=${userOID}&amp;createManually=true</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1930901582">&quot;entityOID&quot;:&quot;${dailyFormOID}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐补expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;餐补&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐补expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;餐补&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐补expenseTypeCategoryOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;餐补&quot;)].expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐补-国家fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">country_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;餐补&quot;)].fields.[?(@.name==&quot;国家&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐补iconURL" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">iconURL</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;餐补&quot;)].iconURL</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].fields.[?(@.name==&quot;城市&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_expenseTypeOID;id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].expenseTypeOID;$..[?(@.name==&quot;快递&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用16_创建费用1(餐补)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;304894&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;ec43adda-1db4-4ea7-8256-9c556c281096&quot;,&#xd;
		&quot;fileName&quot;: &quot;Desert.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/ec43adda-1db4-4ea7-8256-9c556c281096-Desert.jpg?Expires=1525772148&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=5f1SWxv8s+r5jmUTdvdO1p0iGL8=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/ec43adda-1db4-4ea7-8256-9c556c281096-Desert.jpg?Expires=1525772148&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=5f1SWxv8s+r5jmUTdvdO1p0iGL8=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/ec43adda-1db4-4ea7-8256-9c556c281096-Desert.jpg?Expires=1525772148&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=BllqAFc0Y1JU0ahc4PZIt7BS7n8=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/ec43adda-1db4-4ea7-8256-9c556c281096-Desert.jpg?Expires=1525772148&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=mviodCByL7LPFqRR/8b0KJBielk=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 845941,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T08:17:01Z&quot;,&#xd;
		&quot;bytes&quot;: null,&#xd;
		&quot;checked&quot;: null,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;餐补&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;mealAllowance&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.meal.allowance&quot;,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;amount&quot;: 5,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T11:08:28Z&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;事由&quot;,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;替票&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 111,&#xd;
		&quot;name&quot;: &quot;国家&quot;,&#xd;
		&quot;value&quot;: &quot;中国&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;country&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${country_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1254192484">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用16_获取报销单详情(餐补)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1947514396">&quot;businessCode&quot;:&quot;${businessCode}&quot;</stringProp>
              <stringProp name="402202526">&quot;currencyCode&quot;:&quot;CNY&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐补invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;餐补&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐补expenseReportInvoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[0].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用16_修改费用1(餐补)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceOID&quot;: &quot;${invoiceOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${expenseTypeId}&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;餐补&quot;,&#xd;
	&quot;crossCheckStatus&quot;: null,&#xd;
	&quot;expenseTypeKey&quot;: null,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;mealAllowance&quot;,&#xd;
	&quot;phoneNumber&quot;: null,&#xd;
	&quot;email&quot;: null,&#xd;
	&quot;expenseTypeIconURL&quot;: &quot;${iconURL}&quot;,&#xd;
	&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
	&quot;expenseTypeCategoryDTO&quot;: {&#xd;
		&quot;expenseTypeCategoryOID&quot;: &quot;${expenseTypeCategoryOID}&quot;,&#xd;
		&quot;name&quot;: &quot;费用类型&quot;,&#xd;
		&quot;code&quot;: null&#xd;
	},&#xd;
	&quot;costCenterItemOID&quot;: null,&#xd;
	&quot;costCenterItemName&quot;: null,&#xd;
	&quot;amount&quot;: 10,&#xd;
	&quot;originalAmount&quot;: 1,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;userOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;mobile&quot;: null,&#xd;
	&quot;employeeId&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;国家&quot;,&#xd;
		&quot;value&quot;: &quot;中国&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;country&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${country_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: &quot;中国&quot;,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
	&quot;comment&quot;: &quot;修改费用测试&quot;,&#xd;
	&quot;warning&quot;: &quot;&quot;,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}&quot;,&#xd;
	&quot;attachments&quot;: [{&#xd;
		&quot;id&quot;: &quot;276456&quot;,&#xd;
		&quot;attachmentOID&quot;: &quot;ec43adda-1db4-4ea7-8256-9c556c281096&quot;,&#xd;
		&quot;fileName&quot;: &quot;Desert.jpg&quot;,&#xd;
		&quot;fileType&quot;: &quot;IMAGE&quot;,&#xd;
		&quot;fileURL&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/ec43adda-1db4-4ea7-8256-9c556c281096-Desert.jpg?Expires=1525772181&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=2ZTQnVn5jbu3+YXHvmTdeQV6Z0M=&quot;,&#xd;
		&quot;link&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/ec43adda-1db4-4ea7-8256-9c556c281096-Desert.jpg?Expires=1525772181&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=2ZTQnVn5jbu3+YXHvmTdeQV6Z0M=&quot;,&#xd;
		&quot;thumbnailUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/ec43adda-1db4-4ea7-8256-9c556c281096-Desert.jpg?Expires=1525772181&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=1JkQTMM6D/6ekOIx6N/5PBb038g=&amp;x-oss-process=image/resize,h_200&quot;,&#xd;
		&quot;iconUrl&quot;: &quot;https://helioscloud-uat.oss-cn-shanghai.aliyuncs.com/d8180f46-dafd-483b-a399-f8660a9dc643/invoices/ec43adda-1db4-4ea7-8256-9c556c281096-Desert.jpg?Expires=1525772181&amp;OSSAccessKeyId=LTAIVQnUeNxaNZ9u&amp;Signature=I18OtZXeDZ3QozJtMFfqWThfv4Q=&amp;x-oss-process=image/resize,h_80&quot;,&#xd;
		&quot;size&quot;: 845941,&#xd;
		&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T08:17:01Z&quot;,&#xd;
		&quot;public&quot;: false&#xd;
	}],&#xd;
	&quot;withReceipt&quot;: true,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;businessCode&quot;: null,&#xd;
	&quot;createLocation&quot;: null,&#xd;
	&quot;createTime&quot;: &quot;${createTime}T08:17:23Z&quot;,&#xd;
	&quot;rejectType&quot;: null,&#xd;
	&quot;approverId&quot;: null,&#xd;
	&quot;approvalStepId&quot;: null,&#xd;
	&quot;approvalOperates&quot;: null,&#xd;
	&quot;approver&quot;: null,&#xd;
	&quot;referenceId&quot;: null,&#xd;
	&quot;unitPrice&quot;: null,&#xd;
	&quot;number&quot;: null,&#xd;
	&quot;receiptFailType&quot;: null,&#xd;
	&quot;receiptFailReason&quot;: null,&#xd;
	&quot;valid&quot;: false,&#xd;
	&quot;receiptID&quot;: null,&#xd;
	&quot;cardSignType&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;receiptType&quot;: null,&#xd;
	&quot;receiptTypeNo&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;receiptGoodsID&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;invoiceLabelDTOS&quot;: [],&#xd;
	&quot;invoiceLabels&quot;: [{&#xd;
		&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
		&quot;name&quot;: &quot;公司&quot;,&#xd;
		&quot;level&quot;: &quot;INFO&quot;,&#xd;
		&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
		&quot;toast&quot;: null,&#xd;
		&quot;category&quot;: null,&#xd;
		&quot;oldLabel&quot;: false&#xd;
	}],&#xd;
	&quot;companyOID&quot;: null,&#xd;
	&quot;invoiceInstead&quot;: false,&#xd;
	&quot;invoiceInsteadReason&quot;: null,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;source&quot;: null,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;checked&quot;: null,&#xd;
	&quot;createInvoice&quot;: true,&#xd;
	&quot;checkWarning&quot;: null,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;digitalInvoiceId&quot;: null,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;originalActualCurrencyRate&quot;: 1,&#xd;
	&quot;companyCurrencyRate&quot;: 1,&#xd;
	&quot;actualCurrencyAmount&quot;: 1,&#xd;
	&quot;baseAmount&quot;: 1,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;flightNo&quot;: null,&#xd;
	&quot;apportionUsed&quot;: false,&#xd;
	&quot;expenseApportion&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;amountChanged&quot;: null,&#xd;
	&quot;approvalStatus&quot;: null,&#xd;
	&quot;bankTransactionID&quot;: null,&#xd;
	&quot;expenseCreatedType&quot;: null,&#xd;
	&quot;overDue&quot;: null,&#xd;
	&quot;bankTransactionDetail&quot;: null,&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;subsidyRepeatedFlag&quot;: false,&#xd;
	&quot;orderAmount&quot;: 1,&#xd;
	&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
	&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
	&quot;receiptedStatus&quot;: 0,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;stringCol3&quot;: null,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;stringCol1&quot;: &quot;中国&quot;,&#xd;
	&quot;stringCol2&quot;: null,&#xd;
	&quot;status&quot;: 1000,&#xd;
	&quot;index&quot;: 1,&#xd;
	&quot;preCreatedDate&quot;: &quot;${createTime}T16:00:00Z&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1629056898">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用02_创建费用2(餐补)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;快递&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${express_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeId&quot;: &quot;${id}&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;express&quot;,&#xd;
	&quot;expenseTypeKey&quot;: &quot;expense.type.express&quot;,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;amount&quot;: 100,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T08:19:53Z&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;办公用品报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;checkCode&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldDataType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;mappedColumnId&quot;: 111,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${express_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: &quot;CURRENT&quot;,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: true,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;reportKey&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;ownerOID&quot;: &quot;${userOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1254192484">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;,&quot;rows&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用16_获取报销单详情(签证费用2)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;快递&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">AllDetal</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用16_费用2删除(餐补)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/remove/invoice/${expenseReportOID}/${express_invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用16_删除账本里费用2(餐补)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoice/batch?invoiceOIDs=${express_invoiceOID}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用16_计算费用合计(餐补)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&quot;${invoiceOID}&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoices/summary/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1128799816">&quot;baseCompanyPaymentSum&quot;:10.0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用16_报销单提交(餐补)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${AllDetal}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1235267225">${SuccessSubmit}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单详情" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="594935571">&quot;businessCode&quot;</stringProp>
              <stringProp name="1074092386">&quot;currencyCode&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="需要保存的报销单信息" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">draft;businessCode</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows;$.rows.businessCode</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL;NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取费用信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows.expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;expenseReportInvoices&quot;);
String detal = vars.get(&quot;draft&quot;);


JSONArray expenseReportInvoices = JSON.parseArray(json);
JSONObject draft = JSON.parseObject(detal);
draft.put(&quot;expenseReportInvoices&quot;,expenseReportInvoices);
String str =draft.toString();
vars.put(&quot;draft&quot;,str);


</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交报销单" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${draft}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1297119259">&quot;passFlag&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="拿到提交响应" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">checkResultList</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.checkResultList[0].externalPropertyName</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="报销单提交(大巴)" enabled="true">
          <stringProp name="IfController.condition">&quot;${checkResultList}&quot;  !=&quot;null&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="00再次提交报销单" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${AllDetalNew2}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1235267225">${SuccessSubmit}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="加强制提交" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;draft&quot;);

json = json.replaceAll(&quot;ignoreBudgetWarningFlag\&quot;:false&quot;,&quot;ignoreBudgetWarningFlag\&quot;:true&quot;);
vars.put(&quot;AllDetalNew2&quot;,json);

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用16_报销单撤销(餐补)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entities&quot;:[{&quot;entityOID&quot;:&quot;${expenseReportOID}&quot;,&quot;entityType&quot;:1002}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/approvals/withdraw</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1849896742">&quot;successNum&quot;:1,&quot;failNum&quot;:0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="新建费用报销单（快递）" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1522201515000</longProp>
        <longProp name="ThreadGroup.end_time">1522201515000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="模块控制器" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="918312701">用户信息</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="00获取登录信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/account</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取userOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">userOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;userOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取用户相关信息" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">companyOID;fullName;email;mobile;employeeID;departmentOID;departmentName;companyName;corporationOID;companyId;tenantId;</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.companyOID;$.fullName;$.email;$.mobile;$.employeeID;$.departmentOID;$.departmentName;$.companyName;$.corporationOID;$.companyId;$.tenantId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null;null;null;null;null;null;null;null;null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="00获取租户信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/tenant/getById?tenantId=${tenantId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="00获取公司信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/my/companies</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取setOfBooksId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">setOfBooksId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.setOfBooksId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="00获取配置信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/company/configurations/user</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="00获取所有类型的单据（报销单）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/company/my/available/all/?formType=102</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取表单OID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">dailyFormOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.formName==&quot;日常报销单&quot;)].formOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="00获取表单字段" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取表单fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">fieldOID0;fieldOID1;fieldOID2</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].fieldOID;$..[?(@.fieldName==&quot;事由&quot;)].fieldOID;$..[?(@.fieldName==&quot;审批人&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null;null</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="00获取启用的部门" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/DepartmentGroup/selectDept/enabled?page=0&amp;size=10&amp;deptCode=&amp;name=</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="00获取单据字段默认值" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/form/user/default/values?userOID=${userOID}&amp;formOID=${dailyFormOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="00获取公司启用币种" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/company/standard/currency/getAll</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用10_获取所有类型的单据(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/company/my/available/all/?formType=102</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取dailyFormOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">dailyFormOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.formName==&quot;日常报销单&quot;)].formOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用10_获取公司信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/my/companies</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取setOfBooksId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">setOfBooksId;gongsiName</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.setOfBooksId;$.name</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用10_获取表单里面的字段(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用10_报销单创建(快递)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
	&quot;id&quot;: 10952,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: null,&#xd;
	&quot;formType&quot;: 3001,&#xd;
	&quot;asSystem&quot;: false,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T04:34:21Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: null,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1001,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: null,&#xd;
	&quot;companyOID&quot;: &quot;${companyOID}&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;form.description&quot;: &quot;{\&quot;enable\&quot;:false,\&quot;en\&quot;:{\&quot;title\&quot;:\&quot;caption\&quot;,\&quot;content\&quot;:\&quot;content\&quot;},\&quot;zh_cn\&quot;:{\&quot;title\&quot;:\&quot;说明文字\&quot;,\&quot;content\&quot;:\&quot;描述内容\&quot;}}&quot;,&#xd;
		&quot;enableAddSignForSubmitter&quot;: &quot;false&quot;,&#xd;
		&quot;enableAddSign&quot;: &quot;true&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: &quot;${tenantId}&quot;,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${departmentOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;报销单添加费用测试&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/draft</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取businessCode" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">businessCode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;businessCode&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取expenseReportOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseReportOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseReportOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取applicantOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">applicantOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOIDs" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOIDs</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;approverOIDs&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取bizOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">bizOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;bizOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取表单的费用控件" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}/selected/expense/types?setOfBooksId=${setOfBooksId}&amp;userOID=${userOID}&amp;createManually=true</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取大巴Daba_FormOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">Daba_filedID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取大巴Daba_expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">Daba_expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取表单的费用控件--详情查询" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/types/select/${Daba_filedID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">OtherPeopleFields</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.fields</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单费用创建" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;attachments&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;invoiceStatus&quot;:&quot;INIT&quot;,&#xd;
    &quot;readonly&quot;:false,&#xd;
    &quot;recognized&quot;:false,&#xd;
    &quot;currencyCode&quot;:&quot;CNY&quot;,&#xd;
    &quot;expenseTypeName&quot;:&quot;快递&quot;,&#xd;
    &quot;expenseTypeOID&quot;:&quot;${Daba_expenseTypeOID}&quot;,&#xd;
    &quot;expenseTypeId&quot;:&quot;${Daba_filedID}&quot;,&#xd;
    &quot;expenseTypeIconName&quot;:&quot;coach&quot;,&#xd;
    &quot;expenseTypeKey&quot;:&quot;expense.type.coach&quot;,&#xd;
    &quot;receiptList&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;amount&quot;:123.45,&#xd;
    &quot;createdDate&quot;:&quot;${now}T09:38:23Z&quot;,&#xd;
    &quot;invoiceCurrencyCode&quot;:&quot;CNY&quot;,&#xd;
    &quot;paymentType&quot;:1001,&#xd;
    &quot;comment&quot;:&quot;&quot;,&#xd;
    &quot;invoiceInstead&quot;:false,&#xd;
    &quot;invoiceInsteadReason&quot;:null,&#xd;
    &quot;data&quot;:${OtherPeopleFields},&#xd;
    &quot;baseCurrency&quot;:&quot;CNY&quot;,&#xd;
    &quot;updateRate&quot;:true,&#xd;
    &quot;expenseReportOID&quot;:&quot;${expenseReportOID}&quot;,&#xd;
    &quot;ownerOID&quot;:&quot;${userOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/invoice/api/v5/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="00获取报销单详情" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1947514396">&quot;businessCode&quot;:&quot;${businessCode}&quot;</stringProp>
              <stringProp name="402202526">&quot;currencyCode&quot;:&quot;CNY&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取发票OID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID_2;expenseReportInvoiceOID_2;invoiceOID_1;expenseReportInvoiceOID_1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.invoiceGroups[0].invoices[0].invoiceOID;$.invoiceGroups[0].invoices[0].expenseReportInvoiceOID;$.invoiceGroups[0].invoices[1].invoiceOID;$.invoiceGroups[0].invoices[1].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null;null;null;</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取formvalueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">bumenformValueOID;shiyouformValueOID;shenpirenformValueOID </stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].formValueOID;$..[?(@.fieldName==&quot;事由&quot;)].formValueOID;$..[?(@.fieldName==&quot;审批人&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">AllDetal</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单详情" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="594935571">&quot;businessCode&quot;</stringProp>
              <stringProp name="1074092386">&quot;currencyCode&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="需要保存的报销单信息" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">draft;businessCode</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows;$.rows.businessCode</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL;NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取费用信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows.expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;expenseReportInvoices&quot;);
String detal = vars.get(&quot;draft&quot;);


JSONArray expenseReportInvoices = JSON.parseArray(json);
JSONObject draft = JSON.parseObject(detal);
draft.put(&quot;expenseReportInvoices&quot;,expenseReportInvoices);
String str =draft.toString();
vars.put(&quot;draft&quot;,str);


</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交报销单" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${draft}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1297119259">&quot;passFlag&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="拿到提交响应" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">checkResultList</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.checkResultList[0].externalPropertyName</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="报销单提交(大巴)" enabled="true">
          <stringProp name="IfController.condition">&quot;${checkResultList}&quot;  !=&quot;null&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="00再次提交报销单" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${AllDetalNew2}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1235267225">${SuccessSubmit}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="加强制提交" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;draft&quot;);

json = json.replaceAll(&quot;ignoreBudgetWarningFlag\&quot;:false&quot;,&quot;ignoreBudgetWarningFlag\&quot;:true&quot;);
vars.put(&quot;AllDetalNew2&quot;,json);

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="00提交报销单" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${AllDetal}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">true</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="新建费用报销单(16种费用)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1525339456000</longProp>
        <longProp name="ThreadGroup.end_time">1525339456000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="918312701">用户信息</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="获取登录token不成功，再次获取" enabled="true">
          <stringProp name="IfController.condition">&quot;${accessToken}&quot; ==&quot;&quot; || &quot;${accessToken}&quot; ==undefined</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="取得登录信息" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="918312701">用户信息</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${accessToken}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用17_获取所有类型的单据(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/company/my/available/all/?formType=102</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取dailyFormOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">dailyFormOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.formName==&quot;日常报销单&quot;)].formOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用17_获取表单里面的字段(日常报销单)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用10_报销单创建(快递)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
	&quot;id&quot;: 10952,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;iconName&quot;: &quot;&quot;,&#xd;
	&quot;messageKey&quot;: null,&#xd;
	&quot;formType&quot;: 3001,&#xd;
	&quot;asSystem&quot;: false,&#xd;
	&quot;valid&quot;: true,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T04:34:21Z&quot;,&#xd;
	&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
	&quot;parentOID&quot;: null,&#xd;
	&quot;associateExpenseReport&quot;: false,&#xd;
	&quot;customFormFields&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: null,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}],&#xd;
	&quot;customFormI18nList&quot;: null,&#xd;
	&quot;remark&quot;: null,&#xd;
	&quot;referenceOID&quot;: null,&#xd;
	&quot;groupOIDs&quot;: [],&#xd;
	&quot;visibleExpenseTypeScope&quot;: 1001,&#xd;
	&quot;expenseTypeOIDs&quot;: [],&#xd;
	&quot;expenseReport&quot;: null,&#xd;
	&quot;formCode&quot;: null,&#xd;
	&quot;companyOID&quot;: &quot;${companyOID}&quot;,&#xd;
	&quot;travelManageType&quot;: null,&#xd;
	&quot;controlFields&quot;: null,&#xd;
	&quot;customFormProperties&quot;: {&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;enabled&quot;: 0,&#xd;
		&quot;closeDay&quot;: 0,&#xd;
		&quot;participantEnable&quot;: 0,&#xd;
		&quot;changeEnabled&quot;: 0,&#xd;
		&quot;restartEnabled&quot;: 0,&#xd;
		&quot;restartCloseDay&quot;: 0,&#xd;
		&quot;manageType&quot;: &quot;1001&quot;,&#xd;
		&quot;controlFields&quot;: &quot;{\&quot;discount\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;ticketPrice\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;seatClass\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;takeOffEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalBeginTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false},\&quot;arrivalEndTime\&quot;:{\&quot;show\&quot;:false,\&quot;required\&quot;:false,\&quot;control\&quot;:false}}&quot;,&#xd;
		&quot;uniformBookingEnable&quot;: 1,&#xd;
		&quot;participantsScope&quot;: 1,&#xd;
		&quot;travelTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;expenseTOApplication&quot;: &quot;Y&quot;,&#xd;
		&quot;synchronizeEnabled&quot;: 1,&#xd;
		&quot;repeatableAssociated&quot;: true&#xd;
	},&#xd;
	&quot;customFormPropertyMap&quot;: {&#xd;
		&quot;form.description&quot;: &quot;{\&quot;enable\&quot;:false,\&quot;en\&quot;:{\&quot;title\&quot;:\&quot;caption\&quot;,\&quot;content\&quot;:\&quot;content\&quot;},\&quot;zh_cn\&quot;:{\&quot;title\&quot;:\&quot;说明文字\&quot;,\&quot;content\&quot;:\&quot;描述内容\&quot;}}&quot;,&#xd;
		&quot;enableAddSignForSubmitter&quot;: &quot;false&quot;,&#xd;
		&quot;enableAddSign&quot;: &quot;true&quot;,&#xd;
		&quot;countersignType&quot;: &quot;2&quot;&#xd;
	},&#xd;
	&quot;expenseTypeCheckStatus&quot;: null,&#xd;
	&quot;proxyForm&quot;: false,&#xd;
	&quot;i18n&quot;: {},&#xd;
	&quot;tenantId&quot;: &quot;${tenantId}&quot;,&#xd;
	&quot;customFormResponseI18nDTOS&quot;: [],&#xd;
	&quot;setOfBooksId&quot;: null,&#xd;
	&quot;submit&quot;: false,&#xd;
	&quot;visibleUserScope&quot;: 1001,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;id&quot;: 56126,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:true}&quot;,&#xd;
		&quot;readonly&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${departmentOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53179,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53180,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Department&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: 56127,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;valid&quot;: true,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T06:01:46Z&quot;,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;readonly&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;报销单添加费用测试&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: [{&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53181,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;Reason&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;en&quot;&#xd;
		}, {&#xd;
			&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
			&quot;formFieldI18nId&quot;: 53182,&#xd;
			&quot;customFormField&quot;: 0,&#xd;
			&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
			&quot;promptInfo&quot;: null,&#xd;
			&quot;fieldContent&quot;: null,&#xd;
			&quot;language&quot;: &quot;zh_CN&quot;&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;id&quot;: null,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;valid&quot;: null,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;createdDate&quot;: null,&#xd;
		&quot;lastModifiedDate&quot;: null,&#xd;
		&quot;promptInfo&quot;: &quot;&quot;,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;readonly&quot;: null,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;guiWidgetId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;isPDFShow&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;i18n&quot;: {},&#xd;
		&quot;customFormFieldI18nDTOS&quot;: []&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/reports/custom/form/draft</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取businessCode" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">businessCode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;businessCode&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取expenseReportOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">expenseReportOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;expenseReportOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取applicantOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">applicantOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;applicantOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取approverOIDs" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">approverOIDs</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;approverOIDs&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取bizOID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">bizOID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;bizOID&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用17_获取费用类型" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/custom/forms/${dailyFormOID}/selected/expense/types?userOID=${userOID}&amp;createManually=true</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1930901582">&quot;entityOID&quot;:&quot;${dailyFormOID}&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取交通expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">trans_expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;交通&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取交通expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">trans_expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;交通&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取交通expenseTypeCategoryOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">trans_expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;交通&quot;)].expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取交通-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">trans_city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;交通&quot;)].fields.[?(@.name==&quot;城市&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取交通-出发地fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">trans_departure_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;交通&quot;)].fields.[?(@.name==&quot;出发地&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取交通-目的地fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">trans_destination_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;交通&quot;)].fields.[?(@.name==&quot;目的地&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取交通-出发时间fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">trans_starttime_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;交通&quot;)].fields.[?(@.name==&quot;出发时间&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取交通-到达时间fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">trans_endtime_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;交通&quot;)].fields.[?(@.name==&quot;到达时间&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取机票expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">air_expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;机票&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取机票expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">air_expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;机票&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取机票expenseTypeCategoryOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">air_expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;机票&quot;)].expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取机票-出发地fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">air_departure_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;机票&quot;)].fields.[?(@.name==&quot;出发地&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取机票-目的地fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">air_destination_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;机票&quot;)].fields.[?(@.name==&quot;目的地&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取大巴expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">coach_expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;大巴&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取大巴expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">coach_expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;大巴&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取大巴expenseTypeCategoryOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">coach_expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;大巴&quot;)].expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取大巴-出发地fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">coach_departure_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;大巴&quot;)].fields.[?(@.name==&quot;出发地&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取大巴-目的地fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">coach_destination_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;大巴&quot;)].fields.[?(@.name==&quot;目的地&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取火车expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">travel_expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;火车&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取火车expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">travel_expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;火车&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取火车expenseTypeCategoryOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">travel_expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;火车&quot;)].expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取火车-出发地fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">travel_departure_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;火车&quot;)].fields.[?(@.name==&quot;出发地&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取火车-目的地fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">travel_destination_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;火车&quot;)].fields.[?(@.name==&quot;目的地&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐饮expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">food_expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;餐饮&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐饮expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">food_expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;餐饮&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐饮expenseTypeCategoryOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">food_expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;餐饮&quot;)].expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐饮-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">food_city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;餐饮&quot;)].fields.[?(@.name==&quot;城市&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐饮-就餐地点fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">food_location_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;餐饮&quot;)].fields.[?(@.name==&quot;就餐地点&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐饮-人数fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">food_count_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;餐饮&quot;)].fields.[?(@.name==&quot;人数&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐饮-对象fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">food_person_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;餐饮&quot;)].fields.[?(@.name==&quot;对象&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取娱乐expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">team_expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;娱乐&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取娱乐expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">team_expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;娱乐&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取娱乐expenseTypeCategoryOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">team_expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;娱乐&quot;)].expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取娱乐-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">team_city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;娱乐&quot;)].fields.[?(@.name==&quot;城市&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取娱乐方式fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">team_method_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;娱乐&quot;)].fields.[?(@.name==&quot;方式&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取娱乐-人数fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">team_count_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;娱乐&quot;)].fields.[?(@.name==&quot;人数&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取娱乐-对象fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">team_person_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;娱乐&quot;)].fields.[?(@.name==&quot;对象&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取办公expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">office_expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;办公&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取办公expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">office_expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;办公&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取办公expenseTypeCategoryOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">office_expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;办公&quot;)].expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取办公-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">office_city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;办公&quot;)].fields.[?(@.name==&quot;城市&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取办公-说明fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">office_name_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;办公&quot;)].fields.[?(@.name==&quot;说明&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取会务expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">meetings_expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;会务&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取会务expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">meetings_expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;会务&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取会务expenseTypeCategoryOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">meetings_expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;会务&quot;)].expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取会务-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">meetings_city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;会务&quot;)].fields.[?(@.name==&quot;城市&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取会务-地点fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">meetings_location_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;会务&quot;)].fields.[?(@.name==&quot;地点&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取会务-人数fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">meetings_count_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;会务&quot;)].fields.[?(@.name==&quot;人数&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取通讯expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">communication_expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;通讯&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取通讯-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">communication_city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;通讯&quot;)].fields.[?(@.name==&quot;城市&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取通讯expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">communication_expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;通讯&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取通讯expenseTypeCategoryOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">communication_expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;通讯&quot;)].expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取通讯-电话号码fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">communication_phone_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;通讯&quot;)].fields.[?(@.name==&quot;电话号码&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取酒店expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">hotel_expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;酒店&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取酒店expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">hotel_expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;酒店&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取酒店expenseTypeCategoryOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">hotel_expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;酒店&quot;)].expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取酒店-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">hotel_city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;酒店&quot;)].fields.[?(@.name==&quot;城市&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取酒店-酒店名称fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">hotel_name_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;酒店&quot;)].fields.[?(@.name==&quot;酒店名称&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取酒店-入住天数fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">hotel_days_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;酒店&quot;)].fields.[?(@.name==&quot;入住天数&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递expenseTypeCategoryOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;快递&quot;)].fields.[?(@.name==&quot;城市&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取汽油expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">gasoline_expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;汽油&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取汽油expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">gasoline_expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;汽油&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取汽油expenseTypeCategoryOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">gasoline_expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;汽油&quot;)].expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取档案expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">file_expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;档案&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取档案expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">file_expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;档案&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取档案expenseTypeCategoryOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">file_expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;档案&quot;)].expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取档案-开始日期fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">file_startDate_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;档案&quot;)].fields.[?(@.name==&quot;开始日期&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取档案-结束日期fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">file_endDate_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;档案&quot;)].fields.[?(@.name==&quot;结束日期&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取档案-参与人fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">file_participants_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;档案&quot;)].fields.[?(@.name==&quot;参与人&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取体检expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">examination_expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;体检&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取体检expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">examination_expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;体检&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取体检expenseTypeCategoryOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">examination_expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;体检&quot;)].expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取体检-城市fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">examination_city_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;体检&quot;)].fields.[?(@.name==&quot;城市&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取签证expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">visa_expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;签证&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取签证expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">visa_expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;签证&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取签证expenseTypeCategoryOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">visa_expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;签证&quot;)].expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取签证-国家fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">visa_country_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;签证&quot;)].fields.[?(@.name==&quot;国家&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐补expenseTypeOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">meal_expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;餐补&quot;)].expenseTypeOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐补expenseTypeId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">meal_expenseTypeId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;餐补&quot;)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐补expenseTypeCategoryOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">meal_expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;餐补&quot;)].expenseTypeCategoryOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐补-国家fieldOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">meal_country_fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&quot;餐补&quot;)].fields.[?(@.name==&quot;国家&quot;)].fieldOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用17_创建费用(交通)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${trans_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;交通&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;transportation&quot;,&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;amount&quot;: 1,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;交通费报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${trans_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;name&quot;: &quot;出发地&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;华为西安研究所\&quot;,\&quot;longitude\&quot;:108.83902,\&quot;latitude\&quot;:34.19428}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;departure.location&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${trans_departure_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;name&quot;: &quot;目的地&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;西安环普科技产业园\&quot;,\&quot;longitude\&quot;:108.84068,\&quot;latitude\&quot;:34.20974}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;destination.location&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${trans_destination_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;DATETIME&quot;,&#xd;
		&quot;name&quot;: &quot;出发时间&quot;,&#xd;
		&quot;value&quot;: &quot;${createTime}T14:23:20Z&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;start.time&quot;,&#xd;
		&quot;sequence&quot;: 4,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${trans_starttime_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;DATETIME&quot;,&#xd;
		&quot;name&quot;: &quot;到达时间&quot;,&#xd;
		&quot;value&quot;: &quot;${createTime}T14:43:20Z&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;end.time&quot;,&#xd;
		&quot;sequence&quot;: 5,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${trans_endtime_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/invoice/api/v5/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="353040032">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用17_创建费用(机票)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${air_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;机票&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;airTickets&quot;,&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;amount&quot;: 1,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;飞机票报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;name&quot;: &quot;出发地&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;西安咸阳国际机场\&quot;,\&quot;longitude\&quot;:108.761268287,\&quot;latitude\&quot;:34.435148685}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;departure.location&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${air_departure_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;name&quot;: &quot;目的地&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;上海虹桥国际机场\&quot;,\&quot;longitude\&quot;:121.3376,\&quot;latitude\&quot;:31.19668}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;destination.location&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${air_destination_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1629056898">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用17_创建费用(大巴)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${coach_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;大巴&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;coach&quot;,&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;amount&quot;: 1,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;大巴费报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;name&quot;: &quot;出发地&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;华为西安研究所\&quot;,\&quot;longitude\&quot;:108.83902,\&quot;latitude\&quot;:34.19428}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;departure.location&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${coach_departure_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;name&quot;: &quot;目的地&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;西安环普科技产业园\&quot;,\&quot;longitude\&quot;:108.84068,\&quot;latitude\&quot;:34.20974}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;destination.location&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${coach_destination_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1629056898">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用17_创建费用(火车)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${travel_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;火车&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;travel&quot;,&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;amount&quot;: 1,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;火车费报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;name&quot;: &quot;出发地&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;西安火车站\&quot;,\&quot;longitude\&quot;:108.962682113,\&quot;latitude\&quot;:34.277386079}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;departure.location&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${travel_departure_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;name&quot;: &quot;目的地&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;上海火车站[地铁站]\&quot;,\&quot;longitude\&quot;:121.455716,\&quot;latitude\&quot;:31.247401}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;destination.location&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${travel_destination_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1629056898">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用17_创建费用(餐饮)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${food_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;餐饮&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;foodbeverage&quot;,&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;amount&quot;: 1,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;就餐费报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${food_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;name&quot;: &quot;就餐地点&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;西安饭庄(锦业路店)\&quot;,\&quot;longitude\&quot;:108.87323,\&quot;latitude\&quot;:34.19258}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;location&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${food_location_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;LONG&quot;,&#xd;
		&quot;name&quot;: &quot;人数&quot;,&#xd;
		&quot;value&quot;: 3,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;head.count&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${food_count_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;对象&quot;,&#xd;
		&quot;value&quot;: &quot;a，b，c&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;person&quot;,&#xd;
		&quot;sequence&quot;: 4,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${food_person_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1629056898">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用17_创建费用(娱乐)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${team_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;娱乐&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;teambuilding&quot;,&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;amount&quot;: 1,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;娱乐报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${team_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;方式&quot;,&#xd;
		&quot;value&quot;: &quot;KTV&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;method&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${team_method_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;LONG&quot;,&#xd;
		&quot;name&quot;: &quot;人数&quot;,&#xd;
		&quot;value&quot;: 3,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;head.count&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${team_count_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;对象&quot;,&#xd;
		&quot;value&quot;: &quot;a，b，c&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;person&quot;,&#xd;
		&quot;sequence&quot;: 4,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${team_person_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/invoice/api/v5/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="353040032">{&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用17_创建费用(办公)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${office_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;办公&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;office&quot;,&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;amount&quot;: 1,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;办公用品报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${office_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;说明&quot;,&#xd;
		&quot;value&quot;: &quot;办公用品&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;name&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${office_name_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1629056898">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用17_创建费用(会务)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${meetings_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;会务&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;meetings&quot;,&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;amount&quot;: 1,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;会务费报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${meetings_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;name&quot;: &quot;地点&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;麦当劳(环普产业园店)\&quot;,\&quot;longitude\&quot;:108.83977,\&quot;latitude\&quot;:34.21055}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;location&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${meetings_location_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;LONG&quot;,&#xd;
		&quot;name&quot;: &quot;人数&quot;,&#xd;
		&quot;value&quot;: 1,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;head.count&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${meetings_count_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1629056898">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用17_创建费用(通讯)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${communication_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;通讯&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;communication&quot;,&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;amount&quot;: 1,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;通讯费报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${communication_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;电话号码&quot;,&#xd;
		&quot;value&quot;: &quot;13700000021&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;phone.number&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${communication_phone_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1629056898">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用17_创建费用(酒店)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${hotel_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;酒店&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;hotel&quot;,&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;amount&quot;: 1,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;酒店报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${hotel_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
		&quot;name&quot;: &quot;酒店名称&quot;,&#xd;
		&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;软件新城软件公寓\&quot;,\&quot;longitude\&quot;:108.83882,\&quot;latitude\&quot;:34.21698}&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;hotel.name&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${hotel_name_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;LONG&quot;,&#xd;
		&quot;name&quot;: &quot;入住天数&quot;,&#xd;
		&quot;value&quot;: 1,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;days&quot;,&#xd;
		&quot;sequence&quot;: 3,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${hotel_days_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1629056898">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用17_创建费用(快递)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${express_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;快递&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;express&quot;,&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;amount&quot;: 1,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;快递费报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${express_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1629056898">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用17_创建费用(汽油)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${gasoline_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;汽油&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;gasoline&quot;,&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;amount&quot;: 1,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;油费报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;data&quot;: [],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1629056898">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用17_创建费用(档案)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${file_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;档案&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;file&quot;,&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;amount&quot;: 1,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;档案费报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;DATE&quot;,&#xd;
		&quot;name&quot;: &quot;开始日期&quot;,&#xd;
		&quot;value&quot;: &quot;2018-04-08T18:19:59Z&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;start.date&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: null,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${file_startDate_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;DATE&quot;,&#xd;
		&quot;name&quot;: &quot;结束日期&quot;,&#xd;
		&quot;value&quot;: &quot;2018-06-30T18:20:04Z&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;end.date&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: null,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${file_endDate_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;i18n&quot;: null&#xd;
	}, {&#xd;
		&quot;fieldType&quot;: &quot;PARTICIPANTS&quot;,&#xd;
		&quot;name&quot;: &quot;参与人&quot;,&#xd;
		&quot;value&quot;: &quot;[{\&quot;id\&quot;:\&quot;197249\&quot;,\&quot;login\&quot;:\&quot;hbrq87861111\&quot;,\&quot;userOID\&quot;:\&quot;${userOID}\&quot;,\&quot;companyOID\&quot;:\&quot;${companyOID}\&quot;,\&quot;password\&quot;:null,\&quot;fullName\&quot;:\&quot;admin\&quot;,\&quot;firstName\&quot;:null,\&quot;lastName\&quot;:null,\&quot;email\&quot;:\&quot;admin@autotest.com\&quot;,\&quot;mobile\&quot;:\&quot;${username}\&quot;,\&quot;employeeID\&quot;:\&quot;1111\&quot;,\&quot;title\&quot;:null,\&quot;activated\&quot;:true,\&quot;authorities\&quot;:[\&quot;ROLE_COMPANY_ADMIN\&quot;,\&quot;ROLE_USER\&quot;,\&quot;ROLE_COMPANY_FINANCE_ADMIN\&quot;,\&quot;ROLE_TENANT_ADMIN\&quot;],\&quot;departmentOID\&quot;:\&quot;${departmentOID}\&quot;,\&quot;departmentName\&quot;:\&quot;HLY自动化\&quot;,\&quot;filePath\&quot;:null,\&quot;avatar\&quot;:null,\&quot;status\&quot;:null,\&quot;companyName\&quot;:\&quot;HLY自动化\&quot;,\&quot;corporationOID\&quot;:\&quot;${corporationOID}\&quot;,\&quot;language\&quot;:\&quot;zh_CN\&quot;,\&quot;pageRoles\&quot;:[{\&quot;pageName\&quot;:\&quot;FINANCEMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;EXPENSEAUDIT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;RECEIPTEDINVOICES\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;EXPENSEPAYMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;LOANMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;LOANGLOBALVIEW\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;REPAYMENTSLIPMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;LOANBILLMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;PAYMENTBATCH\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;EXPENSEVIEW\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;VENDORRECONCILIATION\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;VENDORMAINTENANCE\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;PRINTINVOICEBATCH\&quot;,\&quot;action\&quot;:2}],\&quot;financeRoleOID\&quot;:\&quot;adeeed31-b361-480e-8b03-8d71deef3723\&quot;,\&quot;companyId\&quot;:889138,\&quot;tenantId\&quot;:\&quot;${tenantId}\&quot;,\&quot;directManager\&quot;:null,\&quot;directManagerId\&quot;:null,\&quot;directManagerName\&quot;:null,\&quot;departmentPath\&quot;:null,\&quot;senior\&quot;:false,\&quot;deleted\&quot;:false}]&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;participants&quot;,&#xd;
		&quot;sequence&quot;: 2,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: null,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${file_participants_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: false,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1629056898">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用17_创建费用(体检)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${examination_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;体检&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;examination&quot;,&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;amount&quot;: 1,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;体检费报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;城市&quot;,&#xd;
		&quot;value&quot;: &quot;西安&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;city&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${examination_city_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1629056898">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用17_创建费用(签证)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${visa_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;签证&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;visa&quot;,&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;amount&quot;: 1,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;签证费报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;国家&quot;,&#xd;
		&quot;value&quot;: &quot;中国&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;country&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${visa_country_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1629056898">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用17_创建费用(餐补)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;attachments&quot;: [],&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;expenseTypeOID&quot;: &quot;${meal_expenseTypeOID}&quot;,&#xd;
	&quot;expenseTypeName&quot;: &quot;餐补&quot;,&#xd;
	&quot;expenseTypeIconName&quot;: &quot;mealAllowance&quot;,&#xd;
	&quot;invoiceStatus&quot;: &quot;INIT&quot;,&#xd;
	&quot;readonly&quot;: false,&#xd;
	&quot;recognized&quot;: false,&#xd;
	&quot;amount&quot;: 1,&#xd;
	&quot;actualCurrencyRate&quot;: 1,&#xd;
	&quot;vatInvoice&quot;: false,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}&quot;,&#xd;
	&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;paymentType&quot;: 1002,&#xd;
	&quot;comment&quot;: &quot;餐补报销&quot;,&#xd;
	&quot;invoiceInstead&quot;: true,&#xd;
	&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
	&quot;invoiceTypeNo&quot;: null,&#xd;
	&quot;invoiceDate&quot;: null,&#xd;
	&quot;invoiceCode&quot;: null,&#xd;
	&quot;invoiceNumber&quot;: null,&#xd;
	&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
	&quot;nonVATinclusiveAmount&quot;: null,&#xd;
	&quot;taxRate&quot;: null,&#xd;
	&quot;taxAmount&quot;: null,&#xd;
	&quot;priceTaxAmount&quot;: null,&#xd;
	&quot;data&quot;: [{&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;name&quot;: &quot;国家&quot;,&#xd;
		&quot;value&quot;: &quot;中国&quot;,&#xd;
		&quot;codeName&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;country&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;customEnumerationDTO&quot;: null,&#xd;
		&quot;customEnumerationOID&quot;: null,&#xd;
		&quot;printHide&quot;: false,&#xd;
		&quot;required&quot;: null,&#xd;
		&quot;showOnList&quot;: true,&#xd;
		&quot;fieldOID&quot;: &quot;${meal_country_fieldOID}&quot;,&#xd;
		&quot;editable&quot;: true,&#xd;
		&quot;defaultValueMode&quot;: null,&#xd;
		&quot;defaultValueKey&quot;: null,&#xd;
		&quot;showValue&quot;: null,&#xd;
		&quot;isDefaultValueConfigurable&quot;: null,&#xd;
		&quot;isCommonField&quot;: null,&#xd;
		&quot;i18n&quot;: null&#xd;
	}],&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;updateRate&quot;: true,&#xd;
	&quot;digitalInvoice&quot;: null,&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">invoice/api/v4/invoices</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1629056898">&quot;success&quot;:true,&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用17_获取报销单详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1947514396">&quot;businessCode&quot;:&quot;${businessCode}&quot;</stringProp>
              <stringProp name="402202526">&quot;currencyCode&quot;:&quot;CNY&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取部门formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">department_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取事由formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">reason_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;事由&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取审批人formValueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">approver_formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;审批人&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取交通invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID_trans</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;交通&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取交通expenseReportInvoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">trans_expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[0].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取机票invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID_air</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;机票&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取机票expenseReportInvoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">air_expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[1].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取大巴invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID_coach</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;大巴&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取大巴expenseReportInvoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">coach_expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[2].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取火车invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID_travel</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;火车&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取火车expenseReportInvoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">travel_expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[3].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐饮invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID_food</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;餐饮&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐饮expenseReportInvoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">food_expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[4].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取娱乐invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID_team</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;娱乐&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取娱乐expenseReportInvoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">team_expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[5].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取办公invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID_office</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;办公&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取办公expenseReportInvoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">office_expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[6].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取会务invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID_meetings</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;会务&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取会务expenseReportInvoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">meetings_expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[7].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取通讯invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID_communication</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;通讯&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取通讯expenseReportInvoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">communication_expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[8].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取酒店invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID_hotel</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;酒店&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取酒店expenseReportInvoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">hotel_expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[9].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID_express</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;快递&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取快递expenseReportInvoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">express_expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[10].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取汽油invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID_gasoline</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;汽油&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取汽油expenseReportInvoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">gasoline_expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[11].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取档案invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID_file</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;档案&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取档案expenseReportInvoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">file_expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[12].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取体检invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID_examination</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;体检&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取体检expenseReportInvoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">examination_expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[13].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取签证invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID_visa</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;签证&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取签证expenseReportInvoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">visa_expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[14].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐补invoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID_meal</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.expenseTypeName==&quot;餐补&quot;)].invoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取餐补expenseReportInvoiceOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">meal_expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.expenseReportInvoices[15].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">AllDetal</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用17_计算费用合计(16种费用)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&quot;${invoiceOID_trans}&quot;,&quot;${invoiceOID_air}&quot;,&quot;${invoiceOID_coach}&quot;,&quot;${invoiceOID_travel}&quot;,&quot;${invoiceOID_food}&quot;,&quot;${invoiceOID_team}&quot;,&quot;${invoiceOID_office}&quot;,&quot;${invoiceOID_meetings}&quot;,&quot;${invoiceOID_communication}&quot;,&quot;${invoiceOID_hotel}&quot;,&quot;${invoiceOID_express}&quot;,&quot;${invoiceOID_gasoline}&quot;,&quot;${invoiceOID_file}&quot;,&quot;${invoiceOID_examination}&quot;,&quot;${invoiceOID_visa}&quot;,&quot;${invoiceOID_meal}&quot;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/invoices/summary/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-538673239">success&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取报销单详情" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="594935571">&quot;businessCode&quot;</stringProp>
              <stringProp name="1074092386">&quot;currencyCode&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="需要保存的报销单信息" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">draft;businessCode</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows;$.rows.businessCode</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL;NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取费用信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/expense/report/invoices?expenseReportOID=${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows.expenseReportInvoices</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NULL</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;expenseReportInvoices&quot;);
String detal = vars.get(&quot;draft&quot;);


JSONArray expenseReportInvoices = JSON.parseArray(json);
JSONObject draft = JSON.parseObject(detal);
draft.put(&quot;expenseReportInvoices&quot;,expenseReportInvoices);
String str =draft.toString();
vars.put(&quot;draft&quot;,str);


</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交报销单" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${draft}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1297119259">&quot;passFlag&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="拿到提交响应" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">checkResultList</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.checkResultList[0].externalPropertyName</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="报销单提交(大巴)" enabled="true">
          <stringProp name="IfController.condition">&quot;${checkResultList}&quot;  !=&quot;null&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="00再次提交报销单" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${AllDetalNew2}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1235267225">${SuccessSubmit}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="加强制提交" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
String json = vars.get(&quot;draft&quot;);

json = json.replaceAll(&quot;ignoreBudgetWarningFlag\&quot;:false&quot;,&quot;ignoreBudgetWarningFlag\&quot;:true&quot;);
vars.put(&quot;AllDetalNew2&quot;,json);

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="00获取报销单详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/reports/${expenseReportOID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="文本响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1947514396">&quot;businessCode&quot;:&quot;${businessCode}&quot;</stringProp>
              <stringProp name="402202526">&quot;currencyCode&quot;:&quot;CNY&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取发票OID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">invoiceOID_2;expenseReportInvoiceOID_2;invoiceOID_1;expenseReportInvoiceOID_1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.invoiceGroups[0].invoices[0].invoiceOID;$.invoiceGroups[0].invoices[0].expenseReportInvoiceOID;$.invoiceGroups[0].invoices[1].invoiceOID;$.invoiceGroups[0].invoices[1].expenseReportInvoiceOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null;null;null;</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取formvalueOID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">bumenformValueOID;shiyouformValueOID;shenpirenformValueOID </stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.fieldName==&quot;部门&quot;)].formValueOID;$..[?(@.fieldName==&quot;事由&quot;)].formValueOID;$..[?(@.fieldName==&quot;审批人&quot;)].formValueOID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null;null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">AllDetal</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单提交(16种费用)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;applicantName&quot;: &quot;admin&quot;,&#xd;
	&quot;applicantOID&quot;: &quot;${applicantOID}&quot;,&#xd;
	&quot;approverOIDs&quot;: &quot;${approverOIDs}&quot;,&#xd;
	&quot;baseCurrency&quot;: &quot;CNY&quot;,&#xd;
	&quot;baseCurrencyAmount&quot;: 16,&#xd;
	&quot;baseCurrencyRealPayAmount&quot;: 0,&#xd;
	&quot;businessCode&quot;: &quot;${businessCode}&quot;,&#xd;
	&quot;companyOID&quot;: &quot;${companyOID}&quot;,&#xd;
	&quot;corporationOID&quot;: &quot;${corporationOID}&quot;,&#xd;
	&quot;createdBy&quot;: &quot;${userOID}&quot;,&#xd;
	&quot;createdDate&quot;: &quot;${createTime}T15:06:47Z&quot;,&#xd;
	&quot;createdName&quot;: &quot;admin&quot;,&#xd;
	&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
	&quot;currencyCodeName&quot;: &quot;人民币&quot;,&#xd;
	&quot;currencySame&quot;: false,&#xd;
	&quot;custFormValues&quot;: [{&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;${department_formValueOID}&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${bizOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;${department_fieldOID}&quot;,&#xd;
		&quot;fieldName&quot;: &quot;部门&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${departmentOID}&quot;,&#xd;
		&quot;showValue&quot;: &quot;HLY自动化&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T15:06:48Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T15:06:48Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;select_department&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;sequence&quot;: 0,&#xd;
		&quot;required&quot;: false,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;isApportionItem\&quot;:false}&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: true,&#xd;
		&quot;refCostCenterOID&quot;: null&#xd;
	}, {&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;${reason_formValueOID}&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${bizOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;${reason_fieldOID}&quot;,&#xd;
		&quot;fieldName&quot;: &quot;事由&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;费用测试&quot;,&#xd;
		&quot;showValue&quot;: &quot;费用测试&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T15:06:48Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T15:06:48Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;title&quot;,&#xd;
		&quot;dataSource&quot;: &quot;&quot;,&#xd;
		&quot;sequence&quot;: 1,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;isReadOnly&quot;: false,&#xd;
		&quot;fieldConstraint&quot;: &quot;&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: true,&#xd;
		&quot;refCostCenterOID&quot;: null&#xd;
	}, {&#xd;
		&quot;bizType&quot;: &quot;DAILY_EXPENSE_REPORT&quot;,&#xd;
		&quot;bizTypeId&quot;: null,&#xd;
		&quot;formValueOID&quot;: &quot;${approver_formValueOID}&quot;,&#xd;
		&quot;bizOID&quot;: &quot;${bizOID}&quot;,&#xd;
		&quot;fieldOID&quot;: &quot;${approver_fieldOID}&quot;,&#xd;
		&quot;fieldName&quot;: &quot;审批人&quot;,&#xd;
		&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
		&quot;fieldTypeId&quot;: null,&#xd;
		&quot;value&quot;: &quot;${userOID}&quot;,&#xd;
		&quot;showValue&quot;: &quot;admin&quot;,&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T15:06:48Z&quot;,&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T15:06:48Z&quot;,&#xd;
		&quot;fieldContent&quot;: null,&#xd;
		&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
		&quot;referenceOID&quot;: null,&#xd;
		&quot;messageKey&quot;: &quot;select_approver&quot;,&#xd;
		&quot;dataSource&quot;: null,&#xd;
		&quot;sequence&quot;: 1000,&#xd;
		&quot;required&quot;: true,&#xd;
		&quot;isReadOnly&quot;: null,&#xd;
		&quot;fieldConstraint&quot;: &quot;{\&quot;maxApprovalChain\&quot;:-1}&quot;,&#xd;
		&quot;fieldCode&quot;: null,&#xd;
		&quot;attachmentImages&quot;: [],&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;promptInfo&quot;: null,&#xd;
		&quot;pdfShow&quot;: null,&#xd;
		&quot;refCostCenterOID&quot;: null&#xd;
	}],&#xd;
	&quot;departmentName&quot;: &quot;HLY自动化&quot;,&#xd;
	&quot;departmentOID&quot;: &quot;${departmentOID}&quot;,&#xd;
	&quot;departmentPath&quot;: &quot;HLY自动化&quot;,&#xd;
	&quot;expenseReportInvoices&quot;: [{&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T15:07:17Z&quot;,&#xd;
		&quot;expenseReportInvoiceOID&quot;: &quot;${visa_expenseReportInvoiceOID}&quot;,&#xd;
		&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;invoiceOID&quot;: &quot;${invoiceOID_visa}&quot;,&#xd;
		&quot;invoiceView&quot;: {&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_visa}&quot;,&#xd;
			&quot;expenseTypeId&quot;: &quot;${visa_expenseTypeId}&quot;,&#xd;
			&quot;expenseTypeOID&quot;: &quot;${visa_expenseTypeOID}&quot;,&#xd;
			&quot;expenseTypeName&quot;: &quot;签证&quot;,&#xd;
			&quot;crossCheckStatus&quot;: null,&#xd;
			&quot;expenseTypeKey&quot;: null,&#xd;
			&quot;expenseTypeIconName&quot;: &quot;visa&quot;,&#xd;
			&quot;phoneNumber&quot;: null,&#xd;
			&quot;email&quot;: null,&#xd;
			&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/7cb61778-e7f4-4e3b-bf94-8b0d8536d89e-visa.png&quot;,&#xd;
			&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
			&quot;expenseTypeCategoryDTO&quot;: {&#xd;
				&quot;expenseTypeCategoryOID&quot;: &quot;${visa_expenseTypeCategoryOID}&quot;,&#xd;
				&quot;name&quot;: &quot;费用类型&quot;,&#xd;
				&quot;code&quot;: null&#xd;
			},&#xd;
			&quot;costCenterItemOID&quot;: null,&#xd;
			&quot;costCenterItemName&quot;: null,&#xd;
			&quot;amount&quot;: 1,&#xd;
			&quot;originalAmount&quot;: 1,&#xd;
			&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;userOID&quot;: &quot;${userOID}&quot;,&#xd;
			&quot;mobile&quot;: null,&#xd;
			&quot;employeeId&quot;: null,&#xd;
			&quot;data&quot;: [{&#xd;
				&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
				&quot;name&quot;: &quot;国家&quot;,&#xd;
				&quot;value&quot;: &quot;中国&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;country&quot;,&#xd;
				&quot;sequence&quot;: 0,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;${visa_country_fieldOID}&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;中国&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}],&#xd;
			&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
			&quot;comment&quot;: &quot;签证费报销&quot;,&#xd;
			&quot;warning&quot;: &quot;&quot;,&#xd;
			&quot;overtime&quot;: &quot;N&quot;,&#xd;
			&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
			&quot;createdDate&quot;: &quot;2018-05-07T16:00:00Z&quot;,&#xd;
			&quot;attachments&quot;: [],&#xd;
			&quot;withReceipt&quot;: true,&#xd;
			&quot;readonly&quot;: false,&#xd;
			&quot;businessCode&quot;: null,&#xd;
			&quot;createLocation&quot;: null,&#xd;
			&quot;createTime&quot;: &quot;${createTime}T15:07:17Z&quot;,&#xd;
			&quot;rejectType&quot;: null,&#xd;
			&quot;approverId&quot;: null,&#xd;
			&quot;approvalStepId&quot;: null,&#xd;
			&quot;approvalOperates&quot;: null,&#xd;
			&quot;approver&quot;: null,&#xd;
			&quot;referenceId&quot;: null,&#xd;
			&quot;unitPrice&quot;: null,&#xd;
			&quot;number&quot;: null,&#xd;
			&quot;receiptFailType&quot;: null,&#xd;
			&quot;receiptFailReason&quot;: null,&#xd;
			&quot;valid&quot;: false,&#xd;
			&quot;receiptID&quot;: null,&#xd;
			&quot;cardSignType&quot;: null,&#xd;
			&quot;nonVATinclusiveAmount&quot;: null,&#xd;
			&quot;taxAmount&quot;: null,&#xd;
			&quot;receiptType&quot;: null,&#xd;
			&quot;receiptTypeNo&quot;: null,&#xd;
			&quot;invoiceCode&quot;: null,&#xd;
			&quot;invoiceNumber&quot;: null,&#xd;
			&quot;invoiceDate&quot;: null,&#xd;
			&quot;priceTaxAmount&quot;: null,&#xd;
			&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
			&quot;receiptGoodsID&quot;: null,&#xd;
			&quot;taxRate&quot;: null,&#xd;
			&quot;checkCode&quot;: null,&#xd;
			&quot;invoiceLabelDTOS&quot;: [],&#xd;
			&quot;invoiceLabels&quot;: [{&#xd;
				&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
				&quot;name&quot;: &quot;公司&quot;,&#xd;
				&quot;level&quot;: &quot;INFO&quot;,&#xd;
				&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
				&quot;toast&quot;: null,&#xd;
				&quot;category&quot;: null,&#xd;
				&quot;oldLabel&quot;: false&#xd;
			}],&#xd;
			&quot;companyOID&quot;: null,&#xd;
			&quot;invoiceInstead&quot;: true,&#xd;
			&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
			&quot;paymentType&quot;: 1002,&#xd;
			&quot;source&quot;: null,&#xd;
			&quot;ownerOID&quot;: &quot;${userOID}&quot;,&#xd;
			&quot;checked&quot;: null,&#xd;
			&quot;createInvoice&quot;: true,&#xd;
			&quot;checkWarning&quot;: null,&#xd;
			&quot;digitalInvoice&quot;: null,&#xd;
			&quot;digitalInvoiceId&quot;: null,&#xd;
			&quot;actualCurrencyRate&quot;: 1,&#xd;
			&quot;originalActualCurrencyRate&quot;: 1,&#xd;
			&quot;companyCurrencyRate&quot;: 1,&#xd;
			&quot;actualCurrencyAmount&quot;: 1,&#xd;
			&quot;baseAmount&quot;: 1,&#xd;
			&quot;updateRate&quot;: false,&#xd;
			&quot;flightNo&quot;: null,&#xd;
			&quot;apportionUsed&quot;: false,&#xd;
			&quot;expenseApportion&quot;: null,&#xd;
			&quot;expenseReportOID&quot;: null,&#xd;
			&quot;amountChanged&quot;: null,&#xd;
			&quot;approvalStatus&quot;: null,&#xd;
			&quot;bankTransactionID&quot;: null,&#xd;
			&quot;expenseCreatedType&quot;: null,&#xd;
			&quot;overDue&quot;: null,&#xd;
			&quot;bankTransactionDetail&quot;: null,&#xd;
			&quot;baseCurrency&quot;: null,&#xd;
			&quot;subsidyRepeatedFlag&quot;: false,&#xd;
			&quot;orderAmount&quot;: 1,&#xd;
			&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
			&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
			&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
			&quot;receiptedStatus&quot;: 0,&#xd;
			&quot;vatInvoice&quot;: false,&#xd;
			&quot;stringCol3&quot;: null,&#xd;
			&quot;recognized&quot;: false,&#xd;
			&quot;stringCol1&quot;: &quot;中国&quot;,&#xd;
			&quot;stringCol2&quot;: null,&#xd;
			&quot;status&quot;: 1000,&#xd;
			&quot;index&quot;: 1&#xd;
		},&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T15:07:17Z&quot;,&#xd;
		&quot;status&quot;: 1000&#xd;
	}, {&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T15:07:15Z&quot;,&#xd;
		&quot;expenseReportInvoiceOID&quot;: &quot;${file_expenseReportInvoiceOID}&quot;,&#xd;
		&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;invoiceOID&quot;: &quot;${invoiceOID_file}&quot;,&#xd;
		&quot;invoiceView&quot;: {&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_file}&quot;,&#xd;
			&quot;expenseTypeId&quot;: &quot;${file_expenseTypeId}&quot;,&#xd;
			&quot;expenseTypeOID&quot;: &quot;${file_expenseTypeOID}&quot;,&#xd;
			&quot;expenseTypeName&quot;: &quot;档案&quot;,&#xd;
			&quot;crossCheckStatus&quot;: 1,&#xd;
			&quot;expenseTypeKey&quot;: null,&#xd;
			&quot;expenseTypeIconName&quot;: &quot;file&quot;,&#xd;
			&quot;phoneNumber&quot;: null,&#xd;
			&quot;email&quot;: null,&#xd;
			&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/835ab2b0-d09a-4c33-97fa-73d61ab6d5fb-file.png&quot;,&#xd;
			&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
			&quot;expenseTypeCategoryDTO&quot;: {&#xd;
				&quot;expenseTypeCategoryOID&quot;: &quot;${file_expenseTypeCategoryOID}&quot;,&#xd;
				&quot;name&quot;: &quot;费用类型&quot;,&#xd;
				&quot;code&quot;: null&#xd;
			},&#xd;
			&quot;costCenterItemOID&quot;: null,&#xd;
			&quot;costCenterItemName&quot;: null,&#xd;
			&quot;amount&quot;: 1,&#xd;
			&quot;originalAmount&quot;: 1,&#xd;
			&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;userOID&quot;: &quot;${userOID}&quot;,&#xd;
			&quot;mobile&quot;: null,&#xd;
			&quot;employeeId&quot;: null,&#xd;
			&quot;data&quot;: [{&#xd;
				&quot;fieldType&quot;: &quot;DATE&quot;,&#xd;
				&quot;name&quot;: &quot;结束日期&quot;,&#xd;
				&quot;value&quot;: &quot;2018-06-30T10:20:04Z&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;end.date&quot;,&#xd;
				&quot;sequence&quot;: 1,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: null,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;${file_endDate_fieldOID}&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;2018-06-30T10:20:04Z&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: false,&#xd;
				&quot;i18n&quot;: null&#xd;
			}, {&#xd;
				&quot;fieldType&quot;: &quot;DATE&quot;,&#xd;
				&quot;name&quot;: &quot;开始日期&quot;,&#xd;
				&quot;value&quot;: &quot;2018-04-08T10:19:59Z&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;start.date&quot;,&#xd;
				&quot;sequence&quot;: 0,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: null,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;${file_startDate_fieldOID}&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;2018-04-08T10:19:59Z&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: false,&#xd;
				&quot;i18n&quot;: null&#xd;
			}, {&#xd;
				&quot;fieldType&quot;: &quot;PARTICIPANTS&quot;,&#xd;
				&quot;name&quot;: &quot;参与人&quot;,&#xd;
				&quot;value&quot;: &quot;[{\&quot;id\&quot;:\&quot;197249\&quot;,\&quot;login\&quot;:\&quot;hbrq87861111\&quot;,\&quot;userOID\&quot;:\&quot;${userOID}\&quot;,\&quot;companyOID\&quot;:\&quot;${companyOID}\&quot;,\&quot;password\&quot;:null,\&quot;fullName\&quot;:\&quot;admin\&quot;,\&quot;firstName\&quot;:null,\&quot;lastName\&quot;:null,\&quot;email\&quot;:\&quot;admin@autotest.com\&quot;,\&quot;mobile\&quot;:\&quot;${username}\&quot;,\&quot;employeeID\&quot;:\&quot;1111\&quot;,\&quot;title\&quot;:null,\&quot;activated\&quot;:true,\&quot;authorities\&quot;:[\&quot;ROLE_COMPANY_ADMIN\&quot;,\&quot;ROLE_USER\&quot;,\&quot;ROLE_COMPANY_FINANCE_ADMIN\&quot;,\&quot;ROLE_TENANT_ADMIN\&quot;],\&quot;departmentOID\&quot;:\&quot;${departmentOID}\&quot;,\&quot;departmentName\&quot;:\&quot;HLY自动化\&quot;,\&quot;filePath\&quot;:null,\&quot;avatar\&quot;:null,\&quot;status\&quot;:null,\&quot;companyName\&quot;:\&quot;HLY自动化\&quot;,\&quot;corporationOID\&quot;:\&quot;${corporationOID}\&quot;,\&quot;language\&quot;:\&quot;zh_CN\&quot;,\&quot;pageRoles\&quot;:[{\&quot;pageName\&quot;:\&quot;FINANCEMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;EXPENSEAUDIT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;RECEIPTEDINVOICES\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;EXPENSEPAYMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;LOANMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;LOANGLOBALVIEW\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;REPAYMENTSLIPMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;LOANBILLMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;PAYMENTBATCH\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;EXPENSEVIEW\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;VENDORRECONCILIATION\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;VENDORMAINTENANCE\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;PRINTINVOICEBATCH\&quot;,\&quot;action\&quot;:2}],\&quot;financeRoleOID\&quot;:\&quot;adeeed31-b361-480e-8b03-8d71deef3723\&quot;,\&quot;companyId\&quot;:889138,\&quot;tenantId\&quot;:\&quot;${tenantId}\&quot;,\&quot;directManager\&quot;:null,\&quot;directManagerId\&quot;:null,\&quot;directManagerName\&quot;:null,\&quot;departmentPath\&quot;:null,\&quot;senior\&quot;:false,\&quot;deleted\&quot;:false}]&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;participants&quot;,&#xd;
				&quot;sequence&quot;: 2,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: null,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;${participants_fieldOID}&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;[{\&quot;id\&quot;:\&quot;197249\&quot;,\&quot;login\&quot;:\&quot;hbrq87861111\&quot;,\&quot;userOID\&quot;:\&quot;${userOID}\&quot;,\&quot;companyOID\&quot;:\&quot;${companyOID}\&quot;,\&quot;password\&quot;:null,\&quot;fullName\&quot;:\&quot;admin\&quot;,\&quot;firstName\&quot;:null,\&quot;lastName\&quot;:null,\&quot;email\&quot;:\&quot;admin@autotest.com\&quot;,\&quot;mobile\&quot;:\&quot;${username}\&quot;,\&quot;employeeID\&quot;:\&quot;1111\&quot;,\&quot;title\&quot;:null,\&quot;activated\&quot;:true,\&quot;authorities\&quot;:[\&quot;ROLE_COMPANY_ADMIN\&quot;,\&quot;ROLE_USER\&quot;,\&quot;ROLE_COMPANY_FINANCE_ADMIN\&quot;,\&quot;ROLE_TENANT_ADMIN\&quot;],\&quot;departmentOID\&quot;:\&quot;${departmentOID}\&quot;,\&quot;departmentName\&quot;:\&quot;HLY自动化\&quot;,\&quot;filePath\&quot;:null,\&quot;avatar\&quot;:null,\&quot;status\&quot;:null,\&quot;companyName\&quot;:\&quot;HLY自动化\&quot;,\&quot;corporationOID\&quot;:\&quot;${corporationOID}\&quot;,\&quot;language\&quot;:\&quot;zh_CN\&quot;,\&quot;pageRoles\&quot;:[{\&quot;pageName\&quot;:\&quot;FINANCEMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;EXPENSEAUDIT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;RECEIPTEDINVOICES\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;EXPENSEPAYMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;LOANMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;LOANGLOBALVIEW\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;REPAYMENTSLIPMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;LOANBILLMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;PAYMENTBATCH\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;EXPENSEVIEW\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;VENDORRECONCILIATION\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;VENDORMAINTENANCE\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;PRINTINVOICEBATCH\&quot;,\&quot;action\&quot;:2}],\&quot;financeRoleOID\&quot;:\&quot;adeeed31-b361-480e-8b03-8d71deef3723\&quot;,\&quot;companyId\&quot;:889138,\&quot;tenantId\&quot;:\&quot;${tenantId}\&quot;,\&quot;directManager\&quot;:null,\&quot;directManagerId\&quot;:null,\&quot;directManagerName\&quot;:null,\&quot;departmentPath\&quot;:null,\&quot;senior\&quot;:false,\&quot;deleted\&quot;:false}]&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: false,&#xd;
				&quot;i18n&quot;: null&#xd;
			}],&#xd;
			&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
			&quot;comment&quot;: &quot;档案费报销&quot;,&#xd;
			&quot;warning&quot;: &quot;&quot;,&#xd;
			&quot;overtime&quot;: &quot;N&quot;,&#xd;
			&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
			&quot;createdDate&quot;: &quot;2018-05-08T16:00:00Z&quot;,&#xd;
			&quot;attachments&quot;: [],&#xd;
			&quot;withReceipt&quot;: true,&#xd;
			&quot;readonly&quot;: false,&#xd;
			&quot;businessCode&quot;: null,&#xd;
			&quot;createLocation&quot;: null,&#xd;
			&quot;createTime&quot;: &quot;${createTime}T15:07:15Z&quot;,&#xd;
			&quot;rejectType&quot;: null,&#xd;
			&quot;approverId&quot;: null,&#xd;
			&quot;approvalStepId&quot;: null,&#xd;
			&quot;approvalOperates&quot;: null,&#xd;
			&quot;approver&quot;: null,&#xd;
			&quot;referenceId&quot;: null,&#xd;
			&quot;unitPrice&quot;: null,&#xd;
			&quot;number&quot;: null,&#xd;
			&quot;receiptFailType&quot;: null,&#xd;
			&quot;receiptFailReason&quot;: null,&#xd;
			&quot;valid&quot;: false,&#xd;
			&quot;receiptID&quot;: null,&#xd;
			&quot;cardSignType&quot;: null,&#xd;
			&quot;nonVATinclusiveAmount&quot;: null,&#xd;
			&quot;taxAmount&quot;: null,&#xd;
			&quot;receiptType&quot;: null,&#xd;
			&quot;receiptTypeNo&quot;: null,&#xd;
			&quot;invoiceCode&quot;: null,&#xd;
			&quot;invoiceNumber&quot;: null,&#xd;
			&quot;invoiceDate&quot;: null,&#xd;
			&quot;priceTaxAmount&quot;: null,&#xd;
			&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
			&quot;receiptGoodsID&quot;: null,&#xd;
			&quot;taxRate&quot;: null,&#xd;
			&quot;checkCode&quot;: null,&#xd;
			&quot;invoiceLabelDTOS&quot;: [],&#xd;
			&quot;invoiceLabels&quot;: [{&#xd;
				&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
				&quot;name&quot;: &quot;公司&quot;,&#xd;
				&quot;level&quot;: &quot;INFO&quot;,&#xd;
				&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
				&quot;toast&quot;: null,&#xd;
				&quot;category&quot;: null,&#xd;
				&quot;oldLabel&quot;: false&#xd;
			}],&#xd;
			&quot;companyOID&quot;: null,&#xd;
			&quot;invoiceInstead&quot;: true,&#xd;
			&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
			&quot;paymentType&quot;: 1002,&#xd;
			&quot;source&quot;: null,&#xd;
			&quot;ownerOID&quot;: &quot;${userOID}&quot;,&#xd;
			&quot;checked&quot;: null,&#xd;
			&quot;createInvoice&quot;: true,&#xd;
			&quot;checkWarning&quot;: null,&#xd;
			&quot;digitalInvoice&quot;: null,&#xd;
			&quot;digitalInvoiceId&quot;: null,&#xd;
			&quot;actualCurrencyRate&quot;: 1,&#xd;
			&quot;originalActualCurrencyRate&quot;: 1,&#xd;
			&quot;companyCurrencyRate&quot;: 1,&#xd;
			&quot;actualCurrencyAmount&quot;: 1,&#xd;
			&quot;baseAmount&quot;: 1,&#xd;
			&quot;updateRate&quot;: false,&#xd;
			&quot;flightNo&quot;: null,&#xd;
			&quot;apportionUsed&quot;: false,&#xd;
			&quot;expenseApportion&quot;: null,&#xd;
			&quot;expenseReportOID&quot;: null,&#xd;
			&quot;amountChanged&quot;: null,&#xd;
			&quot;approvalStatus&quot;: null,&#xd;
			&quot;bankTransactionID&quot;: null,&#xd;
			&quot;expenseCreatedType&quot;: null,&#xd;
			&quot;overDue&quot;: null,&#xd;
			&quot;bankTransactionDetail&quot;: null,&#xd;
			&quot;baseCurrency&quot;: null,&#xd;
			&quot;subsidyRepeatedFlag&quot;: false,&#xd;
			&quot;orderAmount&quot;: 1,&#xd;
			&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
			&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
			&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
			&quot;receiptedStatus&quot;: 0,&#xd;
			&quot;vatInvoice&quot;: false,&#xd;
			&quot;stringCol3&quot;: null,&#xd;
			&quot;recognized&quot;: false,&#xd;
			&quot;stringCol1&quot;: null,&#xd;
			&quot;stringCol2&quot;: null,&#xd;
			&quot;status&quot;: 1000,&#xd;
			&quot;index&quot;: 2&#xd;
		},&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T15:07:15Z&quot;,&#xd;
		&quot;status&quot;: 1000&#xd;
	}, {&#xd;
		&quot;createdDate&quot;: &quot;2018-05-09T15:07:08Z&quot;,&#xd;
		&quot;expenseReportInvoiceOID&quot;: &quot;fb942730-f615-40cb-9821-a4fd72dce691&quot;,&#xd;
		&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;invoiceOID&quot;: &quot;${invoiceOID_express}&quot;,&#xd;
		&quot;invoiceView&quot;: {&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_express}&quot;,&#xd;
			&quot;expenseTypeId&quot;: &quot;917666881950972832&quot;,&#xd;
			&quot;expenseTypeOID&quot;: &quot;83a01d84-8c34-48fe-b42d-528036765d8c&quot;,&#xd;
			&quot;expenseTypeName&quot;: &quot;快递&quot;,&#xd;
			&quot;crossCheckStatus&quot;: null,&#xd;
			&quot;expenseTypeKey&quot;: null,&#xd;
			&quot;expenseTypeIconName&quot;: &quot;express&quot;,&#xd;
			&quot;phoneNumber&quot;: null,&#xd;
			&quot;email&quot;: null,&#xd;
			&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/7958999e-6bc1-4b4c-9ce1-0299caf5437c-express.png&quot;,&#xd;
			&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
			&quot;expenseTypeCategoryDTO&quot;: {&#xd;
				&quot;expenseTypeCategoryOID&quot;: &quot;c39ae68c-3f79-4c58-b655-8fbda51a9ba5&quot;,&#xd;
				&quot;name&quot;: &quot;费用类型&quot;,&#xd;
				&quot;code&quot;: null&#xd;
			},&#xd;
			&quot;costCenterItemOID&quot;: null,&#xd;
			&quot;costCenterItemName&quot;: null,&#xd;
			&quot;amount&quot;: 1,&#xd;
			&quot;originalAmount&quot;: 1,&#xd;
			&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;userOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
			&quot;mobile&quot;: null,&#xd;
			&quot;employeeId&quot;: null,&#xd;
			&quot;data&quot;: [{&#xd;
				&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
				&quot;name&quot;: &quot;城市&quot;,&#xd;
				&quot;value&quot;: &quot;西安&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;city&quot;,&#xd;
				&quot;sequence&quot;: 1,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;1bf95e2c-3dca-4e3a-be00-8df2af6d1cd9&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;西安&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}],&#xd;
			&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
			&quot;comment&quot;: &quot;快递费报销&quot;,&#xd;
			&quot;warning&quot;: &quot;&quot;,&#xd;
			&quot;overtime&quot;: &quot;N&quot;,&#xd;
			&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
			&quot;createdDate&quot;: &quot;2018-05-08T16:00:00Z&quot;,&#xd;
			&quot;attachments&quot;: [],&#xd;
			&quot;withReceipt&quot;: true,&#xd;
			&quot;readonly&quot;: false,&#xd;
			&quot;businessCode&quot;: null,&#xd;
			&quot;createLocation&quot;: null,&#xd;
			&quot;createTime&quot;: &quot;${createTime}T15:07:08Z&quot;,&#xd;
			&quot;rejectType&quot;: null,&#xd;
			&quot;approverId&quot;: null,&#xd;
			&quot;approvalStepId&quot;: null,&#xd;
			&quot;approvalOperates&quot;: null,&#xd;
			&quot;approver&quot;: null,&#xd;
			&quot;referenceId&quot;: null,&#xd;
			&quot;unitPrice&quot;: null,&#xd;
			&quot;number&quot;: null,&#xd;
			&quot;receiptFailType&quot;: null,&#xd;
			&quot;receiptFailReason&quot;: null,&#xd;
			&quot;valid&quot;: false,&#xd;
			&quot;receiptID&quot;: null,&#xd;
			&quot;cardSignType&quot;: null,&#xd;
			&quot;nonVATinclusiveAmount&quot;: null,&#xd;
			&quot;taxAmount&quot;: null,&#xd;
			&quot;receiptType&quot;: null,&#xd;
			&quot;receiptTypeNo&quot;: null,&#xd;
			&quot;invoiceCode&quot;: null,&#xd;
			&quot;invoiceNumber&quot;: null,&#xd;
			&quot;invoiceDate&quot;: null,&#xd;
			&quot;priceTaxAmount&quot;: null,&#xd;
			&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
			&quot;receiptGoodsID&quot;: null,&#xd;
			&quot;taxRate&quot;: null,&#xd;
			&quot;checkCode&quot;: null,&#xd;
			&quot;invoiceLabelDTOS&quot;: [],&#xd;
			&quot;invoiceLabels&quot;: [{&#xd;
				&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
				&quot;name&quot;: &quot;公司&quot;,&#xd;
				&quot;level&quot;: &quot;INFO&quot;,&#xd;
				&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
				&quot;toast&quot;: null,&#xd;
				&quot;category&quot;: null,&#xd;
				&quot;oldLabel&quot;: false&#xd;
			}],&#xd;
			&quot;companyOID&quot;: null,&#xd;
			&quot;invoiceInstead&quot;: true,&#xd;
			&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
			&quot;paymentType&quot;: 1002,&#xd;
			&quot;source&quot;: null,&#xd;
			&quot;ownerOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
			&quot;checked&quot;: null,&#xd;
			&quot;createInvoice&quot;: true,&#xd;
			&quot;checkWarning&quot;: null,&#xd;
			&quot;digitalInvoice&quot;: null,&#xd;
			&quot;digitalInvoiceId&quot;: null,&#xd;
			&quot;actualCurrencyRate&quot;: 1,&#xd;
			&quot;originalActualCurrencyRate&quot;: 1,&#xd;
			&quot;companyCurrencyRate&quot;: 1,&#xd;
			&quot;actualCurrencyAmount&quot;: 1,&#xd;
			&quot;baseAmount&quot;: 1,&#xd;
			&quot;updateRate&quot;: false,&#xd;
			&quot;flightNo&quot;: null,&#xd;
			&quot;apportionUsed&quot;: false,&#xd;
			&quot;expenseApportion&quot;: null,&#xd;
			&quot;expenseReportOID&quot;: null,&#xd;
			&quot;amountChanged&quot;: null,&#xd;
			&quot;approvalStatus&quot;: null,&#xd;
			&quot;bankTransactionID&quot;: null,&#xd;
			&quot;expenseCreatedType&quot;: null,&#xd;
			&quot;overDue&quot;: null,&#xd;
			&quot;bankTransactionDetail&quot;: null,&#xd;
			&quot;baseCurrency&quot;: null,&#xd;
			&quot;subsidyRepeatedFlag&quot;: false,&#xd;
			&quot;orderAmount&quot;: 1,&#xd;
			&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
			&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
			&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
			&quot;receiptedStatus&quot;: 0,&#xd;
			&quot;vatInvoice&quot;: false,&#xd;
			&quot;stringCol3&quot;: null,&#xd;
			&quot;recognized&quot;: false,&#xd;
			&quot;stringCol1&quot;: &quot;西安&quot;,&#xd;
			&quot;stringCol2&quot;: null,&#xd;
			&quot;status&quot;: 1000,&#xd;
			&quot;index&quot;: 3&#xd;
		},&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T15:07:08Z&quot;,&#xd;
		&quot;status&quot;: 1000&#xd;
	}, {&#xd;
		&quot;createdDate&quot;: &quot;2018-05-09T15:07:18Z&quot;,&#xd;
		&quot;expenseReportInvoiceOID&quot;: &quot;0555331b-036d-42aa-a47a-f06bd798bc6f&quot;,&#xd;
		&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;invoiceOID&quot;: &quot;${invoiceOID_meal_1}&quot;,&#xd;
		&quot;invoiceView&quot;: {&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_meal_1}&quot;,&#xd;
			&quot;expenseTypeId&quot;: &quot;917666881950972837&quot;,&#xd;
			&quot;expenseTypeOID&quot;: &quot;51bf1d01-378a-473d-8601-0ed004ea6789&quot;,&#xd;
			&quot;expenseTypeName&quot;: &quot;餐补&quot;,&#xd;
			&quot;crossCheckStatus&quot;: null,&#xd;
			&quot;expenseTypeKey&quot;: null,&#xd;
			&quot;expenseTypeIconName&quot;: &quot;mealAllowance&quot;,&#xd;
			&quot;phoneNumber&quot;: null,&#xd;
			&quot;email&quot;: null,&#xd;
			&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/a8a8eaba-568d-4af4-b001-12931e151a2e-mealAllowance.png&quot;,&#xd;
			&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
			&quot;expenseTypeCategoryDTO&quot;: {&#xd;
				&quot;expenseTypeCategoryOID&quot;: &quot;c39ae68c-3f79-4c58-b655-8fbda51a9ba5&quot;,&#xd;
				&quot;name&quot;: &quot;费用类型&quot;,&#xd;
				&quot;code&quot;: null&#xd;
			},&#xd;
			&quot;costCenterItemOID&quot;: null,&#xd;
			&quot;costCenterItemName&quot;: null,&#xd;
			&quot;amount&quot;: 1,&#xd;
			&quot;originalAmount&quot;: 1,&#xd;
			&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;userOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
			&quot;mobile&quot;: null,&#xd;
			&quot;employeeId&quot;: null,&#xd;
			&quot;data&quot;: [{&#xd;
				&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
				&quot;name&quot;: &quot;国家&quot;,&#xd;
				&quot;value&quot;: &quot;中国&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;country&quot;,&#xd;
				&quot;sequence&quot;: 1,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;8a208786-215c-49d8-8691-2e8504c70e8d&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;中国&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}],&#xd;
			&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
			&quot;comment&quot;: &quot;餐补报销&quot;,&#xd;
			&quot;warning&quot;: &quot;&quot;,&#xd;
			&quot;overtime&quot;: &quot;N&quot;,&#xd;
			&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
			&quot;createdDate&quot;: &quot;2018-05-08T16:00:00Z&quot;,&#xd;
			&quot;attachments&quot;: [],&#xd;
			&quot;withReceipt&quot;: true,&#xd;
			&quot;readonly&quot;: false,&#xd;
			&quot;businessCode&quot;: null,&#xd;
			&quot;createLocation&quot;: null,&#xd;
			&quot;createTime&quot;: &quot;${createTime}T15:07:18Z&quot;,&#xd;
			&quot;rejectType&quot;: null,&#xd;
			&quot;approverId&quot;: null,&#xd;
			&quot;approvalStepId&quot;: null,&#xd;
			&quot;approvalOperates&quot;: null,&#xd;
			&quot;approver&quot;: null,&#xd;
			&quot;referenceId&quot;: null,&#xd;
			&quot;unitPrice&quot;: null,&#xd;
			&quot;number&quot;: null,&#xd;
			&quot;receiptFailType&quot;: null,&#xd;
			&quot;receiptFailReason&quot;: null,&#xd;
			&quot;valid&quot;: false,&#xd;
			&quot;receiptID&quot;: null,&#xd;
			&quot;cardSignType&quot;: null,&#xd;
			&quot;nonVATinclusiveAmount&quot;: null,&#xd;
			&quot;taxAmount&quot;: null,&#xd;
			&quot;receiptType&quot;: null,&#xd;
			&quot;receiptTypeNo&quot;: null,&#xd;
			&quot;invoiceCode&quot;: null,&#xd;
			&quot;invoiceNumber&quot;: null,&#xd;
			&quot;invoiceDate&quot;: null,&#xd;
			&quot;priceTaxAmount&quot;: null,&#xd;
			&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
			&quot;receiptGoodsID&quot;: null,&#xd;
			&quot;taxRate&quot;: null,&#xd;
			&quot;checkCode&quot;: null,&#xd;
			&quot;invoiceLabelDTOS&quot;: [],&#xd;
			&quot;invoiceLabels&quot;: [{&#xd;
				&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
				&quot;name&quot;: &quot;公司&quot;,&#xd;
				&quot;level&quot;: &quot;INFO&quot;,&#xd;
				&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
				&quot;toast&quot;: null,&#xd;
				&quot;category&quot;: null,&#xd;
				&quot;oldLabel&quot;: false&#xd;
			}],&#xd;
			&quot;companyOID&quot;: null,&#xd;
			&quot;invoiceInstead&quot;: true,&#xd;
			&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
			&quot;paymentType&quot;: 1002,&#xd;
			&quot;source&quot;: null,&#xd;
			&quot;ownerOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
			&quot;checked&quot;: null,&#xd;
			&quot;createInvoice&quot;: true,&#xd;
			&quot;checkWarning&quot;: null,&#xd;
			&quot;digitalInvoice&quot;: null,&#xd;
			&quot;digitalInvoiceId&quot;: null,&#xd;
			&quot;actualCurrencyRate&quot;: 1,&#xd;
			&quot;originalActualCurrencyRate&quot;: 1,&#xd;
			&quot;companyCurrencyRate&quot;: 1,&#xd;
			&quot;actualCurrencyAmount&quot;: 1,&#xd;
			&quot;baseAmount&quot;: 1,&#xd;
			&quot;updateRate&quot;: false,&#xd;
			&quot;flightNo&quot;: null,&#xd;
			&quot;apportionUsed&quot;: false,&#xd;
			&quot;expenseApportion&quot;: null,&#xd;
			&quot;expenseReportOID&quot;: null,&#xd;
			&quot;amountChanged&quot;: null,&#xd;
			&quot;approvalStatus&quot;: null,&#xd;
			&quot;bankTransactionID&quot;: null,&#xd;
			&quot;expenseCreatedType&quot;: null,&#xd;
			&quot;overDue&quot;: null,&#xd;
			&quot;bankTransactionDetail&quot;: null,&#xd;
			&quot;baseCurrency&quot;: null,&#xd;
			&quot;subsidyRepeatedFlag&quot;: false,&#xd;
			&quot;orderAmount&quot;: 1,&#xd;
			&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
			&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
			&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
			&quot;receiptedStatus&quot;: 0,&#xd;
			&quot;vatInvoice&quot;: false,&#xd;
			&quot;stringCol3&quot;: null,&#xd;
			&quot;recognized&quot;: false,&#xd;
			&quot;stringCol1&quot;: &quot;中国&quot;,&#xd;
			&quot;stringCol2&quot;: null,&#xd;
			&quot;status&quot;: 1000,&#xd;
			&quot;index&quot;: 4&#xd;
		},&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T15:07:18Z&quot;,&#xd;
		&quot;status&quot;: 1000&#xd;
	}, {&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T15:07:01Z&quot;,&#xd;
		&quot;expenseReportInvoiceOID&quot;: &quot;6a9e3373-e19e-486e-bbc7-723f0434ca1e&quot;,&#xd;
		&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;invoiceOID&quot;: &quot;${invoiceOID_travel_1}&quot;,&#xd;
		&quot;invoiceView&quot;: {&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_travel_1}&quot;,&#xd;
			&quot;expenseTypeId&quot;: &quot;917666881950972825&quot;,&#xd;
			&quot;expenseTypeOID&quot;: &quot;426d9d41-2c5e-4121-83ce-43f4cf45e54e&quot;,&#xd;
			&quot;expenseTypeName&quot;: &quot;火车&quot;,&#xd;
			&quot;crossCheckStatus&quot;: null,&#xd;
			&quot;expenseTypeKey&quot;: null,&#xd;
			&quot;expenseTypeIconName&quot;: &quot;travel&quot;,&#xd;
			&quot;phoneNumber&quot;: null,&#xd;
			&quot;email&quot;: null,&#xd;
			&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/15d980f7-faec-42ad-a7f7-c04a98dc4f59-travel.png&quot;,&#xd;
			&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
			&quot;expenseTypeCategoryDTO&quot;: {&#xd;
				&quot;expenseTypeCategoryOID&quot;: &quot;c39ae68c-3f79-4c58-b655-8fbda51a9ba5&quot;,&#xd;
				&quot;name&quot;: &quot;费用类型&quot;,&#xd;
				&quot;code&quot;: null&#xd;
			},&#xd;
			&quot;costCenterItemOID&quot;: null,&#xd;
			&quot;costCenterItemName&quot;: null,&#xd;
			&quot;amount&quot;: 1,&#xd;
			&quot;originalAmount&quot;: 1,&#xd;
			&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;userOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
			&quot;mobile&quot;: null,&#xd;
			&quot;employeeId&quot;: null,&#xd;
			&quot;data&quot;: [{&#xd;
				&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
				&quot;name&quot;: &quot;目的地&quot;,&#xd;
				&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;上海火车站[地铁站]\&quot;,\&quot;longitude\&quot;:121.455716,\&quot;latitude\&quot;:31.247401}&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;destination.location&quot;,&#xd;
				&quot;sequence&quot;: 2,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;6dfb46ca-b7fe-44a5-b04a-0862d85974e0&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;{\&quot;address\&quot;:\&quot;上海火车站[地铁站]\&quot;,\&quot;longitude\&quot;:121.455716,\&quot;latitude\&quot;:31.247401}&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}, {&#xd;
				&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
				&quot;name&quot;: &quot;出发地&quot;,&#xd;
				&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;西安火车站\&quot;,\&quot;longitude\&quot;:108.962682113,\&quot;latitude\&quot;:34.277386079}&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;departure.location&quot;,&#xd;
				&quot;sequence&quot;: 1,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;80d73fa1-8b99-4e22-bca9-9fe8cd3cdbdd&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;{\&quot;address\&quot;:\&quot;西安火车站\&quot;,\&quot;longitude\&quot;:108.962682113,\&quot;latitude\&quot;:34.277386079}&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}],&#xd;
			&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
			&quot;comment&quot;: &quot;火车费报销&quot;,&#xd;
			&quot;warning&quot;: &quot;&quot;,&#xd;
			&quot;overtime&quot;: &quot;N&quot;,&#xd;
			&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
			&quot;createdDate&quot;: &quot;2018-05-08T16:00:00Z&quot;,&#xd;
			&quot;attachments&quot;: [],&#xd;
			&quot;withReceipt&quot;: true,&#xd;
			&quot;readonly&quot;: false,&#xd;
			&quot;businessCode&quot;: null,&#xd;
			&quot;createLocation&quot;: null,&#xd;
			&quot;createTime&quot;: &quot;${createTime}T15:07:01Z&quot;,&#xd;
			&quot;rejectType&quot;: null,&#xd;
			&quot;approverId&quot;: null,&#xd;
			&quot;approvalStepId&quot;: null,&#xd;
			&quot;approvalOperates&quot;: null,&#xd;
			&quot;approver&quot;: null,&#xd;
			&quot;referenceId&quot;: null,&#xd;
			&quot;unitPrice&quot;: null,&#xd;
			&quot;number&quot;: null,&#xd;
			&quot;receiptFailType&quot;: null,&#xd;
			&quot;receiptFailReason&quot;: null,&#xd;
			&quot;valid&quot;: false,&#xd;
			&quot;receiptID&quot;: null,&#xd;
			&quot;cardSignType&quot;: null,&#xd;
			&quot;nonVATinclusiveAmount&quot;: null,&#xd;
			&quot;taxAmount&quot;: null,&#xd;
			&quot;receiptType&quot;: null,&#xd;
			&quot;receiptTypeNo&quot;: null,&#xd;
			&quot;invoiceCode&quot;: null,&#xd;
			&quot;invoiceNumber&quot;: null,&#xd;
			&quot;invoiceDate&quot;: null,&#xd;
			&quot;priceTaxAmount&quot;: null,&#xd;
			&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
			&quot;receiptGoodsID&quot;: null,&#xd;
			&quot;taxRate&quot;: null,&#xd;
			&quot;checkCode&quot;: null,&#xd;
			&quot;invoiceLabelDTOS&quot;: [],&#xd;
			&quot;invoiceLabels&quot;: [{&#xd;
				&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
				&quot;name&quot;: &quot;公司&quot;,&#xd;
				&quot;level&quot;: &quot;INFO&quot;,&#xd;
				&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
				&quot;toast&quot;: null,&#xd;
				&quot;category&quot;: null,&#xd;
				&quot;oldLabel&quot;: false&#xd;
			}],&#xd;
			&quot;companyOID&quot;: null,&#xd;
			&quot;invoiceInstead&quot;: true,&#xd;
			&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
			&quot;paymentType&quot;: 1002,&#xd;
			&quot;source&quot;: null,&#xd;
			&quot;ownerOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
			&quot;checked&quot;: null,&#xd;
			&quot;createInvoice&quot;: true,&#xd;
			&quot;checkWarning&quot;: null,&#xd;
			&quot;digitalInvoice&quot;: null,&#xd;
			&quot;digitalInvoiceId&quot;: null,&#xd;
			&quot;actualCurrencyRate&quot;: 1,&#xd;
			&quot;originalActualCurrencyRate&quot;: 1,&#xd;
			&quot;companyCurrencyRate&quot;: 1,&#xd;
			&quot;actualCurrencyAmount&quot;: 1,&#xd;
			&quot;baseAmount&quot;: 1,&#xd;
			&quot;updateRate&quot;: false,&#xd;
			&quot;flightNo&quot;: null,&#xd;
			&quot;apportionUsed&quot;: false,&#xd;
			&quot;expenseApportion&quot;: null,&#xd;
			&quot;expenseReportOID&quot;: null,&#xd;
			&quot;amountChanged&quot;: null,&#xd;
			&quot;approvalStatus&quot;: null,&#xd;
			&quot;bankTransactionID&quot;: null,&#xd;
			&quot;expenseCreatedType&quot;: null,&#xd;
			&quot;overDue&quot;: null,&#xd;
			&quot;bankTransactionDetail&quot;: null,&#xd;
			&quot;baseCurrency&quot;: null,&#xd;
			&quot;subsidyRepeatedFlag&quot;: false,&#xd;
			&quot;orderAmount&quot;: 1,&#xd;
			&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
			&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
			&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
			&quot;receiptedStatus&quot;: 0,&#xd;
			&quot;vatInvoice&quot;: false,&#xd;
			&quot;stringCol3&quot;: null,&#xd;
			&quot;recognized&quot;: false,&#xd;
			&quot;stringCol1&quot;: &quot;{\&quot;address\&quot;:\&quot;西安火车站\&quot;,\&quot;longitude\&quot;:108.962682113,\&quot;latitude\&quot;:34.277386079}&quot;,&#xd;
			&quot;stringCol2&quot;: null,&#xd;
			&quot;status&quot;: 1000,&#xd;
			&quot;index&quot;: 5&#xd;
		},&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T15:07:01Z&quot;,&#xd;
		&quot;status&quot;: 1000&#xd;
	}, {&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T15:07:00Z&quot;,&#xd;
		&quot;expenseReportInvoiceOID&quot;: &quot;8460fc69-10c1-4b2e-92ff-e02664bd63b8&quot;,&#xd;
		&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;invoiceOID&quot;: &quot;${invoiceOID_coach_1}&quot;,&#xd;
		&quot;invoiceView&quot;: {&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_coach_1}&quot;,&#xd;
			&quot;expenseTypeId&quot;: &quot;917666881950972824&quot;,&#xd;
			&quot;expenseTypeOID&quot;: &quot;acd31a5c-7785-426f-a940-38f8878cadf1&quot;,&#xd;
			&quot;expenseTypeName&quot;: &quot;大巴&quot;,&#xd;
			&quot;crossCheckStatus&quot;: null,&#xd;
			&quot;expenseTypeKey&quot;: null,&#xd;
			&quot;expenseTypeIconName&quot;: &quot;coach&quot;,&#xd;
			&quot;phoneNumber&quot;: null,&#xd;
			&quot;email&quot;: null,&#xd;
			&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/616b0ab3-aa59-46ca-bf69-b3d2e53ea8ff-coach.png&quot;,&#xd;
			&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
			&quot;expenseTypeCategoryDTO&quot;: {&#xd;
				&quot;expenseTypeCategoryOID&quot;: &quot;c39ae68c-3f79-4c58-b655-8fbda51a9ba5&quot;,&#xd;
				&quot;name&quot;: &quot;费用类型&quot;,&#xd;
				&quot;code&quot;: null&#xd;
			},&#xd;
			&quot;costCenterItemOID&quot;: null,&#xd;
			&quot;costCenterItemName&quot;: null,&#xd;
			&quot;amount&quot;: 1,&#xd;
			&quot;originalAmount&quot;: 1,&#xd;
			&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;userOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
			&quot;mobile&quot;: null,&#xd;
			&quot;employeeId&quot;: null,&#xd;
			&quot;data&quot;: [{&#xd;
				&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
				&quot;name&quot;: &quot;出发地&quot;,&#xd;
				&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;华为西安研究所\&quot;,\&quot;longitude\&quot;:108.83902,\&quot;latitude\&quot;:34.19428}&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;departure.location&quot;,&#xd;
				&quot;sequence&quot;: 1,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;42b39985-58ff-4d92-af16-4ff92c3a9857&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;{\&quot;address\&quot;:\&quot;华为西安研究所\&quot;,\&quot;longitude\&quot;:108.83902,\&quot;latitude\&quot;:34.19428}&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}, {&#xd;
				&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
				&quot;name&quot;: &quot;目的地&quot;,&#xd;
				&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;西安环普科技产业园\&quot;,\&quot;longitude\&quot;:108.84068,\&quot;latitude\&quot;:34.20974}&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;destination.location&quot;,&#xd;
				&quot;sequence&quot;: 2,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;97f79e85-0b88-402a-8c01-4a4da8d57add&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;{\&quot;address\&quot;:\&quot;西安环普科技产业园\&quot;,\&quot;longitude\&quot;:108.84068,\&quot;latitude\&quot;:34.20974}&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}],&#xd;
			&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
			&quot;comment&quot;: &quot;大巴费报销&quot;,&#xd;
			&quot;warning&quot;: &quot;&quot;,&#xd;
			&quot;overtime&quot;: &quot;N&quot;,&#xd;
			&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
			&quot;createdDate&quot;: &quot;2018-05-08T16:00:00Z&quot;,&#xd;
			&quot;attachments&quot;: [],&#xd;
			&quot;withReceipt&quot;: true,&#xd;
			&quot;readonly&quot;: false,&#xd;
			&quot;businessCode&quot;: null,&#xd;
			&quot;createLocation&quot;: null,&#xd;
			&quot;createTime&quot;: &quot;${createTime}T15:07:00Z&quot;,&#xd;
			&quot;rejectType&quot;: null,&#xd;
			&quot;approverId&quot;: null,&#xd;
			&quot;approvalStepId&quot;: null,&#xd;
			&quot;approvalOperates&quot;: null,&#xd;
			&quot;approver&quot;: null,&#xd;
			&quot;referenceId&quot;: null,&#xd;
			&quot;unitPrice&quot;: null,&#xd;
			&quot;number&quot;: null,&#xd;
			&quot;receiptFailType&quot;: null,&#xd;
			&quot;receiptFailReason&quot;: null,&#xd;
			&quot;valid&quot;: false,&#xd;
			&quot;receiptID&quot;: null,&#xd;
			&quot;cardSignType&quot;: null,&#xd;
			&quot;nonVATinclusiveAmount&quot;: null,&#xd;
			&quot;taxAmount&quot;: null,&#xd;
			&quot;receiptType&quot;: null,&#xd;
			&quot;receiptTypeNo&quot;: null,&#xd;
			&quot;invoiceCode&quot;: null,&#xd;
			&quot;invoiceNumber&quot;: null,&#xd;
			&quot;invoiceDate&quot;: null,&#xd;
			&quot;priceTaxAmount&quot;: null,&#xd;
			&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
			&quot;receiptGoodsID&quot;: null,&#xd;
			&quot;taxRate&quot;: null,&#xd;
			&quot;checkCode&quot;: null,&#xd;
			&quot;invoiceLabelDTOS&quot;: [],&#xd;
			&quot;invoiceLabels&quot;: [{&#xd;
				&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
				&quot;name&quot;: &quot;公司&quot;,&#xd;
				&quot;level&quot;: &quot;INFO&quot;,&#xd;
				&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
				&quot;toast&quot;: null,&#xd;
				&quot;category&quot;: null,&#xd;
				&quot;oldLabel&quot;: false&#xd;
			}],&#xd;
			&quot;companyOID&quot;: null,&#xd;
			&quot;invoiceInstead&quot;: true,&#xd;
			&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
			&quot;paymentType&quot;: 1002,&#xd;
			&quot;source&quot;: null,&#xd;
			&quot;ownerOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
			&quot;checked&quot;: null,&#xd;
			&quot;createInvoice&quot;: true,&#xd;
			&quot;checkWarning&quot;: null,&#xd;
			&quot;digitalInvoice&quot;: null,&#xd;
			&quot;digitalInvoiceId&quot;: null,&#xd;
			&quot;actualCurrencyRate&quot;: 1,&#xd;
			&quot;originalActualCurrencyRate&quot;: 1,&#xd;
			&quot;companyCurrencyRate&quot;: 1,&#xd;
			&quot;actualCurrencyAmount&quot;: 1,&#xd;
			&quot;baseAmount&quot;: 1,&#xd;
			&quot;updateRate&quot;: false,&#xd;
			&quot;flightNo&quot;: null,&#xd;
			&quot;apportionUsed&quot;: false,&#xd;
			&quot;expenseApportion&quot;: null,&#xd;
			&quot;expenseReportOID&quot;: null,&#xd;
			&quot;amountChanged&quot;: null,&#xd;
			&quot;approvalStatus&quot;: null,&#xd;
			&quot;bankTransactionID&quot;: null,&#xd;
			&quot;expenseCreatedType&quot;: null,&#xd;
			&quot;overDue&quot;: null,&#xd;
			&quot;bankTransactionDetail&quot;: null,&#xd;
			&quot;baseCurrency&quot;: null,&#xd;
			&quot;subsidyRepeatedFlag&quot;: false,&#xd;
			&quot;orderAmount&quot;: 1,&#xd;
			&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
			&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
			&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
			&quot;receiptedStatus&quot;: 0,&#xd;
			&quot;vatInvoice&quot;: false,&#xd;
			&quot;stringCol3&quot;: null,&#xd;
			&quot;recognized&quot;: false,&#xd;
			&quot;stringCol1&quot;: &quot;{\&quot;address\&quot;:\&quot;华为西安研究所\&quot;,\&quot;longitude\&quot;:108.83902,\&quot;latitude\&quot;:34.19428}&quot;,&#xd;
			&quot;stringCol2&quot;: null,&#xd;
			&quot;status&quot;: 1000,&#xd;
			&quot;index&quot;: 6&#xd;
		},&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T15:07:00Z&quot;,&#xd;
		&quot;status&quot;: 1000&#xd;
	}, {&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T15:07:03Z&quot;,&#xd;
		&quot;expenseReportInvoiceOID&quot;: &quot;1de5762b-ce09-409e-9eef-11867f2f0d71&quot;,&#xd;
		&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;invoiceOID&quot;: &quot;${invoiceOID_team_1}&quot;,&#xd;
		&quot;invoiceView&quot;: {&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_team_1}&quot;,&#xd;
			&quot;expenseTypeId&quot;: &quot;917666881950972827&quot;,&#xd;
			&quot;expenseTypeOID&quot;: &quot;a1da85e8-4745-40fb-9c5b-a4ded54de851&quot;,&#xd;
			&quot;expenseTypeName&quot;: &quot;娱乐&quot;,&#xd;
			&quot;crossCheckStatus&quot;: null,&#xd;
			&quot;expenseTypeKey&quot;: null,&#xd;
			&quot;expenseTypeIconName&quot;: &quot;teambuilding&quot;,&#xd;
			&quot;phoneNumber&quot;: null,&#xd;
			&quot;email&quot;: null,&#xd;
			&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/ad3d3df7-e75a-456c-bb54-99c4f97cec8c-teambuilding.png&quot;,&#xd;
			&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
			&quot;expenseTypeCategoryDTO&quot;: {&#xd;
				&quot;expenseTypeCategoryOID&quot;: &quot;c39ae68c-3f79-4c58-b655-8fbda51a9ba5&quot;,&#xd;
				&quot;name&quot;: &quot;费用类型&quot;,&#xd;
				&quot;code&quot;: null&#xd;
			},&#xd;
			&quot;costCenterItemOID&quot;: null,&#xd;
			&quot;costCenterItemName&quot;: null,&#xd;
			&quot;amount&quot;: 1,&#xd;
			&quot;originalAmount&quot;: 1,&#xd;
			&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;userOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
			&quot;mobile&quot;: null,&#xd;
			&quot;employeeId&quot;: null,&#xd;
			&quot;data&quot;: [{&#xd;
				&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
				&quot;name&quot;: &quot;城市&quot;,&#xd;
				&quot;value&quot;: &quot;西安&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;city&quot;,&#xd;
				&quot;sequence&quot;: 1,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;54f72bee-fc83-41d2-8d94-200972f0891a&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;西安&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}, {&#xd;
				&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
				&quot;name&quot;: &quot;方式&quot;,&#xd;
				&quot;value&quot;: &quot;KTV&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;method&quot;,&#xd;
				&quot;sequence&quot;: 2,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;900020fc-0667-4ecf-bdc8-c4b3398b3fea&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;KTV&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}, {&#xd;
				&quot;fieldType&quot;: &quot;LONG&quot;,&#xd;
				&quot;name&quot;: &quot;人数&quot;,&#xd;
				&quot;value&quot;: &quot;3&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;head.count&quot;,&#xd;
				&quot;sequence&quot;: 3,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;f0de3e06-b563-493a-bcad-227bb4764e68&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;3&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}, {&#xd;
				&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
				&quot;name&quot;: &quot;对象&quot;,&#xd;
				&quot;value&quot;: &quot;a，b，c&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;person&quot;,&#xd;
				&quot;sequence&quot;: 4,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;e996e926-cc0f-4057-a7b5-4c9b5607757d&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;a，b，c&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}],&#xd;
			&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
			&quot;comment&quot;: &quot;娱乐报销&quot;,&#xd;
			&quot;warning&quot;: &quot;&quot;,&#xd;
			&quot;overtime&quot;: &quot;N&quot;,&#xd;
			&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
			&quot;createdDate&quot;: &quot;2018-05-08T16:00:00Z&quot;,&#xd;
			&quot;attachments&quot;: [],&#xd;
			&quot;withReceipt&quot;: true,&#xd;
			&quot;readonly&quot;: false,&#xd;
			&quot;businessCode&quot;: null,&#xd;
			&quot;createLocation&quot;: null,&#xd;
			&quot;createTime&quot;: &quot;${createTime}T15:07:03Z&quot;,&#xd;
			&quot;rejectType&quot;: null,&#xd;
			&quot;approverId&quot;: null,&#xd;
			&quot;approvalStepId&quot;: null,&#xd;
			&quot;approvalOperates&quot;: null,&#xd;
			&quot;approver&quot;: null,&#xd;
			&quot;referenceId&quot;: null,&#xd;
			&quot;unitPrice&quot;: null,&#xd;
			&quot;number&quot;: null,&#xd;
			&quot;receiptFailType&quot;: null,&#xd;
			&quot;receiptFailReason&quot;: null,&#xd;
			&quot;valid&quot;: false,&#xd;
			&quot;receiptID&quot;: null,&#xd;
			&quot;cardSignType&quot;: null,&#xd;
			&quot;nonVATinclusiveAmount&quot;: null,&#xd;
			&quot;taxAmount&quot;: null,&#xd;
			&quot;receiptType&quot;: null,&#xd;
			&quot;receiptTypeNo&quot;: null,&#xd;
			&quot;invoiceCode&quot;: null,&#xd;
			&quot;invoiceNumber&quot;: null,&#xd;
			&quot;invoiceDate&quot;: null,&#xd;
			&quot;priceTaxAmount&quot;: null,&#xd;
			&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
			&quot;receiptGoodsID&quot;: null,&#xd;
			&quot;taxRate&quot;: null,&#xd;
			&quot;checkCode&quot;: null,&#xd;
			&quot;invoiceLabelDTOS&quot;: [],&#xd;
			&quot;invoiceLabels&quot;: [{&#xd;
				&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
				&quot;name&quot;: &quot;公司&quot;,&#xd;
				&quot;level&quot;: &quot;INFO&quot;,&#xd;
				&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
				&quot;toast&quot;: null,&#xd;
				&quot;category&quot;: null,&#xd;
				&quot;oldLabel&quot;: false&#xd;
			}],&#xd;
			&quot;companyOID&quot;: null,&#xd;
			&quot;invoiceInstead&quot;: true,&#xd;
			&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
			&quot;paymentType&quot;: 1002,&#xd;
			&quot;source&quot;: null,&#xd;
			&quot;ownerOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
			&quot;checked&quot;: null,&#xd;
			&quot;createInvoice&quot;: true,&#xd;
			&quot;checkWarning&quot;: null,&#xd;
			&quot;digitalInvoice&quot;: null,&#xd;
			&quot;digitalInvoiceId&quot;: null,&#xd;
			&quot;actualCurrencyRate&quot;: 1,&#xd;
			&quot;originalActualCurrencyRate&quot;: 1,&#xd;
			&quot;companyCurrencyRate&quot;: 1,&#xd;
			&quot;actualCurrencyAmount&quot;: 1,&#xd;
			&quot;baseAmount&quot;: 1,&#xd;
			&quot;updateRate&quot;: false,&#xd;
			&quot;flightNo&quot;: null,&#xd;
			&quot;apportionUsed&quot;: false,&#xd;
			&quot;expenseApportion&quot;: null,&#xd;
			&quot;expenseReportOID&quot;: null,&#xd;
			&quot;amountChanged&quot;: null,&#xd;
			&quot;approvalStatus&quot;: null,&#xd;
			&quot;bankTransactionID&quot;: null,&#xd;
			&quot;expenseCreatedType&quot;: null,&#xd;
			&quot;overDue&quot;: null,&#xd;
			&quot;bankTransactionDetail&quot;: null,&#xd;
			&quot;baseCurrency&quot;: null,&#xd;
			&quot;subsidyRepeatedFlag&quot;: false,&#xd;
			&quot;orderAmount&quot;: 1,&#xd;
			&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
			&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
			&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
			&quot;receiptedStatus&quot;: 0,&#xd;
			&quot;vatInvoice&quot;: false,&#xd;
			&quot;stringCol3&quot;: &quot;a，b，c&quot;,&#xd;
			&quot;recognized&quot;: false,&#xd;
			&quot;stringCol1&quot;: &quot;西安&quot;,&#xd;
			&quot;stringCol2&quot;: null,&#xd;
			&quot;status&quot;: 1000,&#xd;
			&quot;index&quot;: 7&#xd;
		},&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T15:07:03Z&quot;,&#xd;
		&quot;status&quot;: 1000&#xd;
	}, {&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T15:06:54Z&quot;,&#xd;
		&quot;expenseReportInvoiceOID&quot;: &quot;5facc80e-d142-4474-9f50-35af57c398ad&quot;,&#xd;
		&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;invoiceOID&quot;: &quot;${invoiceOID_trans_1}&quot;,&#xd;
		&quot;invoiceView&quot;: {&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_trans_1}&quot;,&#xd;
			&quot;expenseTypeId&quot;: &quot;917666881950972822&quot;,&#xd;
			&quot;expenseTypeOID&quot;: &quot;bb0a2d86-ad77-4fd9-9623-bfbd05788f8f&quot;,&#xd;
			&quot;expenseTypeName&quot;: &quot;交通&quot;,&#xd;
			&quot;crossCheckStatus&quot;: null,&#xd;
			&quot;expenseTypeKey&quot;: null,&#xd;
			&quot;expenseTypeIconName&quot;: &quot;transportation&quot;,&#xd;
			&quot;phoneNumber&quot;: null,&#xd;
			&quot;email&quot;: null,&#xd;
			&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/b53d8b6a-bfe2-44d4-befa-fa5ea1c061e5-transportation.png&quot;,&#xd;
			&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
			&quot;expenseTypeCategoryDTO&quot;: {&#xd;
				&quot;expenseTypeCategoryOID&quot;: &quot;c39ae68c-3f79-4c58-b655-8fbda51a9ba5&quot;,&#xd;
				&quot;name&quot;: &quot;费用类型&quot;,&#xd;
				&quot;code&quot;: null&#xd;
			},&#xd;
			&quot;costCenterItemOID&quot;: null,&#xd;
			&quot;costCenterItemName&quot;: null,&#xd;
			&quot;amount&quot;: 1,&#xd;
			&quot;originalAmount&quot;: 1,&#xd;
			&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;userOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
			&quot;mobile&quot;: null,&#xd;
			&quot;employeeId&quot;: null,&#xd;
			&quot;data&quot;: [{&#xd;
				&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
				&quot;name&quot;: &quot;目的地&quot;,&#xd;
				&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;西安环普科技产业园\&quot;,\&quot;longitude\&quot;:108.84068,\&quot;latitude\&quot;:34.20974}&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;destination.location&quot;,&#xd;
				&quot;sequence&quot;: 3,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;04aad27b-bf03-4f18-855b-747455a838f4&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;{\&quot;address\&quot;:\&quot;西安环普科技产业园\&quot;,\&quot;longitude\&quot;:108.84068,\&quot;latitude\&quot;:34.20974}&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}, {&#xd;
				&quot;fieldType&quot;: &quot;DATETIME&quot;,&#xd;
				&quot;name&quot;: &quot;出发时间&quot;,&#xd;
				&quot;value&quot;: &quot;${createTime}T00:10:00Z&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;start.time&quot;,&#xd;
				&quot;sequence&quot;: 4,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;d125fd81-c3f7-41ce-962f-2970098d335b&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;${createTime}T00:10:00Z&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}, {&#xd;
				&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
				&quot;name&quot;: &quot;出发地&quot;,&#xd;
				&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;华为西安研究所\&quot;,\&quot;longitude\&quot;:108.83902,\&quot;latitude\&quot;:34.19428}&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;departure.location&quot;,&#xd;
				&quot;sequence&quot;: 2,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;ee9d9590-b1a0-4795-a188-051160e5f735&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;{\&quot;address\&quot;:\&quot;华为西安研究所\&quot;,\&quot;longitude\&quot;:108.83902,\&quot;latitude\&quot;:34.19428}&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}, {&#xd;
				&quot;fieldType&quot;: &quot;DATETIME&quot;,&#xd;
				&quot;name&quot;: &quot;到达时间&quot;,&#xd;
				&quot;value&quot;: &quot;${createTime}T00:30:00Z&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;end.time&quot;,&#xd;
				&quot;sequence&quot;: 5,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;a9d896e5-c59d-4ada-a4eb-08fddbc1fde7&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;${createTime}T00:30:00Z&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}, {&#xd;
				&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
				&quot;name&quot;: &quot;城市&quot;,&#xd;
				&quot;value&quot;: &quot;西安&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;city&quot;,&#xd;
				&quot;sequence&quot;: 1,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;22801bf9-f783-470c-8fbf-c2f50112b116&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;西安&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}],&#xd;
			&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
			&quot;comment&quot;: &quot;交通费报销&quot;,&#xd;
			&quot;warning&quot;: &quot;&quot;,&#xd;
			&quot;overtime&quot;: &quot;N&quot;,&#xd;
			&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
			&quot;createdDate&quot;: &quot;2018-05-08T16:00:00Z&quot;,&#xd;
			&quot;attachments&quot;: [],&#xd;
			&quot;withReceipt&quot;: true,&#xd;
			&quot;readonly&quot;: false,&#xd;
			&quot;businessCode&quot;: null,&#xd;
			&quot;createLocation&quot;: null,&#xd;
			&quot;createTime&quot;: &quot;${createTime}T15:06:49Z&quot;,&#xd;
			&quot;rejectType&quot;: null,&#xd;
			&quot;approverId&quot;: null,&#xd;
			&quot;approvalStepId&quot;: null,&#xd;
			&quot;approvalOperates&quot;: null,&#xd;
			&quot;approver&quot;: null,&#xd;
			&quot;referenceId&quot;: null,&#xd;
			&quot;unitPrice&quot;: null,&#xd;
			&quot;number&quot;: null,&#xd;
			&quot;receiptFailType&quot;: null,&#xd;
			&quot;receiptFailReason&quot;: null,&#xd;
			&quot;valid&quot;: false,&#xd;
			&quot;receiptID&quot;: null,&#xd;
			&quot;cardSignType&quot;: null,&#xd;
			&quot;nonVATinclusiveAmount&quot;: null,&#xd;
			&quot;taxAmount&quot;: null,&#xd;
			&quot;receiptType&quot;: null,&#xd;
			&quot;receiptTypeNo&quot;: null,&#xd;
			&quot;invoiceCode&quot;: null,&#xd;
			&quot;invoiceNumber&quot;: null,&#xd;
			&quot;invoiceDate&quot;: null,&#xd;
			&quot;priceTaxAmount&quot;: null,&#xd;
			&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
			&quot;receiptGoodsID&quot;: null,&#xd;
			&quot;taxRate&quot;: null,&#xd;
			&quot;checkCode&quot;: null,&#xd;
			&quot;invoiceLabelDTOS&quot;: [],&#xd;
			&quot;invoiceLabels&quot;: [{&#xd;
				&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
				&quot;name&quot;: &quot;公司&quot;,&#xd;
				&quot;level&quot;: &quot;INFO&quot;,&#xd;
				&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
				&quot;toast&quot;: null,&#xd;
				&quot;category&quot;: null,&#xd;
				&quot;oldLabel&quot;: false&#xd;
			}],&#xd;
			&quot;companyOID&quot;: null,&#xd;
			&quot;invoiceInstead&quot;: true,&#xd;
			&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
			&quot;paymentType&quot;: 1002,&#xd;
			&quot;source&quot;: null,&#xd;
			&quot;ownerOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
			&quot;checked&quot;: null,&#xd;
			&quot;createInvoice&quot;: true,&#xd;
			&quot;checkWarning&quot;: null,&#xd;
			&quot;digitalInvoice&quot;: null,&#xd;
			&quot;digitalInvoiceId&quot;: null,&#xd;
			&quot;actualCurrencyRate&quot;: 1,&#xd;
			&quot;originalActualCurrencyRate&quot;: 1,&#xd;
			&quot;companyCurrencyRate&quot;: 1,&#xd;
			&quot;actualCurrencyAmount&quot;: 1,&#xd;
			&quot;baseAmount&quot;: 1,&#xd;
			&quot;updateRate&quot;: false,&#xd;
			&quot;flightNo&quot;: null,&#xd;
			&quot;apportionUsed&quot;: false,&#xd;
			&quot;expenseApportion&quot;: null,&#xd;
			&quot;expenseReportOID&quot;: null,&#xd;
			&quot;amountChanged&quot;: null,&#xd;
			&quot;approvalStatus&quot;: null,&#xd;
			&quot;bankTransactionID&quot;: null,&#xd;
			&quot;expenseCreatedType&quot;: null,&#xd;
			&quot;overDue&quot;: null,&#xd;
			&quot;bankTransactionDetail&quot;: null,&#xd;
			&quot;baseCurrency&quot;: null,&#xd;
			&quot;subsidyRepeatedFlag&quot;: false,&#xd;
			&quot;orderAmount&quot;: 1,&#xd;
			&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
			&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
			&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
			&quot;receiptedStatus&quot;: 0,&#xd;
			&quot;vatInvoice&quot;: false,&#xd;
			&quot;stringCol3&quot;: &quot;{\&quot;address\&quot;:\&quot;西安环普科技产业园\&quot;,\&quot;longitude\&quot;:108.84068,\&quot;latitude\&quot;:34.20974}&quot;,&#xd;
			&quot;recognized&quot;: false,&#xd;
			&quot;stringCol1&quot;: &quot;西安&quot;,&#xd;
			&quot;stringCol2&quot;: null,&#xd;
			&quot;status&quot;: 1000,&#xd;
			&quot;index&quot;: 8&#xd;
		},&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T15:06:54Z&quot;,&#xd;
		&quot;status&quot;: 1000&#xd;
	}, {&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T15:07:05Z&quot;,&#xd;
		&quot;expenseReportInvoiceOID&quot;: &quot;9e8b16f2-62c7-4457-aecc-3f80cf09c591&quot;,&#xd;
		&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;invoiceOID&quot;: &quot;${invoiceOID_meetings_1}&quot;,&#xd;
		&quot;invoiceView&quot;: {&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_meetings_1}&quot;,&#xd;
			&quot;expenseTypeId&quot;: &quot;917666881950972829&quot;,&#xd;
			&quot;expenseTypeOID&quot;: &quot;2748e317-5dde-4737-a2f1-48473a7e9d01&quot;,&#xd;
			&quot;expenseTypeName&quot;: &quot;会务&quot;,&#xd;
			&quot;crossCheckStatus&quot;: null,&#xd;
			&quot;expenseTypeKey&quot;: null,&#xd;
			&quot;expenseTypeIconName&quot;: &quot;meetings&quot;,&#xd;
			&quot;phoneNumber&quot;: null,&#xd;
			&quot;email&quot;: null,&#xd;
			&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/789dc17d-2c39-47d3-bea8-f83b6bb987e2-meetings.png&quot;,&#xd;
			&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
			&quot;expenseTypeCategoryDTO&quot;: {&#xd;
				&quot;expenseTypeCategoryOID&quot;: &quot;c39ae68c-3f79-4c58-b655-8fbda51a9ba5&quot;,&#xd;
				&quot;name&quot;: &quot;费用类型&quot;,&#xd;
				&quot;code&quot;: null&#xd;
			},&#xd;
			&quot;costCenterItemOID&quot;: null,&#xd;
			&quot;costCenterItemName&quot;: null,&#xd;
			&quot;amount&quot;: 1,&#xd;
			&quot;originalAmount&quot;: 1,&#xd;
			&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;userOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
			&quot;mobile&quot;: null,&#xd;
			&quot;employeeId&quot;: null,&#xd;
			&quot;data&quot;: [{&#xd;
				&quot;fieldType&quot;: &quot;LONG&quot;,&#xd;
				&quot;name&quot;: &quot;人数&quot;,&#xd;
				&quot;value&quot;: &quot;1&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;head.count&quot;,&#xd;
				&quot;sequence&quot;: 3,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;7f5d1d77-ad45-4559-838f-dba0cfeea2bd&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;1&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}, {&#xd;
				&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
				&quot;name&quot;: &quot;地点&quot;,&#xd;
				&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;麦当劳(环普产业园店)\&quot;,\&quot;longitude\&quot;:108.83977,\&quot;latitude\&quot;:34.21055}&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;location&quot;,&#xd;
				&quot;sequence&quot;: 2,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;64feaae9-a402-49e7-b813-52b5aa51f63a&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;{\&quot;address\&quot;:\&quot;麦当劳(环普产业园店)\&quot;,\&quot;longitude\&quot;:108.83977,\&quot;latitude\&quot;:34.21055}&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}, {&#xd;
				&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
				&quot;name&quot;: &quot;城市&quot;,&#xd;
				&quot;value&quot;: &quot;西安&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;city&quot;,&#xd;
				&quot;sequence&quot;: 1,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;fee7cef8-35ca-407e-b645-d251c1a6fae5&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;西安&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}],&#xd;
			&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
			&quot;comment&quot;: &quot;会务费报销&quot;,&#xd;
			&quot;warning&quot;: &quot;&quot;,&#xd;
			&quot;overtime&quot;: &quot;N&quot;,&#xd;
			&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
			&quot;createdDate&quot;: &quot;2018-05-08T16:00:00Z&quot;,&#xd;
			&quot;attachments&quot;: [],&#xd;
			&quot;withReceipt&quot;: true,&#xd;
			&quot;readonly&quot;: false,&#xd;
			&quot;businessCode&quot;: null,&#xd;
			&quot;createLocation&quot;: null,&#xd;
			&quot;createTime&quot;: &quot;${createTime}T15:07:05Z&quot;,&#xd;
			&quot;rejectType&quot;: null,&#xd;
			&quot;approverId&quot;: null,&#xd;
			&quot;approvalStepId&quot;: null,&#xd;
			&quot;approvalOperates&quot;: null,&#xd;
			&quot;approver&quot;: null,&#xd;
			&quot;referenceId&quot;: null,&#xd;
			&quot;unitPrice&quot;: null,&#xd;
			&quot;number&quot;: null,&#xd;
			&quot;receiptFailType&quot;: null,&#xd;
			&quot;receiptFailReason&quot;: null,&#xd;
			&quot;valid&quot;: false,&#xd;
			&quot;receiptID&quot;: null,&#xd;
			&quot;cardSignType&quot;: null,&#xd;
			&quot;nonVATinclusiveAmount&quot;: null,&#xd;
			&quot;taxAmount&quot;: null,&#xd;
			&quot;receiptType&quot;: null,&#xd;
			&quot;receiptTypeNo&quot;: null,&#xd;
			&quot;invoiceCode&quot;: null,&#xd;
			&quot;invoiceNumber&quot;: null,&#xd;
			&quot;invoiceDate&quot;: null,&#xd;
			&quot;priceTaxAmount&quot;: null,&#xd;
			&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
			&quot;receiptGoodsID&quot;: null,&#xd;
			&quot;taxRate&quot;: null,&#xd;
			&quot;checkCode&quot;: null,&#xd;
			&quot;invoiceLabelDTOS&quot;: [],&#xd;
			&quot;invoiceLabels&quot;: [{&#xd;
				&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
				&quot;name&quot;: &quot;公司&quot;,&#xd;
				&quot;level&quot;: &quot;INFO&quot;,&#xd;
				&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
				&quot;toast&quot;: null,&#xd;
				&quot;category&quot;: null,&#xd;
				&quot;oldLabel&quot;: false&#xd;
			}],&#xd;
			&quot;companyOID&quot;: null,&#xd;
			&quot;invoiceInstead&quot;: true,&#xd;
			&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
			&quot;paymentType&quot;: 1002,&#xd;
			&quot;source&quot;: null,&#xd;
			&quot;ownerOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
			&quot;checked&quot;: null,&#xd;
			&quot;createInvoice&quot;: true,&#xd;
			&quot;checkWarning&quot;: null,&#xd;
			&quot;digitalInvoice&quot;: null,&#xd;
			&quot;digitalInvoiceId&quot;: null,&#xd;
			&quot;actualCurrencyRate&quot;: 1,&#xd;
			&quot;originalActualCurrencyRate&quot;: 1,&#xd;
			&quot;companyCurrencyRate&quot;: 1,&#xd;
			&quot;actualCurrencyAmount&quot;: 1,&#xd;
			&quot;baseAmount&quot;: 1,&#xd;
			&quot;updateRate&quot;: false,&#xd;
			&quot;flightNo&quot;: null,&#xd;
			&quot;apportionUsed&quot;: false,&#xd;
			&quot;expenseApportion&quot;: null,&#xd;
			&quot;expenseReportOID&quot;: null,&#xd;
			&quot;amountChanged&quot;: null,&#xd;
			&quot;approvalStatus&quot;: null,&#xd;
			&quot;bankTransactionID&quot;: null,&#xd;
			&quot;expenseCreatedType&quot;: null,&#xd;
			&quot;overDue&quot;: null,&#xd;
			&quot;bankTransactionDetail&quot;: null,&#xd;
			&quot;baseCurrency&quot;: null,&#xd;
			&quot;subsidyRepeatedFlag&quot;: false,&#xd;
			&quot;orderAmount&quot;: 1,&#xd;
			&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
			&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
			&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
			&quot;receiptedStatus&quot;: 0,&#xd;
			&quot;vatInvoice&quot;: false,&#xd;
			&quot;stringCol3&quot;: null,&#xd;
			&quot;recognized&quot;: false,&#xd;
			&quot;stringCol1&quot;: &quot;西安&quot;,&#xd;
			&quot;stringCol2&quot;: null,&#xd;
			&quot;status&quot;: 1000,&#xd;
			&quot;index&quot;: 9&#xd;
		},&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T15:07:05Z&quot;,&#xd;
		&quot;status&quot;: 1000&#xd;
	}, {&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T15:07:07Z&quot;,&#xd;
		&quot;expenseReportInvoiceOID&quot;: &quot;342800ff-9e66-4a84-8fbd-ad40e8971692&quot;,&#xd;
		&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;invoiceOID&quot;: &quot;${invoiceOID_hotel_1}&quot;,&#xd;
		&quot;invoiceView&quot;: {&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_hotel_1}&quot;,&#xd;
			&quot;expenseTypeId&quot;: &quot;917666881950972831&quot;,&#xd;
			&quot;expenseTypeOID&quot;: &quot;89525729-917a-4330-8df0-135113051392&quot;,&#xd;
			&quot;expenseTypeName&quot;: &quot;酒店&quot;,&#xd;
			&quot;crossCheckStatus&quot;: null,&#xd;
			&quot;expenseTypeKey&quot;: null,&#xd;
			&quot;expenseTypeIconName&quot;: &quot;hotel&quot;,&#xd;
			&quot;phoneNumber&quot;: null,&#xd;
			&quot;email&quot;: null,&#xd;
			&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/9f7270f7-af07-4b34-95c5-87d8dc7f126b-hotel.png&quot;,&#xd;
			&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
			&quot;expenseTypeCategoryDTO&quot;: {&#xd;
				&quot;expenseTypeCategoryOID&quot;: &quot;c39ae68c-3f79-4c58-b655-8fbda51a9ba5&quot;,&#xd;
				&quot;name&quot;: &quot;费用类型&quot;,&#xd;
				&quot;code&quot;: null&#xd;
			},&#xd;
			&quot;costCenterItemOID&quot;: null,&#xd;
			&quot;costCenterItemName&quot;: null,&#xd;
			&quot;amount&quot;: 1,&#xd;
			&quot;originalAmount&quot;: 1,&#xd;
			&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;userOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
			&quot;mobile&quot;: null,&#xd;
			&quot;employeeId&quot;: null,&#xd;
			&quot;data&quot;: [{&#xd;
				&quot;fieldType&quot;: &quot;LONG&quot;,&#xd;
				&quot;name&quot;: &quot;入住天数&quot;,&#xd;
				&quot;value&quot;: &quot;1&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;days&quot;,&#xd;
				&quot;sequence&quot;: 3,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;832bfc9e-50b4-4f61-afb1-2d0cdb49d444&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;1&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}, {&#xd;
				&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
				&quot;name&quot;: &quot;酒店名称&quot;,&#xd;
				&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;软件新城软件公寓\&quot;,\&quot;longitude\&quot;:108.83882,\&quot;latitude\&quot;:34.21698}&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;hotel.name&quot;,&#xd;
				&quot;sequence&quot;: 2,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;40f4d31e-02de-4378-b007-47ce6bcdd350&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;{\&quot;address\&quot;:\&quot;软件新城软件公寓\&quot;,\&quot;longitude\&quot;:108.83882,\&quot;latitude\&quot;:34.21698}&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}, {&#xd;
				&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
				&quot;name&quot;: &quot;城市&quot;,&#xd;
				&quot;value&quot;: &quot;西安&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;city&quot;,&#xd;
				&quot;sequence&quot;: 1,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;ea60e6ec-2916-4288-9ad1-5384427f82aa&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;西安&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}],&#xd;
			&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
			&quot;comment&quot;: &quot;酒店报销&quot;,&#xd;
			&quot;warning&quot;: &quot;&quot;,&#xd;
			&quot;overtime&quot;: &quot;N&quot;,&#xd;
			&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
			&quot;createdDate&quot;: &quot;2018-05-08T16:00:00Z&quot;,&#xd;
			&quot;attachments&quot;: [],&#xd;
			&quot;withReceipt&quot;: true,&#xd;
			&quot;readonly&quot;: false,&#xd;
			&quot;businessCode&quot;: null,&#xd;
			&quot;createLocation&quot;: null,&#xd;
			&quot;createTime&quot;: &quot;${createTime}T15:07:07Z&quot;,&#xd;
			&quot;rejectType&quot;: null,&#xd;
			&quot;approverId&quot;: null,&#xd;
			&quot;approvalStepId&quot;: null,&#xd;
			&quot;approvalOperates&quot;: null,&#xd;
			&quot;approver&quot;: null,&#xd;
			&quot;referenceId&quot;: null,&#xd;
			&quot;unitPrice&quot;: null,&#xd;
			&quot;number&quot;: null,&#xd;
			&quot;receiptFailType&quot;: null,&#xd;
			&quot;receiptFailReason&quot;: null,&#xd;
			&quot;valid&quot;: false,&#xd;
			&quot;receiptID&quot;: null,&#xd;
			&quot;cardSignType&quot;: null,&#xd;
			&quot;nonVATinclusiveAmount&quot;: null,&#xd;
			&quot;taxAmount&quot;: null,&#xd;
			&quot;receiptType&quot;: null,&#xd;
			&quot;receiptTypeNo&quot;: null,&#xd;
			&quot;invoiceCode&quot;: null,&#xd;
			&quot;invoiceNumber&quot;: null,&#xd;
			&quot;invoiceDate&quot;: null,&#xd;
			&quot;priceTaxAmount&quot;: null,&#xd;
			&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
			&quot;receiptGoodsID&quot;: null,&#xd;
			&quot;taxRate&quot;: null,&#xd;
			&quot;checkCode&quot;: null,&#xd;
			&quot;invoiceLabelDTOS&quot;: [],&#xd;
			&quot;invoiceLabels&quot;: [{&#xd;
				&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
				&quot;name&quot;: &quot;公司&quot;,&#xd;
				&quot;level&quot;: &quot;INFO&quot;,&#xd;
				&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
				&quot;toast&quot;: null,&#xd;
				&quot;category&quot;: null,&#xd;
				&quot;oldLabel&quot;: false&#xd;
			}],&#xd;
			&quot;companyOID&quot;: null,&#xd;
			&quot;invoiceInstead&quot;: true,&#xd;
			&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
			&quot;paymentType&quot;: 1002,&#xd;
			&quot;source&quot;: null,&#xd;
			&quot;ownerOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
			&quot;checked&quot;: null,&#xd;
			&quot;createInvoice&quot;: true,&#xd;
			&quot;checkWarning&quot;: null,&#xd;
			&quot;digitalInvoice&quot;: null,&#xd;
			&quot;digitalInvoiceId&quot;: null,&#xd;
			&quot;actualCurrencyRate&quot;: 1,&#xd;
			&quot;originalActualCurrencyRate&quot;: 1,&#xd;
			&quot;companyCurrencyRate&quot;: 1,&#xd;
			&quot;actualCurrencyAmount&quot;: 1,&#xd;
			&quot;baseAmount&quot;: 1,&#xd;
			&quot;updateRate&quot;: false,&#xd;
			&quot;flightNo&quot;: null,&#xd;
			&quot;apportionUsed&quot;: false,&#xd;
			&quot;expenseApportion&quot;: null,&#xd;
			&quot;expenseReportOID&quot;: null,&#xd;
			&quot;amountChanged&quot;: null,&#xd;
			&quot;approvalStatus&quot;: null,&#xd;
			&quot;bankTransactionID&quot;: null,&#xd;
			&quot;expenseCreatedType&quot;: null,&#xd;
			&quot;overDue&quot;: null,&#xd;
			&quot;bankTransactionDetail&quot;: null,&#xd;
			&quot;baseCurrency&quot;: null,&#xd;
			&quot;subsidyRepeatedFlag&quot;: false,&#xd;
			&quot;orderAmount&quot;: 1,&#xd;
			&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
			&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
			&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
			&quot;receiptedStatus&quot;: 0,&#xd;
			&quot;vatInvoice&quot;: false,&#xd;
			&quot;stringCol3&quot;: null,&#xd;
			&quot;recognized&quot;: false,&#xd;
			&quot;stringCol1&quot;: &quot;西安&quot;,&#xd;
			&quot;stringCol2&quot;: null,&#xd;
			&quot;status&quot;: 1000,&#xd;
			&quot;index&quot;: 10&#xd;
		},&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T15:07:07Z&quot;,&#xd;
		&quot;status&quot;: 1000&#xd;
	}, {&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T15:07:16Z&quot;,&#xd;
		&quot;expenseReportInvoiceOID&quot;: &quot;ed64a11f-a11c-46d0-a966-f41c866dc50d&quot;,&#xd;
		&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;invoiceOID&quot;: &quot;${invoiceOID_examination_1}&quot;,&#xd;
		&quot;invoiceView&quot;: {&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_examination_1}&quot;,&#xd;
			&quot;expenseTypeId&quot;: &quot;917666881950972835&quot;,&#xd;
			&quot;expenseTypeOID&quot;: &quot;41733b8b-d4fb-40ac-b761-e9ecc58e37b4&quot;,&#xd;
			&quot;expenseTypeName&quot;: &quot;体检&quot;,&#xd;
			&quot;crossCheckStatus&quot;: null,&#xd;
			&quot;expenseTypeKey&quot;: null,&#xd;
			&quot;expenseTypeIconName&quot;: &quot;examination&quot;,&#xd;
			&quot;phoneNumber&quot;: null,&#xd;
			&quot;email&quot;: null,&#xd;
			&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/95dfe246-ac4a-4ed6-afd5-6d0c4a122087-examination.png&quot;,&#xd;
			&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
			&quot;expenseTypeCategoryDTO&quot;: {&#xd;
				&quot;expenseTypeCategoryOID&quot;: &quot;c39ae68c-3f79-4c58-b655-8fbda51a9ba5&quot;,&#xd;
				&quot;name&quot;: &quot;费用类型&quot;,&#xd;
				&quot;code&quot;: null&#xd;
			},&#xd;
			&quot;costCenterItemOID&quot;: null,&#xd;
			&quot;costCenterItemName&quot;: null,&#xd;
			&quot;amount&quot;: 1,&#xd;
			&quot;originalAmount&quot;: 1,&#xd;
			&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;userOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
			&quot;mobile&quot;: null,&#xd;
			&quot;employeeId&quot;: null,&#xd;
			&quot;data&quot;: [{&#xd;
				&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
				&quot;name&quot;: &quot;城市&quot;,&#xd;
				&quot;value&quot;: &quot;西安&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;city&quot;,&#xd;
				&quot;sequence&quot;: 1,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;25809691-33d0-4053-8805-b5c291bc0370&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;西安&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}],&#xd;
			&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
			&quot;comment&quot;: &quot;体检费报销&quot;,&#xd;
			&quot;warning&quot;: &quot;&quot;,&#xd;
			&quot;overtime&quot;: &quot;N&quot;,&#xd;
			&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
			&quot;createdDate&quot;: &quot;2018-05-08T16:00:00Z&quot;,&#xd;
			&quot;attachments&quot;: [],&#xd;
			&quot;withReceipt&quot;: true,&#xd;
			&quot;readonly&quot;: false,&#xd;
			&quot;businessCode&quot;: null,&#xd;
			&quot;createLocation&quot;: null,&#xd;
			&quot;createTime&quot;: &quot;${createTime}T15:07:16Z&quot;,&#xd;
			&quot;rejectType&quot;: null,&#xd;
			&quot;approverId&quot;: null,&#xd;
			&quot;approvalStepId&quot;: null,&#xd;
			&quot;approvalOperates&quot;: null,&#xd;
			&quot;approver&quot;: null,&#xd;
			&quot;referenceId&quot;: null,&#xd;
			&quot;unitPrice&quot;: null,&#xd;
			&quot;number&quot;: null,&#xd;
			&quot;receiptFailType&quot;: null,&#xd;
			&quot;receiptFailReason&quot;: null,&#xd;
			&quot;valid&quot;: false,&#xd;
			&quot;receiptID&quot;: null,&#xd;
			&quot;cardSignType&quot;: null,&#xd;
			&quot;nonVATinclusiveAmount&quot;: null,&#xd;
			&quot;taxAmount&quot;: null,&#xd;
			&quot;receiptType&quot;: null,&#xd;
			&quot;receiptTypeNo&quot;: null,&#xd;
			&quot;invoiceCode&quot;: null,&#xd;
			&quot;invoiceNumber&quot;: null,&#xd;
			&quot;invoiceDate&quot;: null,&#xd;
			&quot;priceTaxAmount&quot;: null,&#xd;
			&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
			&quot;receiptGoodsID&quot;: null,&#xd;
			&quot;taxRate&quot;: null,&#xd;
			&quot;checkCode&quot;: null,&#xd;
			&quot;invoiceLabelDTOS&quot;: [],&#xd;
			&quot;invoiceLabels&quot;: [{&#xd;
				&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
				&quot;name&quot;: &quot;公司&quot;,&#xd;
				&quot;level&quot;: &quot;INFO&quot;,&#xd;
				&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
				&quot;toast&quot;: null,&#xd;
				&quot;category&quot;: null,&#xd;
				&quot;oldLabel&quot;: false&#xd;
			}],&#xd;
			&quot;companyOID&quot;: null,&#xd;
			&quot;invoiceInstead&quot;: true,&#xd;
			&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
			&quot;paymentType&quot;: 1002,&#xd;
			&quot;source&quot;: null,&#xd;
			&quot;ownerOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
			&quot;checked&quot;: null,&#xd;
			&quot;createInvoice&quot;: true,&#xd;
			&quot;checkWarning&quot;: null,&#xd;
			&quot;digitalInvoice&quot;: null,&#xd;
			&quot;digitalInvoiceId&quot;: null,&#xd;
			&quot;actualCurrencyRate&quot;: 1,&#xd;
			&quot;originalActualCurrencyRate&quot;: 1,&#xd;
			&quot;companyCurrencyRate&quot;: 1,&#xd;
			&quot;actualCurrencyAmount&quot;: 1,&#xd;
			&quot;baseAmount&quot;: 1,&#xd;
			&quot;updateRate&quot;: false,&#xd;
			&quot;flightNo&quot;: null,&#xd;
			&quot;apportionUsed&quot;: false,&#xd;
			&quot;expenseApportion&quot;: null,&#xd;
			&quot;expenseReportOID&quot;: null,&#xd;
			&quot;amountChanged&quot;: null,&#xd;
			&quot;approvalStatus&quot;: null,&#xd;
			&quot;bankTransactionID&quot;: null,&#xd;
			&quot;expenseCreatedType&quot;: null,&#xd;
			&quot;overDue&quot;: null,&#xd;
			&quot;bankTransactionDetail&quot;: null,&#xd;
			&quot;baseCurrency&quot;: null,&#xd;
			&quot;subsidyRepeatedFlag&quot;: false,&#xd;
			&quot;orderAmount&quot;: 1,&#xd;
			&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
			&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
			&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
			&quot;receiptedStatus&quot;: 0,&#xd;
			&quot;vatInvoice&quot;: false,&#xd;
			&quot;stringCol3&quot;: null,&#xd;
			&quot;recognized&quot;: false,&#xd;
			&quot;stringCol1&quot;: &quot;西安&quot;,&#xd;
			&quot;stringCol2&quot;: null,&#xd;
			&quot;status&quot;: 1000,&#xd;
			&quot;index&quot;: 11&#xd;
		},&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T15:07:16Z&quot;,&#xd;
		&quot;status&quot;: 1000&#xd;
	}, {&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T15:06:59Z&quot;,&#xd;
		&quot;expenseReportInvoiceOID&quot;: &quot;18340f09-bd0a-412c-b9e6-c16c9d7e99ea&quot;,&#xd;
		&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;invoiceOID&quot;: &quot;${invoiceOID_air_1}&quot;,&#xd;
		&quot;invoiceView&quot;: {&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_air_1}&quot;,&#xd;
			&quot;expenseTypeId&quot;: &quot;917666881950972823&quot;,&#xd;
			&quot;expenseTypeOID&quot;: &quot;ac4a58c1-0f62-4966-8bf2-f287c9590a73&quot;,&#xd;
			&quot;expenseTypeName&quot;: &quot;机票&quot;,&#xd;
			&quot;crossCheckStatus&quot;: null,&#xd;
			&quot;expenseTypeKey&quot;: null,&#xd;
			&quot;expenseTypeIconName&quot;: &quot;airTickets&quot;,&#xd;
			&quot;phoneNumber&quot;: null,&#xd;
			&quot;email&quot;: null,&#xd;
			&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/39433f4e-02fb-4abe-99b2-e1cf55ab4518-airTickets.png&quot;,&#xd;
			&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
			&quot;expenseTypeCategoryDTO&quot;: {&#xd;
				&quot;expenseTypeCategoryOID&quot;: &quot;c39ae68c-3f79-4c58-b655-8fbda51a9ba5&quot;,&#xd;
				&quot;name&quot;: &quot;费用类型&quot;,&#xd;
				&quot;code&quot;: null&#xd;
			},&#xd;
			&quot;costCenterItemOID&quot;: null,&#xd;
			&quot;costCenterItemName&quot;: null,&#xd;
			&quot;amount&quot;: 1,&#xd;
			&quot;originalAmount&quot;: 1,&#xd;
			&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;userOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
			&quot;mobile&quot;: null,&#xd;
			&quot;employeeId&quot;: null,&#xd;
			&quot;data&quot;: [{&#xd;
				&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
				&quot;name&quot;: &quot;目的地&quot;,&#xd;
				&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;上海虹桥国际机场\&quot;,\&quot;longitude\&quot;:121.3376,\&quot;latitude\&quot;:31.19668}&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;destination.location&quot;,&#xd;
				&quot;sequence&quot;: 1,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;8c88831d-e3e3-48f9-ac7e-e48194ebf8fc&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;{\&quot;address\&quot;:\&quot;上海虹桥国际机场\&quot;,\&quot;longitude\&quot;:121.3376,\&quot;latitude\&quot;:31.19668}&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}, {&#xd;
				&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
				&quot;name&quot;: &quot;出发地&quot;,&#xd;
				&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;西安咸阳国际机场\&quot;,\&quot;longitude\&quot;:108.761268287,\&quot;latitude\&quot;:34.435148685}&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;departure.location&quot;,&#xd;
				&quot;sequence&quot;: 0,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;60e52468-70a9-4e4f-a831-3271c9ed6a71&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;{\&quot;address\&quot;:\&quot;西安咸阳国际机场\&quot;,\&quot;longitude\&quot;:108.761268287,\&quot;latitude\&quot;:34.435148685}&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}],&#xd;
			&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
			&quot;comment&quot;: &quot;飞机票报销&quot;,&#xd;
			&quot;warning&quot;: &quot;&quot;,&#xd;
			&quot;overtime&quot;: &quot;N&quot;,&#xd;
			&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
			&quot;createdDate&quot;: &quot;2018-05-08T16:00:00Z&quot;,&#xd;
			&quot;attachments&quot;: [],&#xd;
			&quot;withReceipt&quot;: true,&#xd;
			&quot;readonly&quot;: false,&#xd;
			&quot;businessCode&quot;: null,&#xd;
			&quot;createLocation&quot;: null,&#xd;
			&quot;createTime&quot;: &quot;${createTime}T15:06:59Z&quot;,&#xd;
			&quot;rejectType&quot;: null,&#xd;
			&quot;approverId&quot;: null,&#xd;
			&quot;approvalStepId&quot;: null,&#xd;
			&quot;approvalOperates&quot;: null,&#xd;
			&quot;approver&quot;: null,&#xd;
			&quot;referenceId&quot;: null,&#xd;
			&quot;unitPrice&quot;: null,&#xd;
			&quot;number&quot;: null,&#xd;
			&quot;receiptFailType&quot;: null,&#xd;
			&quot;receiptFailReason&quot;: null,&#xd;
			&quot;valid&quot;: false,&#xd;
			&quot;receiptID&quot;: null,&#xd;
			&quot;cardSignType&quot;: null,&#xd;
			&quot;nonVATinclusiveAmount&quot;: null,&#xd;
			&quot;taxAmount&quot;: null,&#xd;
			&quot;receiptType&quot;: null,&#xd;
			&quot;receiptTypeNo&quot;: null,&#xd;
			&quot;invoiceCode&quot;: null,&#xd;
			&quot;invoiceNumber&quot;: null,&#xd;
			&quot;invoiceDate&quot;: null,&#xd;
			&quot;priceTaxAmount&quot;: null,&#xd;
			&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
			&quot;receiptGoodsID&quot;: null,&#xd;
			&quot;taxRate&quot;: null,&#xd;
			&quot;checkCode&quot;: null,&#xd;
			&quot;invoiceLabelDTOS&quot;: [],&#xd;
			&quot;invoiceLabels&quot;: [{&#xd;
				&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
				&quot;name&quot;: &quot;公司&quot;,&#xd;
				&quot;level&quot;: &quot;INFO&quot;,&#xd;
				&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
				&quot;toast&quot;: null,&#xd;
				&quot;category&quot;: null,&#xd;
				&quot;oldLabel&quot;: false&#xd;
			}],&#xd;
			&quot;companyOID&quot;: null,&#xd;
			&quot;invoiceInstead&quot;: true,&#xd;
			&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
			&quot;paymentType&quot;: 1002,&#xd;
			&quot;source&quot;: null,&#xd;
			&quot;ownerOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
			&quot;checked&quot;: null,&#xd;
			&quot;createInvoice&quot;: true,&#xd;
			&quot;checkWarning&quot;: null,&#xd;
			&quot;digitalInvoice&quot;: null,&#xd;
			&quot;digitalInvoiceId&quot;: null,&#xd;
			&quot;actualCurrencyRate&quot;: 1,&#xd;
			&quot;originalActualCurrencyRate&quot;: 1,&#xd;
			&quot;companyCurrencyRate&quot;: 1,&#xd;
			&quot;actualCurrencyAmount&quot;: 1,&#xd;
			&quot;baseAmount&quot;: 1,&#xd;
			&quot;updateRate&quot;: false,&#xd;
			&quot;flightNo&quot;: null,&#xd;
			&quot;apportionUsed&quot;: true,&#xd;
			&quot;expenseApportion&quot;: null,&#xd;
			&quot;expenseReportOID&quot;: null,&#xd;
			&quot;amountChanged&quot;: null,&#xd;
			&quot;approvalStatus&quot;: null,&#xd;
			&quot;bankTransactionID&quot;: null,&#xd;
			&quot;expenseCreatedType&quot;: null,&#xd;
			&quot;overDue&quot;: null,&#xd;
			&quot;bankTransactionDetail&quot;: null,&#xd;
			&quot;baseCurrency&quot;: null,&#xd;
			&quot;subsidyRepeatedFlag&quot;: false,&#xd;
			&quot;orderAmount&quot;: 1,&#xd;
			&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
			&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
			&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
			&quot;receiptedStatus&quot;: 0,&#xd;
			&quot;vatInvoice&quot;: false,&#xd;
			&quot;stringCol3&quot;: null,&#xd;
			&quot;recognized&quot;: false,&#xd;
			&quot;stringCol1&quot;: &quot;{\&quot;address\&quot;:\&quot;西安咸阳国际机场\&quot;,\&quot;longitude\&quot;:108.761268287,\&quot;latitude\&quot;:34.435148685}&quot;,&#xd;
			&quot;stringCol2&quot;: null,&#xd;
			&quot;status&quot;: 1000,&#xd;
			&quot;index&quot;: 12&#xd;
		},&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T15:06:59Z&quot;,&#xd;
		&quot;status&quot;: 1000&#xd;
	}, {&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T15:07:09Z&quot;,&#xd;
		&quot;expenseReportInvoiceOID&quot;: &quot;fdcfc63f-52be-43fb-9b2e-0aa3b9dd8498&quot;,&#xd;
		&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;invoiceOID&quot;: &quot;${invoiceOID_gasoline_1}&quot;,&#xd;
		&quot;invoiceView&quot;: {&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_gasoline_1}&quot;,&#xd;
			&quot;expenseTypeId&quot;: &quot;917666881950972833&quot;,&#xd;
			&quot;expenseTypeOID&quot;: &quot;87e75152-0d45-49a7-8138-39240b17c750&quot;,&#xd;
			&quot;expenseTypeName&quot;: &quot;汽油&quot;,&#xd;
			&quot;crossCheckStatus&quot;: null,&#xd;
			&quot;expenseTypeKey&quot;: null,&#xd;
			&quot;expenseTypeIconName&quot;: &quot;gasoline&quot;,&#xd;
			&quot;phoneNumber&quot;: null,&#xd;
			&quot;email&quot;: null,&#xd;
			&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/013c6c3b-f3a2-4f42-b347-9066c177f783-gasoline.png&quot;,&#xd;
			&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
			&quot;expenseTypeCategoryDTO&quot;: {&#xd;
				&quot;expenseTypeCategoryOID&quot;: &quot;c39ae68c-3f79-4c58-b655-8fbda51a9ba5&quot;,&#xd;
				&quot;name&quot;: &quot;费用类型&quot;,&#xd;
				&quot;code&quot;: null&#xd;
			},&#xd;
			&quot;costCenterItemOID&quot;: null,&#xd;
			&quot;costCenterItemName&quot;: null,&#xd;
			&quot;amount&quot;: 1,&#xd;
			&quot;originalAmount&quot;: 1,&#xd;
			&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;userOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
			&quot;mobile&quot;: null,&#xd;
			&quot;employeeId&quot;: null,&#xd;
			&quot;data&quot;: [],&#xd;
			&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
			&quot;comment&quot;: &quot;油费报销&quot;,&#xd;
			&quot;warning&quot;: &quot;&quot;,&#xd;
			&quot;overtime&quot;: &quot;N&quot;,&#xd;
			&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
			&quot;createdDate&quot;: &quot;2018-05-08T16:00:00Z&quot;,&#xd;
			&quot;attachments&quot;: [],&#xd;
			&quot;withReceipt&quot;: true,&#xd;
			&quot;readonly&quot;: false,&#xd;
			&quot;businessCode&quot;: null,&#xd;
			&quot;createLocation&quot;: null,&#xd;
			&quot;createTime&quot;: &quot;${createTime}T15:07:09Z&quot;,&#xd;
			&quot;rejectType&quot;: null,&#xd;
			&quot;approverId&quot;: null,&#xd;
			&quot;approvalStepId&quot;: null,&#xd;
			&quot;approvalOperates&quot;: null,&#xd;
			&quot;approver&quot;: null,&#xd;
			&quot;referenceId&quot;: null,&#xd;
			&quot;unitPrice&quot;: null,&#xd;
			&quot;number&quot;: null,&#xd;
			&quot;receiptFailType&quot;: null,&#xd;
			&quot;receiptFailReason&quot;: null,&#xd;
			&quot;valid&quot;: false,&#xd;
			&quot;receiptID&quot;: null,&#xd;
			&quot;cardSignType&quot;: null,&#xd;
			&quot;nonVATinclusiveAmount&quot;: null,&#xd;
			&quot;taxAmount&quot;: null,&#xd;
			&quot;receiptType&quot;: null,&#xd;
			&quot;receiptTypeNo&quot;: null,&#xd;
			&quot;invoiceCode&quot;: null,&#xd;
			&quot;invoiceNumber&quot;: null,&#xd;
			&quot;invoiceDate&quot;: null,&#xd;
			&quot;priceTaxAmount&quot;: null,&#xd;
			&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
			&quot;receiptGoodsID&quot;: null,&#xd;
			&quot;taxRate&quot;: null,&#xd;
			&quot;checkCode&quot;: null,&#xd;
			&quot;invoiceLabelDTOS&quot;: [],&#xd;
			&quot;invoiceLabels&quot;: [{&#xd;
				&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
				&quot;name&quot;: &quot;公司&quot;,&#xd;
				&quot;level&quot;: &quot;INFO&quot;,&#xd;
				&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
				&quot;toast&quot;: null,&#xd;
				&quot;category&quot;: null,&#xd;
				&quot;oldLabel&quot;: false&#xd;
			}],&#xd;
			&quot;companyOID&quot;: null,&#xd;
			&quot;invoiceInstead&quot;: true,&#xd;
			&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
			&quot;paymentType&quot;: 1002,&#xd;
			&quot;source&quot;: null,&#xd;
			&quot;ownerOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
			&quot;checked&quot;: null,&#xd;
			&quot;createInvoice&quot;: true,&#xd;
			&quot;checkWarning&quot;: null,&#xd;
			&quot;digitalInvoice&quot;: null,&#xd;
			&quot;digitalInvoiceId&quot;: null,&#xd;
			&quot;actualCurrencyRate&quot;: 1,&#xd;
			&quot;originalActualCurrencyRate&quot;: 1,&#xd;
			&quot;companyCurrencyRate&quot;: 1,&#xd;
			&quot;actualCurrencyAmount&quot;: 1,&#xd;
			&quot;baseAmount&quot;: 1,&#xd;
			&quot;updateRate&quot;: false,&#xd;
			&quot;flightNo&quot;: null,&#xd;
			&quot;apportionUsed&quot;: false,&#xd;
			&quot;expenseApportion&quot;: null,&#xd;
			&quot;expenseReportOID&quot;: null,&#xd;
			&quot;amountChanged&quot;: null,&#xd;
			&quot;approvalStatus&quot;: null,&#xd;
			&quot;bankTransactionID&quot;: null,&#xd;
			&quot;expenseCreatedType&quot;: null,&#xd;
			&quot;overDue&quot;: null,&#xd;
			&quot;bankTransactionDetail&quot;: null,&#xd;
			&quot;baseCurrency&quot;: null,&#xd;
			&quot;subsidyRepeatedFlag&quot;: false,&#xd;
			&quot;orderAmount&quot;: 1,&#xd;
			&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
			&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
			&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
			&quot;receiptedStatus&quot;: 0,&#xd;
			&quot;vatInvoice&quot;: false,&#xd;
			&quot;stringCol3&quot;: null,&#xd;
			&quot;recognized&quot;: false,&#xd;
			&quot;stringCol1&quot;: null,&#xd;
			&quot;stringCol2&quot;: null,&#xd;
			&quot;status&quot;: 1000,&#xd;
			&quot;index&quot;: 13&#xd;
		},&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T15:07:09Z&quot;,&#xd;
		&quot;status&quot;: 1000&#xd;
	}, {&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T15:07:06Z&quot;,&#xd;
		&quot;expenseReportInvoiceOID&quot;: &quot;7f3ddbbc-e2ea-4d4b-8d8b-a04a311a04ad&quot;,&#xd;
		&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;invoiceOID&quot;: &quot;${invoiceOID_communication_1}&quot;,&#xd;
		&quot;invoiceView&quot;: {&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_communication_1}&quot;,&#xd;
			&quot;expenseTypeId&quot;: &quot;917666881950972830&quot;,&#xd;
			&quot;expenseTypeOID&quot;: &quot;4360c466-8270-421a-93c8-43d308a1eba0&quot;,&#xd;
			&quot;expenseTypeName&quot;: &quot;通讯&quot;,&#xd;
			&quot;crossCheckStatus&quot;: null,&#xd;
			&quot;expenseTypeKey&quot;: null,&#xd;
			&quot;expenseTypeIconName&quot;: &quot;communication&quot;,&#xd;
			&quot;phoneNumber&quot;: null,&#xd;
			&quot;email&quot;: null,&#xd;
			&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/20cb45d3-6c43-4603-a59a-bca9249b0132-communication.png&quot;,&#xd;
			&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
			&quot;expenseTypeCategoryDTO&quot;: {&#xd;
				&quot;expenseTypeCategoryOID&quot;: &quot;c39ae68c-3f79-4c58-b655-8fbda51a9ba5&quot;,&#xd;
				&quot;name&quot;: &quot;费用类型&quot;,&#xd;
				&quot;code&quot;: null&#xd;
			},&#xd;
			&quot;costCenterItemOID&quot;: null,&#xd;
			&quot;costCenterItemName&quot;: null,&#xd;
			&quot;amount&quot;: 1,&#xd;
			&quot;originalAmount&quot;: 1,&#xd;
			&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;userOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
			&quot;mobile&quot;: null,&#xd;
			&quot;employeeId&quot;: null,&#xd;
			&quot;data&quot;: [{&#xd;
				&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
				&quot;name&quot;: &quot;电话号码&quot;,&#xd;
				&quot;value&quot;: &quot;13700000021&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;phone.number&quot;,&#xd;
				&quot;sequence&quot;: 2,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;c56c7e1e-2fc9-4f31-8d6e-f1b67c4f1b2d&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;13700000021&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}, {&#xd;
				&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
				&quot;name&quot;: &quot;城市&quot;,&#xd;
				&quot;value&quot;: &quot;西安&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;city&quot;,&#xd;
				&quot;sequence&quot;: 1,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;576eae33-a5bf-408a-b967-e247c28c53df&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;西安&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}],&#xd;
			&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
			&quot;comment&quot;: &quot;通讯费报销&quot;,&#xd;
			&quot;warning&quot;: &quot;&quot;,&#xd;
			&quot;overtime&quot;: &quot;N&quot;,&#xd;
			&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
			&quot;createdDate&quot;: &quot;2018-05-08T16:00:00Z&quot;,&#xd;
			&quot;attachments&quot;: [],&#xd;
			&quot;withReceipt&quot;: true,&#xd;
			&quot;readonly&quot;: false,&#xd;
			&quot;businessCode&quot;: null,&#xd;
			&quot;createLocation&quot;: null,&#xd;
			&quot;createTime&quot;: &quot;${createTime}T15:07:06Z&quot;,&#xd;
			&quot;rejectType&quot;: null,&#xd;
			&quot;approverId&quot;: null,&#xd;
			&quot;approvalStepId&quot;: null,&#xd;
			&quot;approvalOperates&quot;: null,&#xd;
			&quot;approver&quot;: null,&#xd;
			&quot;referenceId&quot;: null,&#xd;
			&quot;unitPrice&quot;: null,&#xd;
			&quot;number&quot;: null,&#xd;
			&quot;receiptFailType&quot;: null,&#xd;
			&quot;receiptFailReason&quot;: null,&#xd;
			&quot;valid&quot;: false,&#xd;
			&quot;receiptID&quot;: null,&#xd;
			&quot;cardSignType&quot;: null,&#xd;
			&quot;nonVATinclusiveAmount&quot;: null,&#xd;
			&quot;taxAmount&quot;: null,&#xd;
			&quot;receiptType&quot;: null,&#xd;
			&quot;receiptTypeNo&quot;: null,&#xd;
			&quot;invoiceCode&quot;: null,&#xd;
			&quot;invoiceNumber&quot;: null,&#xd;
			&quot;invoiceDate&quot;: null,&#xd;
			&quot;priceTaxAmount&quot;: null,&#xd;
			&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
			&quot;receiptGoodsID&quot;: null,&#xd;
			&quot;taxRate&quot;: null,&#xd;
			&quot;checkCode&quot;: null,&#xd;
			&quot;invoiceLabelDTOS&quot;: [],&#xd;
			&quot;invoiceLabels&quot;: [{&#xd;
				&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
				&quot;name&quot;: &quot;公司&quot;,&#xd;
				&quot;level&quot;: &quot;INFO&quot;,&#xd;
				&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
				&quot;toast&quot;: null,&#xd;
				&quot;category&quot;: null,&#xd;
				&quot;oldLabel&quot;: false&#xd;
			}],&#xd;
			&quot;companyOID&quot;: null,&#xd;
			&quot;invoiceInstead&quot;: true,&#xd;
			&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
			&quot;paymentType&quot;: 1002,&#xd;
			&quot;source&quot;: null,&#xd;
			&quot;ownerOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
			&quot;checked&quot;: null,&#xd;
			&quot;createInvoice&quot;: true,&#xd;
			&quot;checkWarning&quot;: null,&#xd;
			&quot;digitalInvoice&quot;: null,&#xd;
			&quot;digitalInvoiceId&quot;: null,&#xd;
			&quot;actualCurrencyRate&quot;: 1,&#xd;
			&quot;originalActualCurrencyRate&quot;: 1,&#xd;
			&quot;companyCurrencyRate&quot;: 1,&#xd;
			&quot;actualCurrencyAmount&quot;: 1,&#xd;
			&quot;baseAmount&quot;: 1,&#xd;
			&quot;updateRate&quot;: false,&#xd;
			&quot;flightNo&quot;: null,&#xd;
			&quot;apportionUsed&quot;: false,&#xd;
			&quot;expenseApportion&quot;: null,&#xd;
			&quot;expenseReportOID&quot;: null,&#xd;
			&quot;amountChanged&quot;: null,&#xd;
			&quot;approvalStatus&quot;: null,&#xd;
			&quot;bankTransactionID&quot;: null,&#xd;
			&quot;expenseCreatedType&quot;: null,&#xd;
			&quot;overDue&quot;: null,&#xd;
			&quot;bankTransactionDetail&quot;: null,&#xd;
			&quot;baseCurrency&quot;: null,&#xd;
			&quot;subsidyRepeatedFlag&quot;: false,&#xd;
			&quot;orderAmount&quot;: 1,&#xd;
			&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
			&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
			&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
			&quot;receiptedStatus&quot;: 0,&#xd;
			&quot;vatInvoice&quot;: false,&#xd;
			&quot;stringCol3&quot;: null,&#xd;
			&quot;recognized&quot;: false,&#xd;
			&quot;stringCol1&quot;: &quot;西安&quot;,&#xd;
			&quot;stringCol2&quot;: null,&#xd;
			&quot;status&quot;: 1000,&#xd;
			&quot;index&quot;: 14&#xd;
		},&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T15:07:06Z&quot;,&#xd;
		&quot;status&quot;: 1000&#xd;
	}, {&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T15:07:04Z&quot;,&#xd;
		&quot;expenseReportInvoiceOID&quot;: &quot;e69f43ad-9c19-4567-b313-fa89eeef9fa2&quot;,&#xd;
		&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;invoiceOID&quot;: &quot;${invoiceOID_office_1}&quot;,&#xd;
		&quot;invoiceView&quot;: {&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_office_1}&quot;,&#xd;
			&quot;expenseTypeId&quot;: &quot;917666881950972828&quot;,&#xd;
			&quot;expenseTypeOID&quot;: &quot;5ed16a96-57eb-44e5-88c8-1aa32da71ff5&quot;,&#xd;
			&quot;expenseTypeName&quot;: &quot;办公&quot;,&#xd;
			&quot;crossCheckStatus&quot;: null,&#xd;
			&quot;expenseTypeKey&quot;: null,&#xd;
			&quot;expenseTypeIconName&quot;: &quot;office&quot;,&#xd;
			&quot;phoneNumber&quot;: null,&#xd;
			&quot;email&quot;: null,&#xd;
			&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/0a68b77c-cdfe-4a7e-9681-304568e14115-office.png&quot;,&#xd;
			&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
			&quot;expenseTypeCategoryDTO&quot;: {&#xd;
				&quot;expenseTypeCategoryOID&quot;: &quot;c39ae68c-3f79-4c58-b655-8fbda51a9ba5&quot;,&#xd;
				&quot;name&quot;: &quot;费用类型&quot;,&#xd;
				&quot;code&quot;: null&#xd;
			},&#xd;
			&quot;costCenterItemOID&quot;: null,&#xd;
			&quot;costCenterItemName&quot;: null,&#xd;
			&quot;amount&quot;: 1,&#xd;
			&quot;originalAmount&quot;: 1,&#xd;
			&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;userOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
			&quot;mobile&quot;: null,&#xd;
			&quot;employeeId&quot;: null,&#xd;
			&quot;data&quot;: [{&#xd;
				&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
				&quot;name&quot;: &quot;说明&quot;,&#xd;
				&quot;value&quot;: &quot;办公用品&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;name&quot;,&#xd;
				&quot;sequence&quot;: 2,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;e572e636-0db0-4cb2-bea5-12b9daf89c99&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;办公用品&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}, {&#xd;
				&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
				&quot;name&quot;: &quot;城市&quot;,&#xd;
				&quot;value&quot;: &quot;西安&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;city&quot;,&#xd;
				&quot;sequence&quot;: 1,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;459ba233-e057-4950-9169-c75885294155&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;西安&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}],&#xd;
			&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
			&quot;comment&quot;: &quot;办公用品报销&quot;,&#xd;
			&quot;warning&quot;: &quot;&quot;,&#xd;
			&quot;overtime&quot;: &quot;N&quot;,&#xd;
			&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
			&quot;createdDate&quot;: &quot;2018-05-08T16:00:00Z&quot;,&#xd;
			&quot;attachments&quot;: [],&#xd;
			&quot;withReceipt&quot;: true,&#xd;
			&quot;readonly&quot;: false,&#xd;
			&quot;businessCode&quot;: null,&#xd;
			&quot;createLocation&quot;: null,&#xd;
			&quot;createTime&quot;: &quot;${createTime}T15:07:04Z&quot;,&#xd;
			&quot;rejectType&quot;: null,&#xd;
			&quot;approverId&quot;: null,&#xd;
			&quot;approvalStepId&quot;: null,&#xd;
			&quot;approvalOperates&quot;: null,&#xd;
			&quot;approver&quot;: null,&#xd;
			&quot;referenceId&quot;: null,&#xd;
			&quot;unitPrice&quot;: null,&#xd;
			&quot;number&quot;: null,&#xd;
			&quot;receiptFailType&quot;: null,&#xd;
			&quot;receiptFailReason&quot;: null,&#xd;
			&quot;valid&quot;: false,&#xd;
			&quot;receiptID&quot;: null,&#xd;
			&quot;cardSignType&quot;: null,&#xd;
			&quot;nonVATinclusiveAmount&quot;: null,&#xd;
			&quot;taxAmount&quot;: null,&#xd;
			&quot;receiptType&quot;: null,&#xd;
			&quot;receiptTypeNo&quot;: null,&#xd;
			&quot;invoiceCode&quot;: null,&#xd;
			&quot;invoiceNumber&quot;: null,&#xd;
			&quot;invoiceDate&quot;: null,&#xd;
			&quot;priceTaxAmount&quot;: null,&#xd;
			&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
			&quot;receiptGoodsID&quot;: null,&#xd;
			&quot;taxRate&quot;: null,&#xd;
			&quot;checkCode&quot;: null,&#xd;
			&quot;invoiceLabelDTOS&quot;: [],&#xd;
			&quot;invoiceLabels&quot;: [{&#xd;
				&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
				&quot;name&quot;: &quot;公司&quot;,&#xd;
				&quot;level&quot;: &quot;INFO&quot;,&#xd;
				&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
				&quot;toast&quot;: null,&#xd;
				&quot;category&quot;: null,&#xd;
				&quot;oldLabel&quot;: false&#xd;
			}],&#xd;
			&quot;companyOID&quot;: null,&#xd;
			&quot;invoiceInstead&quot;: true,&#xd;
			&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
			&quot;paymentType&quot;: 1002,&#xd;
			&quot;source&quot;: null,&#xd;
			&quot;ownerOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
			&quot;checked&quot;: null,&#xd;
			&quot;createInvoice&quot;: true,&#xd;
			&quot;checkWarning&quot;: null,&#xd;
			&quot;digitalInvoice&quot;: null,&#xd;
			&quot;digitalInvoiceId&quot;: null,&#xd;
			&quot;actualCurrencyRate&quot;: 1,&#xd;
			&quot;originalActualCurrencyRate&quot;: 1,&#xd;
			&quot;companyCurrencyRate&quot;: 1,&#xd;
			&quot;actualCurrencyAmount&quot;: 1,&#xd;
			&quot;baseAmount&quot;: 1,&#xd;
			&quot;updateRate&quot;: false,&#xd;
			&quot;flightNo&quot;: null,&#xd;
			&quot;apportionUsed&quot;: false,&#xd;
			&quot;expenseApportion&quot;: null,&#xd;
			&quot;expenseReportOID&quot;: null,&#xd;
			&quot;amountChanged&quot;: null,&#xd;
			&quot;approvalStatus&quot;: null,&#xd;
			&quot;bankTransactionID&quot;: null,&#xd;
			&quot;expenseCreatedType&quot;: null,&#xd;
			&quot;overDue&quot;: null,&#xd;
			&quot;bankTransactionDetail&quot;: null,&#xd;
			&quot;baseCurrency&quot;: null,&#xd;
			&quot;subsidyRepeatedFlag&quot;: false,&#xd;
			&quot;orderAmount&quot;: 1,&#xd;
			&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
			&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
			&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
			&quot;receiptedStatus&quot;: 0,&#xd;
			&quot;vatInvoice&quot;: false,&#xd;
			&quot;stringCol3&quot;: null,&#xd;
			&quot;recognized&quot;: false,&#xd;
			&quot;stringCol1&quot;: &quot;西安&quot;,&#xd;
			&quot;stringCol2&quot;: null,&#xd;
			&quot;status&quot;: 1000,&#xd;
			&quot;index&quot;: 15&#xd;
		},&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T15:07:04Z&quot;,&#xd;
		&quot;status&quot;: 1000&#xd;
	}, {&#xd;
		&quot;createdDate&quot;: &quot;${createTime}T15:07:02Z&quot;,&#xd;
		&quot;expenseReportInvoiceOID&quot;: &quot;2ab49414-25a7-478f-a10f-96120fe4cb42&quot;,&#xd;
		&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
		&quot;invoiceOID&quot;: &quot;${invoiceOID_food_1}&quot;,&#xd;
		&quot;invoiceView&quot;: {&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_food_1}&quot;,&#xd;
			&quot;expenseTypeId&quot;: &quot;917666881950972826&quot;,&#xd;
			&quot;expenseTypeOID&quot;: &quot;a47a84f3-993f-4f43-86a1-9ca0c162232a&quot;,&#xd;
			&quot;expenseTypeName&quot;: &quot;餐饮&quot;,&#xd;
			&quot;crossCheckStatus&quot;: null,&#xd;
			&quot;expenseTypeKey&quot;: null,&#xd;
			&quot;expenseTypeIconName&quot;: &quot;foodbeverage&quot;,&#xd;
			&quot;phoneNumber&quot;: null,&#xd;
			&quot;email&quot;: null,&#xd;
			&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/c0ca809d-1cb1-411b-96e4-b460a17ee011-foodbeverage.png&quot;,&#xd;
			&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
			&quot;expenseTypeCategoryDTO&quot;: {&#xd;
				&quot;expenseTypeCategoryOID&quot;: &quot;c39ae68c-3f79-4c58-b655-8fbda51a9ba5&quot;,&#xd;
				&quot;name&quot;: &quot;费用类型&quot;,&#xd;
				&quot;code&quot;: null&#xd;
			},&#xd;
			&quot;costCenterItemOID&quot;: null,&#xd;
			&quot;costCenterItemName&quot;: null,&#xd;
			&quot;amount&quot;: 1,&#xd;
			&quot;originalAmount&quot;: 1,&#xd;
			&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
			&quot;userOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
			&quot;mobile&quot;: null,&#xd;
			&quot;employeeId&quot;: null,&#xd;
			&quot;data&quot;: [{&#xd;
				&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
				&quot;name&quot;: &quot;就餐地点&quot;,&#xd;
				&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;西安饭庄(锦业路店)\&quot;,\&quot;longitude\&quot;:108.87323,\&quot;latitude\&quot;:34.19258}&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;location&quot;,&#xd;
				&quot;sequence&quot;: 2,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;b72960f7-b5e7-42b2-9a33-eadc90ef0aed&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;{\&quot;address\&quot;:\&quot;西安饭庄(锦业路店)\&quot;,\&quot;longitude\&quot;:108.87323,\&quot;latitude\&quot;:34.19258}&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}, {&#xd;
				&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
				&quot;name&quot;: &quot;城市&quot;,&#xd;
				&quot;value&quot;: &quot;西安&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;city&quot;,&#xd;
				&quot;sequence&quot;: 1,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;d32fb16c-28c0-437f-b4bb-3cb20f359cdd&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;西安&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}, {&#xd;
				&quot;fieldType&quot;: &quot;LONG&quot;,&#xd;
				&quot;name&quot;: &quot;人数&quot;,&#xd;
				&quot;value&quot;: &quot;3&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;head.count&quot;,&#xd;
				&quot;sequence&quot;: 3,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;1209fa3d-f3eb-4c69-844f-7608583f5af5&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;3&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}, {&#xd;
				&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
				&quot;name&quot;: &quot;对象&quot;,&#xd;
				&quot;value&quot;: &quot;a，b，c&quot;,&#xd;
				&quot;codeName&quot;: null,&#xd;
				&quot;messageKey&quot;: &quot;person&quot;,&#xd;
				&quot;sequence&quot;: 4,&#xd;
				&quot;customEnumerationDTO&quot;: null,&#xd;
				&quot;customEnumerationOID&quot;: null,&#xd;
				&quot;printHide&quot;: false,&#xd;
				&quot;required&quot;: null,&#xd;
				&quot;showOnList&quot;: true,&#xd;
				&quot;fieldOID&quot;: &quot;eb85af8b-2409-4a12-9500-c62a613c42de&quot;,&#xd;
				&quot;editable&quot;: true,&#xd;
				&quot;defaultValueMode&quot;: null,&#xd;
				&quot;defaultValueKey&quot;: null,&#xd;
				&quot;showValue&quot;: &quot;a，b，c&quot;,&#xd;
				&quot;isDefaultValueConfigurable&quot;: null,&#xd;
				&quot;isCommonField&quot;: null,&#xd;
				&quot;i18n&quot;: null&#xd;
			}],&#xd;
			&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
			&quot;comment&quot;: &quot;就餐费报销&quot;,&#xd;
			&quot;warning&quot;: &quot;&quot;,&#xd;
			&quot;overtime&quot;: &quot;N&quot;,&#xd;
			&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
			&quot;createdDate&quot;: &quot;2018-05-08T16:00:00Z&quot;,&#xd;
			&quot;attachments&quot;: [],&#xd;
			&quot;withReceipt&quot;: true,&#xd;
			&quot;readonly&quot;: false,&#xd;
			&quot;businessCode&quot;: null,&#xd;
			&quot;createLocation&quot;: null,&#xd;
			&quot;createTime&quot;: &quot;${createTime}T15:07:02Z&quot;,&#xd;
			&quot;rejectType&quot;: null,&#xd;
			&quot;approverId&quot;: null,&#xd;
			&quot;approvalStepId&quot;: null,&#xd;
			&quot;approvalOperates&quot;: null,&#xd;
			&quot;approver&quot;: null,&#xd;
			&quot;referenceId&quot;: null,&#xd;
			&quot;unitPrice&quot;: null,&#xd;
			&quot;number&quot;: null,&#xd;
			&quot;receiptFailType&quot;: null,&#xd;
			&quot;receiptFailReason&quot;: null,&#xd;
			&quot;valid&quot;: false,&#xd;
			&quot;receiptID&quot;: null,&#xd;
			&quot;cardSignType&quot;: null,&#xd;
			&quot;nonVATinclusiveAmount&quot;: null,&#xd;
			&quot;taxAmount&quot;: null,&#xd;
			&quot;receiptType&quot;: null,&#xd;
			&quot;receiptTypeNo&quot;: null,&#xd;
			&quot;invoiceCode&quot;: null,&#xd;
			&quot;invoiceNumber&quot;: null,&#xd;
			&quot;invoiceDate&quot;: null,&#xd;
			&quot;priceTaxAmount&quot;: null,&#xd;
			&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
			&quot;receiptGoodsID&quot;: null,&#xd;
			&quot;taxRate&quot;: null,&#xd;
			&quot;checkCode&quot;: null,&#xd;
			&quot;invoiceLabelDTOS&quot;: [],&#xd;
			&quot;invoiceLabels&quot;: [{&#xd;
				&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
				&quot;name&quot;: &quot;公司&quot;,&#xd;
				&quot;level&quot;: &quot;INFO&quot;,&#xd;
				&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
				&quot;toast&quot;: null,&#xd;
				&quot;category&quot;: null,&#xd;
				&quot;oldLabel&quot;: false&#xd;
			}],&#xd;
			&quot;companyOID&quot;: null,&#xd;
			&quot;invoiceInstead&quot;: true,&#xd;
			&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
			&quot;paymentType&quot;: 1002,&#xd;
			&quot;source&quot;: null,&#xd;
			&quot;ownerOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
			&quot;checked&quot;: null,&#xd;
			&quot;createInvoice&quot;: true,&#xd;
			&quot;checkWarning&quot;: null,&#xd;
			&quot;digitalInvoice&quot;: null,&#xd;
			&quot;digitalInvoiceId&quot;: null,&#xd;
			&quot;actualCurrencyRate&quot;: 1,&#xd;
			&quot;originalActualCurrencyRate&quot;: 1,&#xd;
			&quot;companyCurrencyRate&quot;: 1,&#xd;
			&quot;actualCurrencyAmount&quot;: 1,&#xd;
			&quot;baseAmount&quot;: 1,&#xd;
			&quot;updateRate&quot;: false,&#xd;
			&quot;flightNo&quot;: null,&#xd;
			&quot;apportionUsed&quot;: false,&#xd;
			&quot;expenseApportion&quot;: null,&#xd;
			&quot;expenseReportOID&quot;: null,&#xd;
			&quot;amountChanged&quot;: null,&#xd;
			&quot;approvalStatus&quot;: null,&#xd;
			&quot;bankTransactionID&quot;: null,&#xd;
			&quot;expenseCreatedType&quot;: null,&#xd;
			&quot;overDue&quot;: null,&#xd;
			&quot;bankTransactionDetail&quot;: null,&#xd;
			&quot;baseCurrency&quot;: null,&#xd;
			&quot;subsidyRepeatedFlag&quot;: false,&#xd;
			&quot;orderAmount&quot;: 1,&#xd;
			&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
			&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
			&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
			&quot;receiptedStatus&quot;: 0,&#xd;
			&quot;vatInvoice&quot;: false,&#xd;
			&quot;stringCol3&quot;: &quot;a，b，c&quot;,&#xd;
			&quot;recognized&quot;: false,&#xd;
			&quot;stringCol1&quot;: &quot;西安&quot;,&#xd;
			&quot;stringCol2&quot;: null,&#xd;
			&quot;status&quot;: 1000,&#xd;
			&quot;index&quot;: 16&#xd;
		},&#xd;
		&quot;lastModifiedDate&quot;: &quot;${createTime}T15:07:02Z&quot;,&#xd;
		&quot;status&quot;: 1000&#xd;
	}],&#xd;
	&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
	&quot;expenseTypes&quot;: &quot;acd31a5c-7785-426f-a940-38f8878cadf1:426d9d41-2c5e-4121-83ce-43f4cf45e54e:89525729-917a-4330-8df0-135113051392:bb0a2d86-ad77-4fd9-9623-bfbd05788f8f:87e75152-0d45-49a7-8138-39240b17c750:ac4a58c1-0f62-4966-8bf2-f287c9590a73:5ed16a96-57eb-44e5-88c8-1aa32da71ff5:54593759-18fb-4ff5-aa50-02db6eafa43b:6073d313-8503-49f9-b6d2-915e0c381afc:a1da85e8-4745-40fb-9c5b-a4ded54de851:4360c466-8270-421a-93c8-43d308a1eba0:41733b8b-d4fb-40ac-b761-e9ecc58e37b4:83a01d84-8c34-48fe-b42d-528036765d8c:51bf1d01-378a-473d-8601-0ed004ea6789:a47a84f3-993f-4f43-86a1-9ca0c162232a:2748e317-5dde-4737-a2f1-48473a7e9d01&quot;,&#xd;
	&quot;filterFlag&quot;: true,&#xd;
	&quot;forceCount&quot;: 0,&#xd;
	&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
	&quot;foreignCurrencyAmount&quot;: 16,&#xd;
	&quot;formName&quot;: &quot;日常报销单&quot;,&#xd;
	&quot;formOID&quot;: &quot;${dailyFormOID}&quot;,&#xd;
	&quot;ignoreBudgetWarningFlag&quot;: false,&#xd;
	&quot;invoiceGroups&quot;: [{&#xd;
		&quot;categoryName&quot;: &quot;费用类型&quot;,&#xd;
		&quot;invoices&quot;: [{&#xd;
			&quot;createdDate&quot;: &quot;${createTime}T15:07:17Z&quot;,&#xd;
			&quot;expenseReportInvoiceOID&quot;: &quot;e4d151cd-9a3f-4bcb-b5cc-c672fa5aceac&quot;,&#xd;
			&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_visa_1}&quot;,&#xd;
			&quot;invoiceView&quot;: {&#xd;
				&quot;invoiceOID&quot;: &quot;${invoiceOID_visa_1}&quot;,&#xd;
				&quot;expenseTypeId&quot;: &quot;917666881950972836&quot;,&#xd;
				&quot;expenseTypeOID&quot;: &quot;6073d313-8503-49f9-b6d2-915e0c381afc&quot;,&#xd;
				&quot;expenseTypeName&quot;: &quot;签证&quot;,&#xd;
				&quot;crossCheckStatus&quot;: null,&#xd;
				&quot;expenseTypeKey&quot;: null,&#xd;
				&quot;expenseTypeIconName&quot;: &quot;visa&quot;,&#xd;
				&quot;phoneNumber&quot;: null,&#xd;
				&quot;email&quot;: null,&#xd;
				&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/7cb61778-e7f4-4e3b-bf94-8b0d8536d89e-visa.png&quot;,&#xd;
				&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
				&quot;expenseTypeCategoryDTO&quot;: {&#xd;
					&quot;expenseTypeCategoryOID&quot;: &quot;c39ae68c-3f79-4c58-b655-8fbda51a9ba5&quot;,&#xd;
					&quot;name&quot;: &quot;费用类型&quot;,&#xd;
					&quot;code&quot;: null&#xd;
				},&#xd;
				&quot;costCenterItemOID&quot;: null,&#xd;
				&quot;costCenterItemName&quot;: null,&#xd;
				&quot;amount&quot;: 1,&#xd;
				&quot;originalAmount&quot;: 1,&#xd;
				&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;userOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;mobile&quot;: null,&#xd;
				&quot;employeeId&quot;: null,&#xd;
				&quot;data&quot;: [{&#xd;
					&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
					&quot;name&quot;: &quot;国家&quot;,&#xd;
					&quot;value&quot;: &quot;中国&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;country&quot;,&#xd;
					&quot;sequence&quot;: 0,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;b18c74b5-b445-4bb1-ae33-a84494edb986&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;中国&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}],&#xd;
				&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
				&quot;comment&quot;: &quot;签证费报销&quot;,&#xd;
				&quot;warning&quot;: &quot;&quot;,&#xd;
				&quot;overtime&quot;: &quot;N&quot;,&#xd;
				&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
				&quot;createdDate&quot;: &quot;2018-05-07T16:00:00Z&quot;,&#xd;
				&quot;attachments&quot;: [],&#xd;
				&quot;withReceipt&quot;: true,&#xd;
				&quot;readonly&quot;: false,&#xd;
				&quot;businessCode&quot;: null,&#xd;
				&quot;createLocation&quot;: null,&#xd;
				&quot;createTime&quot;: &quot;${createTime}T15:07:17Z&quot;,&#xd;
				&quot;rejectType&quot;: null,&#xd;
				&quot;rejectReason&quot;: null,&#xd;
				&quot;approverId&quot;: null,&#xd;
				&quot;approvalStepId&quot;: null,&#xd;
				&quot;approvalOperates&quot;: null,&#xd;
				&quot;approver&quot;: null,&#xd;
				&quot;referenceId&quot;: null,&#xd;
				&quot;unitPrice&quot;: null,&#xd;
				&quot;number&quot;: null,&#xd;
				&quot;receiptFailType&quot;: null,&#xd;
				&quot;receiptFailReason&quot;: null,&#xd;
				&quot;valid&quot;: false,&#xd;
				&quot;receiptID&quot;: null,&#xd;
				&quot;cardSignType&quot;: null,&#xd;
				&quot;nonVATinclusiveAmount&quot;: null,&#xd;
				&quot;taxAmount&quot;: null,&#xd;
				&quot;receiptType&quot;: null,&#xd;
				&quot;receiptTypeNo&quot;: null,&#xd;
				&quot;invoiceCode&quot;: null,&#xd;
				&quot;invoiceNumber&quot;: null,&#xd;
				&quot;invoiceDate&quot;: null,&#xd;
				&quot;priceTaxAmount&quot;: null,&#xd;
				&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
				&quot;receiptGoodsID&quot;: null,&#xd;
				&quot;taxRate&quot;: null,&#xd;
				&quot;checkCode&quot;: null,&#xd;
				&quot;invoiceLabelDTOS&quot;: [],&#xd;
				&quot;invoiceLabels&quot;: [{&#xd;
					&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
					&quot;name&quot;: &quot;公司&quot;,&#xd;
					&quot;level&quot;: &quot;INFO&quot;,&#xd;
					&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
					&quot;toast&quot;: null,&#xd;
					&quot;category&quot;: null,&#xd;
					&quot;oldLabel&quot;: false&#xd;
				}],&#xd;
				&quot;companyOID&quot;: null,&#xd;
				&quot;invoiceInstead&quot;: true,&#xd;
				&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
				&quot;paymentType&quot;: 1002,&#xd;
				&quot;source&quot;: null,&#xd;
				&quot;ownerOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;checked&quot;: null,&#xd;
				&quot;createInvoice&quot;: true,&#xd;
				&quot;checkWarning&quot;: null,&#xd;
				&quot;digitalInvoice&quot;: null,&#xd;
				&quot;digitalInvoiceId&quot;: null,&#xd;
				&quot;actualCurrencyRate&quot;: 1,&#xd;
				&quot;originalActualCurrencyRate&quot;: 1,&#xd;
				&quot;companyCurrencyRate&quot;: 1,&#xd;
				&quot;actualCurrencyAmount&quot;: 1,&#xd;
				&quot;baseAmount&quot;: 1,&#xd;
				&quot;updateRate&quot;: false,&#xd;
				&quot;flightNo&quot;: null,&#xd;
				&quot;apportionUsed&quot;: false,&#xd;
				&quot;expenseApportion&quot;: null,&#xd;
				&quot;expenseReportOID&quot;: null,&#xd;
				&quot;amountChanged&quot;: null,&#xd;
				&quot;approvalStatus&quot;: null,&#xd;
				&quot;bankTransactionID&quot;: null,&#xd;
				&quot;expenseCreatedType&quot;: null,&#xd;
				&quot;overDue&quot;: null,&#xd;
				&quot;bankTransactionDetail&quot;: null,&#xd;
				&quot;baseCurrency&quot;: null,&#xd;
				&quot;subsidyRepeatedFlag&quot;: false,&#xd;
				&quot;orderAmount&quot;: 1,&#xd;
				&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
				&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
				&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
				&quot;receiptedStatus&quot;: 0,&#xd;
				&quot;vatInvoice&quot;: false,&#xd;
				&quot;stringCol3&quot;: null,&#xd;
				&quot;recognized&quot;: false,&#xd;
				&quot;stringCol1&quot;: &quot;中国&quot;,&#xd;
				&quot;stringCol2&quot;: null&#xd;
			},&#xd;
			&quot;lastModifiedDate&quot;: &quot;${createTime}T15:07:17Z&quot;,&#xd;
			&quot;status&quot;: 1000&#xd;
		}, {&#xd;
			&quot;createdDate&quot;: &quot;${createTime}T15:07:15Z&quot;,&#xd;
			&quot;expenseReportInvoiceOID&quot;: &quot;23689fde-a077-4f98-9afc-2bd6116663f8&quot;,&#xd;
			&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_file_1}&quot;,&#xd;
			&quot;invoiceView&quot;: {&#xd;
				&quot;invoiceOID&quot;: &quot;${invoiceOID_file_1}&quot;,&#xd;
				&quot;expenseTypeId&quot;: &quot;917666881950972834&quot;,&#xd;
				&quot;expenseTypeOID&quot;: &quot;54593759-18fb-4ff5-aa50-02db6eafa43b&quot;,&#xd;
				&quot;expenseTypeName&quot;: &quot;档案&quot;,&#xd;
				&quot;crossCheckStatus&quot;: 1,&#xd;
				&quot;expenseTypeKey&quot;: null,&#xd;
				&quot;expenseTypeIconName&quot;: &quot;file&quot;,&#xd;
				&quot;phoneNumber&quot;: null,&#xd;
				&quot;email&quot;: null,&#xd;
				&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/835ab2b0-d09a-4c33-97fa-73d61ab6d5fb-file.png&quot;,&#xd;
				&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
				&quot;expenseTypeCategoryDTO&quot;: {&#xd;
					&quot;expenseTypeCategoryOID&quot;: &quot;c39ae68c-3f79-4c58-b655-8fbda51a9ba5&quot;,&#xd;
					&quot;name&quot;: &quot;费用类型&quot;,&#xd;
					&quot;code&quot;: null&#xd;
				},&#xd;
				&quot;costCenterItemOID&quot;: null,&#xd;
				&quot;costCenterItemName&quot;: null,&#xd;
				&quot;amount&quot;: 1,&#xd;
				&quot;originalAmount&quot;: 1,&#xd;
				&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;userOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;mobile&quot;: null,&#xd;
				&quot;employeeId&quot;: null,&#xd;
				&quot;data&quot;: [{&#xd;
					&quot;fieldType&quot;: &quot;DATE&quot;,&#xd;
					&quot;name&quot;: &quot;结束日期&quot;,&#xd;
					&quot;value&quot;: &quot;2018-06-30T10:20:04Z&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;end.date&quot;,&#xd;
					&quot;sequence&quot;: 1,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: null,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;0bc65a70-a1d2-48df-9356-f529c6db21c4&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;2018-06-30T10:20:04Z&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: false,&#xd;
					&quot;i18n&quot;: null&#xd;
				}, {&#xd;
					&quot;fieldType&quot;: &quot;DATE&quot;,&#xd;
					&quot;name&quot;: &quot;开始日期&quot;,&#xd;
					&quot;value&quot;: &quot;2018-04-08T10:19:59Z&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;start.date&quot;,&#xd;
					&quot;sequence&quot;: 0,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: null,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;0bead83f-c865-4742-93f6-f0a055513f3f&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;2018-04-08T10:19:59Z&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: false,&#xd;
					&quot;i18n&quot;: null&#xd;
				}, {&#xd;
					&quot;fieldType&quot;: &quot;PARTICIPANTS&quot;,&#xd;
					&quot;name&quot;: &quot;参与人&quot;,&#xd;
					&quot;value&quot;: &quot;[{\&quot;id\&quot;:\&quot;197249\&quot;,\&quot;login\&quot;:\&quot;hbrq87861111\&quot;,\&quot;userOID\&quot;:\&quot;1e05d167-f7c1-419e-b831-037bfbd77a24\&quot;,\&quot;companyOID\&quot;:\&quot;d8180f46-dafd-483b-a399-f8660a9dc643\&quot;,\&quot;password\&quot;:null,\&quot;fullName\&quot;:\&quot;admin\&quot;,\&quot;firstName\&quot;:null,\&quot;lastName\&quot;:null,\&quot;email\&quot;:\&quot;admin@autotest.com\&quot;,\&quot;mobile\&quot;:\&quot;13700000000\&quot;,\&quot;employeeID\&quot;:\&quot;1111\&quot;,\&quot;title\&quot;:null,\&quot;activated\&quot;:true,\&quot;authorities\&quot;:[\&quot;ROLE_COMPANY_ADMIN\&quot;,\&quot;ROLE_USER\&quot;,\&quot;ROLE_COMPANY_FINANCE_ADMIN\&quot;,\&quot;ROLE_TENANT_ADMIN\&quot;],\&quot;departmentOID\&quot;:\&quot;11aee35f-c8c7-4e86-bf70-de194e3c8e1f\&quot;,\&quot;departmentName\&quot;:\&quot;HLY自动化\&quot;,\&quot;filePath\&quot;:null,\&quot;avatar\&quot;:null,\&quot;status\&quot;:null,\&quot;companyName\&quot;:\&quot;HLY自动化\&quot;,\&quot;corporationOID\&quot;:\&quot;2157f6b5-8d9e-40e6-a7b6-10745e190162\&quot;,\&quot;language\&quot;:\&quot;zh_CN\&quot;,\&quot;pageRoles\&quot;:[{\&quot;pageName\&quot;:\&quot;FINANCEMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;EXPENSEAUDIT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;RECEIPTEDINVOICES\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;EXPENSEPAYMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;LOANMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;LOANGLOBALVIEW\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;REPAYMENTSLIPMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;LOANBILLMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;PAYMENTBATCH\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;EXPENSEVIEW\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;VENDORRECONCILIATION\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;VENDORMAINTENANCE\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;PRINTINVOICEBATCH\&quot;,\&quot;action\&quot;:2}],\&quot;financeRoleOID\&quot;:\&quot;adeeed31-b361-480e-8b03-8d71deef3723\&quot;,\&quot;companyId\&quot;:889138,\&quot;tenantId\&quot;:\&quot;992026018782457858\&quot;,\&quot;directManager\&quot;:null,\&quot;directManagerId\&quot;:null,\&quot;directManagerName\&quot;:null,\&quot;departmentPath\&quot;:null,\&quot;senior\&quot;:false,\&quot;deleted\&quot;:false}]&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;participants&quot;,&#xd;
					&quot;sequence&quot;: 2,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: null,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;5a146ec4-d201-42eb-8b6b-7a702aea5a0d&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;[{\&quot;id\&quot;:\&quot;197249\&quot;,\&quot;login\&quot;:\&quot;hbrq87861111\&quot;,\&quot;userOID\&quot;:\&quot;1e05d167-f7c1-419e-b831-037bfbd77a24\&quot;,\&quot;companyOID\&quot;:\&quot;d8180f46-dafd-483b-a399-f8660a9dc643\&quot;,\&quot;password\&quot;:null,\&quot;fullName\&quot;:\&quot;admin\&quot;,\&quot;firstName\&quot;:null,\&quot;lastName\&quot;:null,\&quot;email\&quot;:\&quot;admin@autotest.com\&quot;,\&quot;mobile\&quot;:\&quot;13700000000\&quot;,\&quot;employeeID\&quot;:\&quot;1111\&quot;,\&quot;title\&quot;:null,\&quot;activated\&quot;:true,\&quot;authorities\&quot;:[\&quot;ROLE_COMPANY_ADMIN\&quot;,\&quot;ROLE_USER\&quot;,\&quot;ROLE_COMPANY_FINANCE_ADMIN\&quot;,\&quot;ROLE_TENANT_ADMIN\&quot;],\&quot;departmentOID\&quot;:\&quot;11aee35f-c8c7-4e86-bf70-de194e3c8e1f\&quot;,\&quot;departmentName\&quot;:\&quot;HLY自动化\&quot;,\&quot;filePath\&quot;:null,\&quot;avatar\&quot;:null,\&quot;status\&quot;:null,\&quot;companyName\&quot;:\&quot;HLY自动化\&quot;,\&quot;corporationOID\&quot;:\&quot;2157f6b5-8d9e-40e6-a7b6-10745e190162\&quot;,\&quot;language\&quot;:\&quot;zh_CN\&quot;,\&quot;pageRoles\&quot;:[{\&quot;pageName\&quot;:\&quot;FINANCEMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;EXPENSEAUDIT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;RECEIPTEDINVOICES\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;EXPENSEPAYMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;LOANMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;LOANGLOBALVIEW\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;REPAYMENTSLIPMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;LOANBILLMANAGEMENT\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;PAYMENTBATCH\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;EXPENSEVIEW\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;VENDORRECONCILIATION\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;VENDORMAINTENANCE\&quot;,\&quot;action\&quot;:2},{\&quot;pageName\&quot;:\&quot;PRINTINVOICEBATCH\&quot;,\&quot;action\&quot;:2}],\&quot;financeRoleOID\&quot;:\&quot;adeeed31-b361-480e-8b03-8d71deef3723\&quot;,\&quot;companyId\&quot;:889138,\&quot;tenantId\&quot;:\&quot;992026018782457858\&quot;,\&quot;directManager\&quot;:null,\&quot;directManagerId\&quot;:null,\&quot;directManagerName\&quot;:null,\&quot;departmentPath\&quot;:null,\&quot;senior\&quot;:false,\&quot;deleted\&quot;:false}]&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: false,&#xd;
					&quot;i18n&quot;: null&#xd;
				}],&#xd;
				&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
				&quot;comment&quot;: &quot;档案费报销&quot;,&#xd;
				&quot;warning&quot;: &quot;&quot;,&#xd;
				&quot;overtime&quot;: &quot;N&quot;,&#xd;
				&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
				&quot;createdDate&quot;: &quot;2018-05-08T16:00:00Z&quot;,&#xd;
				&quot;attachments&quot;: [],&#xd;
				&quot;withReceipt&quot;: true,&#xd;
				&quot;readonly&quot;: false,&#xd;
				&quot;businessCode&quot;: null,&#xd;
				&quot;createLocation&quot;: null,&#xd;
				&quot;createTime&quot;: &quot;${createTime}T15:07:15Z&quot;,&#xd;
				&quot;rejectType&quot;: null,&#xd;
				&quot;rejectReason&quot;: null,&#xd;
				&quot;approverId&quot;: null,&#xd;
				&quot;approvalStepId&quot;: null,&#xd;
				&quot;approvalOperates&quot;: null,&#xd;
				&quot;approver&quot;: null,&#xd;
				&quot;referenceId&quot;: null,&#xd;
				&quot;unitPrice&quot;: null,&#xd;
				&quot;number&quot;: null,&#xd;
				&quot;receiptFailType&quot;: null,&#xd;
				&quot;receiptFailReason&quot;: null,&#xd;
				&quot;valid&quot;: false,&#xd;
				&quot;receiptID&quot;: null,&#xd;
				&quot;cardSignType&quot;: null,&#xd;
				&quot;nonVATinclusiveAmount&quot;: null,&#xd;
				&quot;taxAmount&quot;: null,&#xd;
				&quot;receiptType&quot;: null,&#xd;
				&quot;receiptTypeNo&quot;: null,&#xd;
				&quot;invoiceCode&quot;: null,&#xd;
				&quot;invoiceNumber&quot;: null,&#xd;
				&quot;invoiceDate&quot;: null,&#xd;
				&quot;priceTaxAmount&quot;: null,&#xd;
				&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
				&quot;receiptGoodsID&quot;: null,&#xd;
				&quot;taxRate&quot;: null,&#xd;
				&quot;checkCode&quot;: null,&#xd;
				&quot;invoiceLabelDTOS&quot;: [],&#xd;
				&quot;invoiceLabels&quot;: [{&#xd;
					&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
					&quot;name&quot;: &quot;公司&quot;,&#xd;
					&quot;level&quot;: &quot;INFO&quot;,&#xd;
					&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
					&quot;toast&quot;: null,&#xd;
					&quot;category&quot;: null,&#xd;
					&quot;oldLabel&quot;: false&#xd;
				}],&#xd;
				&quot;companyOID&quot;: null,&#xd;
				&quot;invoiceInstead&quot;: true,&#xd;
				&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
				&quot;paymentType&quot;: 1002,&#xd;
				&quot;source&quot;: null,&#xd;
				&quot;ownerOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;checked&quot;: null,&#xd;
				&quot;createInvoice&quot;: true,&#xd;
				&quot;checkWarning&quot;: null,&#xd;
				&quot;digitalInvoice&quot;: null,&#xd;
				&quot;digitalInvoiceId&quot;: null,&#xd;
				&quot;actualCurrencyRate&quot;: 1,&#xd;
				&quot;originalActualCurrencyRate&quot;: 1,&#xd;
				&quot;companyCurrencyRate&quot;: 1,&#xd;
				&quot;actualCurrencyAmount&quot;: 1,&#xd;
				&quot;baseAmount&quot;: 1,&#xd;
				&quot;updateRate&quot;: false,&#xd;
				&quot;flightNo&quot;: null,&#xd;
				&quot;apportionUsed&quot;: false,&#xd;
				&quot;expenseApportion&quot;: null,&#xd;
				&quot;expenseReportOID&quot;: null,&#xd;
				&quot;amountChanged&quot;: null,&#xd;
				&quot;approvalStatus&quot;: null,&#xd;
				&quot;bankTransactionID&quot;: null,&#xd;
				&quot;expenseCreatedType&quot;: null,&#xd;
				&quot;overDue&quot;: null,&#xd;
				&quot;bankTransactionDetail&quot;: null,&#xd;
				&quot;baseCurrency&quot;: null,&#xd;
				&quot;subsidyRepeatedFlag&quot;: false,&#xd;
				&quot;orderAmount&quot;: 1,&#xd;
				&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
				&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
				&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
				&quot;receiptedStatus&quot;: 0,&#xd;
				&quot;vatInvoice&quot;: false,&#xd;
				&quot;stringCol3&quot;: null,&#xd;
				&quot;recognized&quot;: false,&#xd;
				&quot;stringCol1&quot;: null,&#xd;
				&quot;stringCol2&quot;: null&#xd;
			},&#xd;
			&quot;lastModifiedDate&quot;: &quot;${createTime}T15:07:15Z&quot;,&#xd;
			&quot;status&quot;: 1000&#xd;
		}, {&#xd;
			&quot;createdDate&quot;: &quot;${createTime}T15:07:08Z&quot;,&#xd;
			&quot;expenseReportInvoiceOID&quot;: &quot;fb942730-f615-40cb-9821-a4fd72dce691&quot;,&#xd;
			&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_express_1}&quot;,&#xd;
			&quot;invoiceView&quot;: {&#xd;
				&quot;invoiceOID&quot;: &quot;${invoiceOID_express_1}&quot;,&#xd;
				&quot;expenseTypeId&quot;: &quot;917666881950972832&quot;,&#xd;
				&quot;expenseTypeOID&quot;: &quot;83a01d84-8c34-48fe-b42d-528036765d8c&quot;,&#xd;
				&quot;expenseTypeName&quot;: &quot;快递&quot;,&#xd;
				&quot;crossCheckStatus&quot;: null,&#xd;
				&quot;expenseTypeKey&quot;: null,&#xd;
				&quot;expenseTypeIconName&quot;: &quot;express&quot;,&#xd;
				&quot;phoneNumber&quot;: null,&#xd;
				&quot;email&quot;: null,&#xd;
				&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/7958999e-6bc1-4b4c-9ce1-0299caf5437c-express.png&quot;,&#xd;
				&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
				&quot;expenseTypeCategoryDTO&quot;: {&#xd;
					&quot;expenseTypeCategoryOID&quot;: &quot;c39ae68c-3f79-4c58-b655-8fbda51a9ba5&quot;,&#xd;
					&quot;name&quot;: &quot;费用类型&quot;,&#xd;
					&quot;code&quot;: null&#xd;
				},&#xd;
				&quot;costCenterItemOID&quot;: null,&#xd;
				&quot;costCenterItemName&quot;: null,&#xd;
				&quot;amount&quot;: 1,&#xd;
				&quot;originalAmount&quot;: 1,&#xd;
				&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;userOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;mobile&quot;: null,&#xd;
				&quot;employeeId&quot;: null,&#xd;
				&quot;data&quot;: [{&#xd;
					&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
					&quot;name&quot;: &quot;城市&quot;,&#xd;
					&quot;value&quot;: &quot;西安&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;city&quot;,&#xd;
					&quot;sequence&quot;: 1,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;1bf95e2c-3dca-4e3a-be00-8df2af6d1cd9&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;西安&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}],&#xd;
				&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
				&quot;comment&quot;: &quot;快递费报销&quot;,&#xd;
				&quot;warning&quot;: &quot;&quot;,&#xd;
				&quot;overtime&quot;: &quot;N&quot;,&#xd;
				&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
				&quot;createdDate&quot;: &quot;2018-05-08T16:00:00Z&quot;,&#xd;
				&quot;attachments&quot;: [],&#xd;
				&quot;withReceipt&quot;: true,&#xd;
				&quot;readonly&quot;: false,&#xd;
				&quot;businessCode&quot;: null,&#xd;
				&quot;createLocation&quot;: null,&#xd;
				&quot;createTime&quot;: &quot;${createTime}T15:07:08Z&quot;,&#xd;
				&quot;rejectType&quot;: null,&#xd;
				&quot;rejectReason&quot;: null,&#xd;
				&quot;approverId&quot;: null,&#xd;
				&quot;approvalStepId&quot;: null,&#xd;
				&quot;approvalOperates&quot;: null,&#xd;
				&quot;approver&quot;: null,&#xd;
				&quot;referenceId&quot;: null,&#xd;
				&quot;unitPrice&quot;: null,&#xd;
				&quot;number&quot;: null,&#xd;
				&quot;receiptFailType&quot;: null,&#xd;
				&quot;receiptFailReason&quot;: null,&#xd;
				&quot;valid&quot;: false,&#xd;
				&quot;receiptID&quot;: null,&#xd;
				&quot;cardSignType&quot;: null,&#xd;
				&quot;nonVATinclusiveAmount&quot;: null,&#xd;
				&quot;taxAmount&quot;: null,&#xd;
				&quot;receiptType&quot;: null,&#xd;
				&quot;receiptTypeNo&quot;: null,&#xd;
				&quot;invoiceCode&quot;: null,&#xd;
				&quot;invoiceNumber&quot;: null,&#xd;
				&quot;invoiceDate&quot;: null,&#xd;
				&quot;priceTaxAmount&quot;: null,&#xd;
				&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
				&quot;receiptGoodsID&quot;: null,&#xd;
				&quot;taxRate&quot;: null,&#xd;
				&quot;checkCode&quot;: null,&#xd;
				&quot;invoiceLabelDTOS&quot;: [],&#xd;
				&quot;invoiceLabels&quot;: [{&#xd;
					&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
					&quot;name&quot;: &quot;公司&quot;,&#xd;
					&quot;level&quot;: &quot;INFO&quot;,&#xd;
					&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
					&quot;toast&quot;: null,&#xd;
					&quot;category&quot;: null,&#xd;
					&quot;oldLabel&quot;: false&#xd;
				}],&#xd;
				&quot;companyOID&quot;: null,&#xd;
				&quot;invoiceInstead&quot;: true,&#xd;
				&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
				&quot;paymentType&quot;: 1002,&#xd;
				&quot;source&quot;: null,&#xd;
				&quot;ownerOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;checked&quot;: null,&#xd;
				&quot;createInvoice&quot;: true,&#xd;
				&quot;checkWarning&quot;: null,&#xd;
				&quot;digitalInvoice&quot;: null,&#xd;
				&quot;digitalInvoiceId&quot;: null,&#xd;
				&quot;actualCurrencyRate&quot;: 1,&#xd;
				&quot;originalActualCurrencyRate&quot;: 1,&#xd;
				&quot;companyCurrencyRate&quot;: 1,&#xd;
				&quot;actualCurrencyAmount&quot;: 1,&#xd;
				&quot;baseAmount&quot;: 1,&#xd;
				&quot;updateRate&quot;: false,&#xd;
				&quot;flightNo&quot;: null,&#xd;
				&quot;apportionUsed&quot;: false,&#xd;
				&quot;expenseApportion&quot;: null,&#xd;
				&quot;expenseReportOID&quot;: null,&#xd;
				&quot;amountChanged&quot;: null,&#xd;
				&quot;approvalStatus&quot;: null,&#xd;
				&quot;bankTransactionID&quot;: null,&#xd;
				&quot;expenseCreatedType&quot;: null,&#xd;
				&quot;overDue&quot;: null,&#xd;
				&quot;bankTransactionDetail&quot;: null,&#xd;
				&quot;baseCurrency&quot;: null,&#xd;
				&quot;subsidyRepeatedFlag&quot;: false,&#xd;
				&quot;orderAmount&quot;: 1,&#xd;
				&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
				&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
				&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
				&quot;receiptedStatus&quot;: 0,&#xd;
				&quot;vatInvoice&quot;: false,&#xd;
				&quot;stringCol3&quot;: null,&#xd;
				&quot;recognized&quot;: false,&#xd;
				&quot;stringCol1&quot;: &quot;西安&quot;,&#xd;
				&quot;stringCol2&quot;: null&#xd;
			},&#xd;
			&quot;lastModifiedDate&quot;: &quot;${createTime}T15:07:08Z&quot;,&#xd;
			&quot;status&quot;: 1000&#xd;
		}, {&#xd;
			&quot;createdDate&quot;: &quot;${createTime}T15:07:18Z&quot;,&#xd;
			&quot;expenseReportInvoiceOID&quot;: &quot;0555331b-036d-42aa-a47a-f06bd798bc6f&quot;,&#xd;
			&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_meal_1}&quot;,&#xd;
			&quot;invoiceView&quot;: {&#xd;
				&quot;invoiceOID&quot;: &quot;${invoiceOID_meal_1}&quot;,&#xd;
				&quot;expenseTypeId&quot;: &quot;917666881950972837&quot;,&#xd;
				&quot;expenseTypeOID&quot;: &quot;51bf1d01-378a-473d-8601-0ed004ea6789&quot;,&#xd;
				&quot;expenseTypeName&quot;: &quot;餐补&quot;,&#xd;
				&quot;crossCheckStatus&quot;: null,&#xd;
				&quot;expenseTypeKey&quot;: null,&#xd;
				&quot;expenseTypeIconName&quot;: &quot;mealAllowance&quot;,&#xd;
				&quot;phoneNumber&quot;: null,&#xd;
				&quot;email&quot;: null,&#xd;
				&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/a8a8eaba-568d-4af4-b001-12931e151a2e-mealAllowance.png&quot;,&#xd;
				&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
				&quot;expenseTypeCategoryDTO&quot;: {&#xd;
					&quot;expenseTypeCategoryOID&quot;: &quot;c39ae68c-3f79-4c58-b655-8fbda51a9ba5&quot;,&#xd;
					&quot;name&quot;: &quot;费用类型&quot;,&#xd;
					&quot;code&quot;: null&#xd;
				},&#xd;
				&quot;costCenterItemOID&quot;: null,&#xd;
				&quot;costCenterItemName&quot;: null,&#xd;
				&quot;amount&quot;: 1,&#xd;
				&quot;originalAmount&quot;: 1,&#xd;
				&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;userOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;mobile&quot;: null,&#xd;
				&quot;employeeId&quot;: null,&#xd;
				&quot;data&quot;: [{&#xd;
					&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
					&quot;name&quot;: &quot;国家&quot;,&#xd;
					&quot;value&quot;: &quot;中国&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;country&quot;,&#xd;
					&quot;sequence&quot;: 1,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;8a208786-215c-49d8-8691-2e8504c70e8d&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;中国&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}],&#xd;
				&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
				&quot;comment&quot;: &quot;餐补报销&quot;,&#xd;
				&quot;warning&quot;: &quot;&quot;,&#xd;
				&quot;overtime&quot;: &quot;N&quot;,&#xd;
				&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
				&quot;createdDate&quot;: &quot;2018-05-08T16:00:00Z&quot;,&#xd;
				&quot;attachments&quot;: [],&#xd;
				&quot;withReceipt&quot;: true,&#xd;
				&quot;readonly&quot;: false,&#xd;
				&quot;businessCode&quot;: null,&#xd;
				&quot;createLocation&quot;: null,&#xd;
				&quot;createTime&quot;: &quot;${createTime}T15:07:18Z&quot;,&#xd;
				&quot;rejectType&quot;: null,&#xd;
				&quot;rejectReason&quot;: null,&#xd;
				&quot;approverId&quot;: null,&#xd;
				&quot;approvalStepId&quot;: null,&#xd;
				&quot;approvalOperates&quot;: null,&#xd;
				&quot;approver&quot;: null,&#xd;
				&quot;referenceId&quot;: null,&#xd;
				&quot;unitPrice&quot;: null,&#xd;
				&quot;number&quot;: null,&#xd;
				&quot;receiptFailType&quot;: null,&#xd;
				&quot;receiptFailReason&quot;: null,&#xd;
				&quot;valid&quot;: false,&#xd;
				&quot;receiptID&quot;: null,&#xd;
				&quot;cardSignType&quot;: null,&#xd;
				&quot;nonVATinclusiveAmount&quot;: null,&#xd;
				&quot;taxAmount&quot;: null,&#xd;
				&quot;receiptType&quot;: null,&#xd;
				&quot;receiptTypeNo&quot;: null,&#xd;
				&quot;invoiceCode&quot;: null,&#xd;
				&quot;invoiceNumber&quot;: null,&#xd;
				&quot;invoiceDate&quot;: null,&#xd;
				&quot;priceTaxAmount&quot;: null,&#xd;
				&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
				&quot;receiptGoodsID&quot;: null,&#xd;
				&quot;taxRate&quot;: null,&#xd;
				&quot;checkCode&quot;: null,&#xd;
				&quot;invoiceLabelDTOS&quot;: [],&#xd;
				&quot;invoiceLabels&quot;: [{&#xd;
					&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
					&quot;name&quot;: &quot;公司&quot;,&#xd;
					&quot;level&quot;: &quot;INFO&quot;,&#xd;
					&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
					&quot;toast&quot;: null,&#xd;
					&quot;category&quot;: null,&#xd;
					&quot;oldLabel&quot;: false&#xd;
				}],&#xd;
				&quot;companyOID&quot;: null,&#xd;
				&quot;invoiceInstead&quot;: true,&#xd;
				&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
				&quot;paymentType&quot;: 1002,&#xd;
				&quot;source&quot;: null,&#xd;
				&quot;ownerOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;checked&quot;: null,&#xd;
				&quot;createInvoice&quot;: true,&#xd;
				&quot;checkWarning&quot;: null,&#xd;
				&quot;digitalInvoice&quot;: null,&#xd;
				&quot;digitalInvoiceId&quot;: null,&#xd;
				&quot;actualCurrencyRate&quot;: 1,&#xd;
				&quot;originalActualCurrencyRate&quot;: 1,&#xd;
				&quot;companyCurrencyRate&quot;: 1,&#xd;
				&quot;actualCurrencyAmount&quot;: 1,&#xd;
				&quot;baseAmount&quot;: 1,&#xd;
				&quot;updateRate&quot;: false,&#xd;
				&quot;flightNo&quot;: null,&#xd;
				&quot;apportionUsed&quot;: false,&#xd;
				&quot;expenseApportion&quot;: null,&#xd;
				&quot;expenseReportOID&quot;: null,&#xd;
				&quot;amountChanged&quot;: null,&#xd;
				&quot;approvalStatus&quot;: null,&#xd;
				&quot;bankTransactionID&quot;: null,&#xd;
				&quot;expenseCreatedType&quot;: null,&#xd;
				&quot;overDue&quot;: null,&#xd;
				&quot;bankTransactionDetail&quot;: null,&#xd;
				&quot;baseCurrency&quot;: null,&#xd;
				&quot;subsidyRepeatedFlag&quot;: false,&#xd;
				&quot;orderAmount&quot;: 1,&#xd;
				&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
				&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
				&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
				&quot;receiptedStatus&quot;: 0,&#xd;
				&quot;vatInvoice&quot;: false,&#xd;
				&quot;stringCol3&quot;: null,&#xd;
				&quot;recognized&quot;: false,&#xd;
				&quot;stringCol1&quot;: &quot;中国&quot;,&#xd;
				&quot;stringCol2&quot;: null&#xd;
			},&#xd;
			&quot;lastModifiedDate&quot;: &quot;${createTime}T15:07:18Z&quot;,&#xd;
			&quot;status&quot;: 1000&#xd;
		}, {&#xd;
			&quot;createdDate&quot;: &quot;${createTime}T15:07:01Z&quot;,&#xd;
			&quot;expenseReportInvoiceOID&quot;: &quot;6a9e3373-e19e-486e-bbc7-723f0434ca1e&quot;,&#xd;
			&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_travel_1}&quot;,&#xd;
			&quot;invoiceView&quot;: {&#xd;
				&quot;invoiceOID&quot;: &quot;${invoiceOID_travel_1}&quot;,&#xd;
				&quot;expenseTypeId&quot;: &quot;917666881950972825&quot;,&#xd;
				&quot;expenseTypeOID&quot;: &quot;426d9d41-2c5e-4121-83ce-43f4cf45e54e&quot;,&#xd;
				&quot;expenseTypeName&quot;: &quot;火车&quot;,&#xd;
				&quot;crossCheckStatus&quot;: null,&#xd;
				&quot;expenseTypeKey&quot;: null,&#xd;
				&quot;expenseTypeIconName&quot;: &quot;travel&quot;,&#xd;
				&quot;phoneNumber&quot;: null,&#xd;
				&quot;email&quot;: null,&#xd;
				&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/15d980f7-faec-42ad-a7f7-c04a98dc4f59-travel.png&quot;,&#xd;
				&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
				&quot;expenseTypeCategoryDTO&quot;: {&#xd;
					&quot;expenseTypeCategoryOID&quot;: &quot;c39ae68c-3f79-4c58-b655-8fbda51a9ba5&quot;,&#xd;
					&quot;name&quot;: &quot;费用类型&quot;,&#xd;
					&quot;code&quot;: null&#xd;
				},&#xd;
				&quot;costCenterItemOID&quot;: null,&#xd;
				&quot;costCenterItemName&quot;: null,&#xd;
				&quot;amount&quot;: 1,&#xd;
				&quot;originalAmount&quot;: 1,&#xd;
				&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;userOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;mobile&quot;: null,&#xd;
				&quot;employeeId&quot;: null,&#xd;
				&quot;data&quot;: [{&#xd;
					&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
					&quot;name&quot;: &quot;目的地&quot;,&#xd;
					&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;上海火车站[地铁站]\&quot;,\&quot;longitude\&quot;:121.455716,\&quot;latitude\&quot;:31.247401}&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;destination.location&quot;,&#xd;
					&quot;sequence&quot;: 2,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;6dfb46ca-b7fe-44a5-b04a-0862d85974e0&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;{\&quot;address\&quot;:\&quot;上海火车站[地铁站]\&quot;,\&quot;longitude\&quot;:121.455716,\&quot;latitude\&quot;:31.247401}&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}, {&#xd;
					&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
					&quot;name&quot;: &quot;出发地&quot;,&#xd;
					&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;西安火车站\&quot;,\&quot;longitude\&quot;:108.962682113,\&quot;latitude\&quot;:34.277386079}&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;departure.location&quot;,&#xd;
					&quot;sequence&quot;: 1,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;80d73fa1-8b99-4e22-bca9-9fe8cd3cdbdd&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;{\&quot;address\&quot;:\&quot;西安火车站\&quot;,\&quot;longitude\&quot;:108.962682113,\&quot;latitude\&quot;:34.277386079}&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}],&#xd;
				&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
				&quot;comment&quot;: &quot;火车费报销&quot;,&#xd;
				&quot;warning&quot;: &quot;&quot;,&#xd;
				&quot;overtime&quot;: &quot;N&quot;,&#xd;
				&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
				&quot;createdDate&quot;: &quot;2018-05-08T16:00:00Z&quot;,&#xd;
				&quot;attachments&quot;: [],&#xd;
				&quot;withReceipt&quot;: true,&#xd;
				&quot;readonly&quot;: false,&#xd;
				&quot;businessCode&quot;: null,&#xd;
				&quot;createLocation&quot;: null,&#xd;
				&quot;createTime&quot;: &quot;${createTime}T15:07:01Z&quot;,&#xd;
				&quot;rejectType&quot;: null,&#xd;
				&quot;rejectReason&quot;: null,&#xd;
				&quot;approverId&quot;: null,&#xd;
				&quot;approvalStepId&quot;: null,&#xd;
				&quot;approvalOperates&quot;: null,&#xd;
				&quot;approver&quot;: null,&#xd;
				&quot;referenceId&quot;: null,&#xd;
				&quot;unitPrice&quot;: null,&#xd;
				&quot;number&quot;: null,&#xd;
				&quot;receiptFailType&quot;: null,&#xd;
				&quot;receiptFailReason&quot;: null,&#xd;
				&quot;valid&quot;: false,&#xd;
				&quot;receiptID&quot;: null,&#xd;
				&quot;cardSignType&quot;: null,&#xd;
				&quot;nonVATinclusiveAmount&quot;: null,&#xd;
				&quot;taxAmount&quot;: null,&#xd;
				&quot;receiptType&quot;: null,&#xd;
				&quot;receiptTypeNo&quot;: null,&#xd;
				&quot;invoiceCode&quot;: null,&#xd;
				&quot;invoiceNumber&quot;: null,&#xd;
				&quot;invoiceDate&quot;: null,&#xd;
				&quot;priceTaxAmount&quot;: null,&#xd;
				&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
				&quot;receiptGoodsID&quot;: null,&#xd;
				&quot;taxRate&quot;: null,&#xd;
				&quot;checkCode&quot;: null,&#xd;
				&quot;invoiceLabelDTOS&quot;: [],&#xd;
				&quot;invoiceLabels&quot;: [{&#xd;
					&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
					&quot;name&quot;: &quot;公司&quot;,&#xd;
					&quot;level&quot;: &quot;INFO&quot;,&#xd;
					&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
					&quot;toast&quot;: null,&#xd;
					&quot;category&quot;: null,&#xd;
					&quot;oldLabel&quot;: false&#xd;
				}],&#xd;
				&quot;companyOID&quot;: null,&#xd;
				&quot;invoiceInstead&quot;: true,&#xd;
				&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
				&quot;paymentType&quot;: 1002,&#xd;
				&quot;source&quot;: null,&#xd;
				&quot;ownerOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;checked&quot;: null,&#xd;
				&quot;createInvoice&quot;: true,&#xd;
				&quot;checkWarning&quot;: null,&#xd;
				&quot;digitalInvoice&quot;: null,&#xd;
				&quot;digitalInvoiceId&quot;: null,&#xd;
				&quot;actualCurrencyRate&quot;: 1,&#xd;
				&quot;originalActualCurrencyRate&quot;: 1,&#xd;
				&quot;companyCurrencyRate&quot;: 1,&#xd;
				&quot;actualCurrencyAmount&quot;: 1,&#xd;
				&quot;baseAmount&quot;: 1,&#xd;
				&quot;updateRate&quot;: false,&#xd;
				&quot;flightNo&quot;: null,&#xd;
				&quot;apportionUsed&quot;: false,&#xd;
				&quot;expenseApportion&quot;: null,&#xd;
				&quot;expenseReportOID&quot;: null,&#xd;
				&quot;amountChanged&quot;: null,&#xd;
				&quot;approvalStatus&quot;: null,&#xd;
				&quot;bankTransactionID&quot;: null,&#xd;
				&quot;expenseCreatedType&quot;: null,&#xd;
				&quot;overDue&quot;: null,&#xd;
				&quot;bankTransactionDetail&quot;: null,&#xd;
				&quot;baseCurrency&quot;: null,&#xd;
				&quot;subsidyRepeatedFlag&quot;: false,&#xd;
				&quot;orderAmount&quot;: 1,&#xd;
				&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
				&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
				&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
				&quot;receiptedStatus&quot;: 0,&#xd;
				&quot;vatInvoice&quot;: false,&#xd;
				&quot;stringCol3&quot;: null,&#xd;
				&quot;recognized&quot;: false,&#xd;
				&quot;stringCol1&quot;: &quot;{\&quot;address\&quot;:\&quot;西安火车站\&quot;,\&quot;longitude\&quot;:108.962682113,\&quot;latitude\&quot;:34.277386079}&quot;,&#xd;
				&quot;stringCol2&quot;: null&#xd;
			},&#xd;
			&quot;lastModifiedDate&quot;: &quot;${createTime}T15:07:01Z&quot;,&#xd;
			&quot;status&quot;: 1000&#xd;
		}, {&#xd;
			&quot;createdDate&quot;: &quot;${createTime}T15:07:00Z&quot;,&#xd;
			&quot;expenseReportInvoiceOID&quot;: &quot;8460fc69-10c1-4b2e-92ff-e02664bd63b8&quot;,&#xd;
			&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_coach_1}&quot;,&#xd;
			&quot;invoiceView&quot;: {&#xd;
				&quot;invoiceOID&quot;: &quot;${invoiceOID_coach_1}&quot;,&#xd;
				&quot;expenseTypeId&quot;: &quot;917666881950972824&quot;,&#xd;
				&quot;expenseTypeOID&quot;: &quot;acd31a5c-7785-426f-a940-38f8878cadf1&quot;,&#xd;
				&quot;expenseTypeName&quot;: &quot;大巴&quot;,&#xd;
				&quot;crossCheckStatus&quot;: null,&#xd;
				&quot;expenseTypeKey&quot;: null,&#xd;
				&quot;expenseTypeIconName&quot;: &quot;coach&quot;,&#xd;
				&quot;phoneNumber&quot;: null,&#xd;
				&quot;email&quot;: null,&#xd;
				&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/616b0ab3-aa59-46ca-bf69-b3d2e53ea8ff-coach.png&quot;,&#xd;
				&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
				&quot;expenseTypeCategoryDTO&quot;: {&#xd;
					&quot;expenseTypeCategoryOID&quot;: &quot;c39ae68c-3f79-4c58-b655-8fbda51a9ba5&quot;,&#xd;
					&quot;name&quot;: &quot;费用类型&quot;,&#xd;
					&quot;code&quot;: null&#xd;
				},&#xd;
				&quot;costCenterItemOID&quot;: null,&#xd;
				&quot;costCenterItemName&quot;: null,&#xd;
				&quot;amount&quot;: 1,&#xd;
				&quot;originalAmount&quot;: 1,&#xd;
				&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;userOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;mobile&quot;: null,&#xd;
				&quot;employeeId&quot;: null,&#xd;
				&quot;data&quot;: [{&#xd;
					&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
					&quot;name&quot;: &quot;出发地&quot;,&#xd;
					&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;华为西安研究所\&quot;,\&quot;longitude\&quot;:108.83902,\&quot;latitude\&quot;:34.19428}&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;departure.location&quot;,&#xd;
					&quot;sequence&quot;: 1,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;42b39985-58ff-4d92-af16-4ff92c3a9857&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;{\&quot;address\&quot;:\&quot;华为西安研究所\&quot;,\&quot;longitude\&quot;:108.83902,\&quot;latitude\&quot;:34.19428}&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}, {&#xd;
					&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
					&quot;name&quot;: &quot;目的地&quot;,&#xd;
					&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;西安环普科技产业园\&quot;,\&quot;longitude\&quot;:108.84068,\&quot;latitude\&quot;:34.20974}&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;destination.location&quot;,&#xd;
					&quot;sequence&quot;: 2,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;97f79e85-0b88-402a-8c01-4a4da8d57add&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;{\&quot;address\&quot;:\&quot;西安环普科技产业园\&quot;,\&quot;longitude\&quot;:108.84068,\&quot;latitude\&quot;:34.20974}&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}],&#xd;
				&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
				&quot;comment&quot;: &quot;大巴费报销&quot;,&#xd;
				&quot;warning&quot;: &quot;&quot;,&#xd;
				&quot;overtime&quot;: &quot;N&quot;,&#xd;
				&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
				&quot;createdDate&quot;: &quot;2018-05-08T16:00:00Z&quot;,&#xd;
				&quot;attachments&quot;: [],&#xd;
				&quot;withReceipt&quot;: true,&#xd;
				&quot;readonly&quot;: false,&#xd;
				&quot;businessCode&quot;: null,&#xd;
				&quot;createLocation&quot;: null,&#xd;
				&quot;createTime&quot;: &quot;${createTime}T15:07:00Z&quot;,&#xd;
				&quot;rejectType&quot;: null,&#xd;
				&quot;rejectReason&quot;: null,&#xd;
				&quot;approverId&quot;: null,&#xd;
				&quot;approvalStepId&quot;: null,&#xd;
				&quot;approvalOperates&quot;: null,&#xd;
				&quot;approver&quot;: null,&#xd;
				&quot;referenceId&quot;: null,&#xd;
				&quot;unitPrice&quot;: null,&#xd;
				&quot;number&quot;: null,&#xd;
				&quot;receiptFailType&quot;: null,&#xd;
				&quot;receiptFailReason&quot;: null,&#xd;
				&quot;valid&quot;: false,&#xd;
				&quot;receiptID&quot;: null,&#xd;
				&quot;cardSignType&quot;: null,&#xd;
				&quot;nonVATinclusiveAmount&quot;: null,&#xd;
				&quot;taxAmount&quot;: null,&#xd;
				&quot;receiptType&quot;: null,&#xd;
				&quot;receiptTypeNo&quot;: null,&#xd;
				&quot;invoiceCode&quot;: null,&#xd;
				&quot;invoiceNumber&quot;: null,&#xd;
				&quot;invoiceDate&quot;: null,&#xd;
				&quot;priceTaxAmount&quot;: null,&#xd;
				&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
				&quot;receiptGoodsID&quot;: null,&#xd;
				&quot;taxRate&quot;: null,&#xd;
				&quot;checkCode&quot;: null,&#xd;
				&quot;invoiceLabelDTOS&quot;: [],&#xd;
				&quot;invoiceLabels&quot;: [{&#xd;
					&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
					&quot;name&quot;: &quot;公司&quot;,&#xd;
					&quot;level&quot;: &quot;INFO&quot;,&#xd;
					&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
					&quot;toast&quot;: null,&#xd;
					&quot;category&quot;: null,&#xd;
					&quot;oldLabel&quot;: false&#xd;
				}],&#xd;
				&quot;companyOID&quot;: null,&#xd;
				&quot;invoiceInstead&quot;: true,&#xd;
				&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
				&quot;paymentType&quot;: 1002,&#xd;
				&quot;source&quot;: null,&#xd;
				&quot;ownerOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;checked&quot;: null,&#xd;
				&quot;createInvoice&quot;: true,&#xd;
				&quot;checkWarning&quot;: null,&#xd;
				&quot;digitalInvoice&quot;: null,&#xd;
				&quot;digitalInvoiceId&quot;: null,&#xd;
				&quot;actualCurrencyRate&quot;: 1,&#xd;
				&quot;originalActualCurrencyRate&quot;: 1,&#xd;
				&quot;companyCurrencyRate&quot;: 1,&#xd;
				&quot;actualCurrencyAmount&quot;: 1,&#xd;
				&quot;baseAmount&quot;: 1,&#xd;
				&quot;updateRate&quot;: false,&#xd;
				&quot;flightNo&quot;: null,&#xd;
				&quot;apportionUsed&quot;: false,&#xd;
				&quot;expenseApportion&quot;: null,&#xd;
				&quot;expenseReportOID&quot;: null,&#xd;
				&quot;amountChanged&quot;: null,&#xd;
				&quot;approvalStatus&quot;: null,&#xd;
				&quot;bankTransactionID&quot;: null,&#xd;
				&quot;expenseCreatedType&quot;: null,&#xd;
				&quot;overDue&quot;: null,&#xd;
				&quot;bankTransactionDetail&quot;: null,&#xd;
				&quot;baseCurrency&quot;: null,&#xd;
				&quot;subsidyRepeatedFlag&quot;: false,&#xd;
				&quot;orderAmount&quot;: 1,&#xd;
				&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
				&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
				&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
				&quot;receiptedStatus&quot;: 0,&#xd;
				&quot;vatInvoice&quot;: false,&#xd;
				&quot;stringCol3&quot;: null,&#xd;
				&quot;recognized&quot;: false,&#xd;
				&quot;stringCol1&quot;: &quot;{\&quot;address\&quot;:\&quot;华为西安研究所\&quot;,\&quot;longitude\&quot;:108.83902,\&quot;latitude\&quot;:34.19428}&quot;,&#xd;
				&quot;stringCol2&quot;: null&#xd;
			},&#xd;
			&quot;lastModifiedDate&quot;: &quot;${createTime}T15:07:00Z&quot;,&#xd;
			&quot;status&quot;: 1000&#xd;
		}, {&#xd;
			&quot;createdDate&quot;: &quot;${createTime}T15:07:03Z&quot;,&#xd;
			&quot;expenseReportInvoiceOID&quot;: &quot;1de5762b-ce09-409e-9eef-11867f2f0d71&quot;,&#xd;
			&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_team_1}&quot;,&#xd;
			&quot;invoiceView&quot;: {&#xd;
				&quot;invoiceOID&quot;: &quot;${invoiceOID_team_1}&quot;,&#xd;
				&quot;expenseTypeId&quot;: &quot;917666881950972827&quot;,&#xd;
				&quot;expenseTypeOID&quot;: &quot;a1da85e8-4745-40fb-9c5b-a4ded54de851&quot;,&#xd;
				&quot;expenseTypeName&quot;: &quot;娱乐&quot;,&#xd;
				&quot;crossCheckStatus&quot;: null,&#xd;
				&quot;expenseTypeKey&quot;: null,&#xd;
				&quot;expenseTypeIconName&quot;: &quot;teambuilding&quot;,&#xd;
				&quot;phoneNumber&quot;: null,&#xd;
				&quot;email&quot;: null,&#xd;
				&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/ad3d3df7-e75a-456c-bb54-99c4f97cec8c-teambuilding.png&quot;,&#xd;
				&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
				&quot;expenseTypeCategoryDTO&quot;: {&#xd;
					&quot;expenseTypeCategoryOID&quot;: &quot;c39ae68c-3f79-4c58-b655-8fbda51a9ba5&quot;,&#xd;
					&quot;name&quot;: &quot;费用类型&quot;,&#xd;
					&quot;code&quot;: null&#xd;
				},&#xd;
				&quot;costCenterItemOID&quot;: null,&#xd;
				&quot;costCenterItemName&quot;: null,&#xd;
				&quot;amount&quot;: 1,&#xd;
				&quot;originalAmount&quot;: 1,&#xd;
				&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;userOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;mobile&quot;: null,&#xd;
				&quot;employeeId&quot;: null,&#xd;
				&quot;data&quot;: [{&#xd;
					&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
					&quot;name&quot;: &quot;城市&quot;,&#xd;
					&quot;value&quot;: &quot;西安&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;city&quot;,&#xd;
					&quot;sequence&quot;: 1,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;54f72bee-fc83-41d2-8d94-200972f0891a&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;西安&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}, {&#xd;
					&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
					&quot;name&quot;: &quot;方式&quot;,&#xd;
					&quot;value&quot;: &quot;KTV&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;method&quot;,&#xd;
					&quot;sequence&quot;: 2,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;900020fc-0667-4ecf-bdc8-c4b3398b3fea&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;KTV&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}, {&#xd;
					&quot;fieldType&quot;: &quot;LONG&quot;,&#xd;
					&quot;name&quot;: &quot;人数&quot;,&#xd;
					&quot;value&quot;: &quot;3&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;head.count&quot;,&#xd;
					&quot;sequence&quot;: 3,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;f0de3e06-b563-493a-bcad-227bb4764e68&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;3&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}, {&#xd;
					&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
					&quot;name&quot;: &quot;对象&quot;,&#xd;
					&quot;value&quot;: &quot;a，b，c&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;person&quot;,&#xd;
					&quot;sequence&quot;: 4,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;e996e926-cc0f-4057-a7b5-4c9b5607757d&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;a，b，c&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}],&#xd;
				&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
				&quot;comment&quot;: &quot;娱乐报销&quot;,&#xd;
				&quot;warning&quot;: &quot;&quot;,&#xd;
				&quot;overtime&quot;: &quot;N&quot;,&#xd;
				&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
				&quot;createdDate&quot;: &quot;2018-05-08T16:00:00Z&quot;,&#xd;
				&quot;attachments&quot;: [],&#xd;
				&quot;withReceipt&quot;: true,&#xd;
				&quot;readonly&quot;: false,&#xd;
				&quot;businessCode&quot;: null,&#xd;
				&quot;createLocation&quot;: null,&#xd;
				&quot;createTime&quot;: &quot;${createTime}T15:07:03Z&quot;,&#xd;
				&quot;rejectType&quot;: null,&#xd;
				&quot;rejectReason&quot;: null,&#xd;
				&quot;approverId&quot;: null,&#xd;
				&quot;approvalStepId&quot;: null,&#xd;
				&quot;approvalOperates&quot;: null,&#xd;
				&quot;approver&quot;: null,&#xd;
				&quot;referenceId&quot;: null,&#xd;
				&quot;unitPrice&quot;: null,&#xd;
				&quot;number&quot;: null,&#xd;
				&quot;receiptFailType&quot;: null,&#xd;
				&quot;receiptFailReason&quot;: null,&#xd;
				&quot;valid&quot;: false,&#xd;
				&quot;receiptID&quot;: null,&#xd;
				&quot;cardSignType&quot;: null,&#xd;
				&quot;nonVATinclusiveAmount&quot;: null,&#xd;
				&quot;taxAmount&quot;: null,&#xd;
				&quot;receiptType&quot;: null,&#xd;
				&quot;receiptTypeNo&quot;: null,&#xd;
				&quot;invoiceCode&quot;: null,&#xd;
				&quot;invoiceNumber&quot;: null,&#xd;
				&quot;invoiceDate&quot;: null,&#xd;
				&quot;priceTaxAmount&quot;: null,&#xd;
				&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
				&quot;receiptGoodsID&quot;: null,&#xd;
				&quot;taxRate&quot;: null,&#xd;
				&quot;checkCode&quot;: null,&#xd;
				&quot;invoiceLabelDTOS&quot;: [],&#xd;
				&quot;invoiceLabels&quot;: [{&#xd;
					&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
					&quot;name&quot;: &quot;公司&quot;,&#xd;
					&quot;level&quot;: &quot;INFO&quot;,&#xd;
					&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
					&quot;toast&quot;: null,&#xd;
					&quot;category&quot;: null,&#xd;
					&quot;oldLabel&quot;: false&#xd;
				}],&#xd;
				&quot;companyOID&quot;: null,&#xd;
				&quot;invoiceInstead&quot;: true,&#xd;
				&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
				&quot;paymentType&quot;: 1002,&#xd;
				&quot;source&quot;: null,&#xd;
				&quot;ownerOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;checked&quot;: null,&#xd;
				&quot;createInvoice&quot;: true,&#xd;
				&quot;checkWarning&quot;: null,&#xd;
				&quot;digitalInvoice&quot;: null,&#xd;
				&quot;digitalInvoiceId&quot;: null,&#xd;
				&quot;actualCurrencyRate&quot;: 1,&#xd;
				&quot;originalActualCurrencyRate&quot;: 1,&#xd;
				&quot;companyCurrencyRate&quot;: 1,&#xd;
				&quot;actualCurrencyAmount&quot;: 1,&#xd;
				&quot;baseAmount&quot;: 1,&#xd;
				&quot;updateRate&quot;: false,&#xd;
				&quot;flightNo&quot;: null,&#xd;
				&quot;apportionUsed&quot;: false,&#xd;
				&quot;expenseApportion&quot;: null,&#xd;
				&quot;expenseReportOID&quot;: null,&#xd;
				&quot;amountChanged&quot;: null,&#xd;
				&quot;approvalStatus&quot;: null,&#xd;
				&quot;bankTransactionID&quot;: null,&#xd;
				&quot;expenseCreatedType&quot;: null,&#xd;
				&quot;overDue&quot;: null,&#xd;
				&quot;bankTransactionDetail&quot;: null,&#xd;
				&quot;baseCurrency&quot;: null,&#xd;
				&quot;subsidyRepeatedFlag&quot;: false,&#xd;
				&quot;orderAmount&quot;: 1,&#xd;
				&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
				&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
				&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
				&quot;receiptedStatus&quot;: 0,&#xd;
				&quot;vatInvoice&quot;: false,&#xd;
				&quot;stringCol3&quot;: &quot;a，b，c&quot;,&#xd;
				&quot;recognized&quot;: false,&#xd;
				&quot;stringCol1&quot;: &quot;西安&quot;,&#xd;
				&quot;stringCol2&quot;: null&#xd;
			},&#xd;
			&quot;lastModifiedDate&quot;: &quot;${createTime}T15:07:03Z&quot;,&#xd;
			&quot;status&quot;: 1000&#xd;
		}, {&#xd;
			&quot;createdDate&quot;: &quot;${createTime}T15:06:54Z&quot;,&#xd;
			&quot;expenseReportInvoiceOID&quot;: &quot;5facc80e-d142-4474-9f50-35af57c398ad&quot;,&#xd;
			&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_trans_1}&quot;,&#xd;
			&quot;invoiceView&quot;: {&#xd;
				&quot;invoiceOID&quot;: &quot;${invoiceOID_trans_1}&quot;,&#xd;
				&quot;expenseTypeId&quot;: &quot;917666881950972822&quot;,&#xd;
				&quot;expenseTypeOID&quot;: &quot;bb0a2d86-ad77-4fd9-9623-bfbd05788f8f&quot;,&#xd;
				&quot;expenseTypeName&quot;: &quot;交通&quot;,&#xd;
				&quot;crossCheckStatus&quot;: null,&#xd;
				&quot;expenseTypeKey&quot;: null,&#xd;
				&quot;expenseTypeIconName&quot;: &quot;transportation&quot;,&#xd;
				&quot;phoneNumber&quot;: null,&#xd;
				&quot;email&quot;: null,&#xd;
				&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/b53d8b6a-bfe2-44d4-befa-fa5ea1c061e5-transportation.png&quot;,&#xd;
				&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
				&quot;expenseTypeCategoryDTO&quot;: {&#xd;
					&quot;expenseTypeCategoryOID&quot;: &quot;c39ae68c-3f79-4c58-b655-8fbda51a9ba5&quot;,&#xd;
					&quot;name&quot;: &quot;费用类型&quot;,&#xd;
					&quot;code&quot;: null&#xd;
				},&#xd;
				&quot;costCenterItemOID&quot;: null,&#xd;
				&quot;costCenterItemName&quot;: null,&#xd;
				&quot;amount&quot;: 1,&#xd;
				&quot;originalAmount&quot;: 1,&#xd;
				&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;userOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;mobile&quot;: null,&#xd;
				&quot;employeeId&quot;: null,&#xd;
				&quot;data&quot;: [{&#xd;
					&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
					&quot;name&quot;: &quot;目的地&quot;,&#xd;
					&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;西安环普科技产业园\&quot;,\&quot;longitude\&quot;:108.84068,\&quot;latitude\&quot;:34.20974}&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;destination.location&quot;,&#xd;
					&quot;sequence&quot;: 3,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;04aad27b-bf03-4f18-855b-747455a838f4&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;{\&quot;address\&quot;:\&quot;西安环普科技产业园\&quot;,\&quot;longitude\&quot;:108.84068,\&quot;latitude\&quot;:34.20974}&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}, {&#xd;
					&quot;fieldType&quot;: &quot;DATETIME&quot;,&#xd;
					&quot;name&quot;: &quot;出发时间&quot;,&#xd;
					&quot;value&quot;: &quot;${createTime}T00:10:00Z&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;start.time&quot;,&#xd;
					&quot;sequence&quot;: 4,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;d125fd81-c3f7-41ce-962f-2970098d335b&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;${createTime}T00:10:00Z&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}, {&#xd;
					&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
					&quot;name&quot;: &quot;出发地&quot;,&#xd;
					&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;华为西安研究所\&quot;,\&quot;longitude\&quot;:108.83902,\&quot;latitude\&quot;:34.19428}&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;departure.location&quot;,&#xd;
					&quot;sequence&quot;: 2,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;ee9d9590-b1a0-4795-a188-051160e5f735&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;{\&quot;address\&quot;:\&quot;华为西安研究所\&quot;,\&quot;longitude\&quot;:108.83902,\&quot;latitude\&quot;:34.19428}&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}, {&#xd;
					&quot;fieldType&quot;: &quot;DATETIME&quot;,&#xd;
					&quot;name&quot;: &quot;到达时间&quot;,&#xd;
					&quot;value&quot;: &quot;${createTime}T00:30:00Z&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;end.time&quot;,&#xd;
					&quot;sequence&quot;: 5,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;a9d896e5-c59d-4ada-a4eb-08fddbc1fde7&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;${createTime}T00:30:00Z&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}, {&#xd;
					&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
					&quot;name&quot;: &quot;城市&quot;,&#xd;
					&quot;value&quot;: &quot;西安&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;city&quot;,&#xd;
					&quot;sequence&quot;: 1,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;22801bf9-f783-470c-8fbf-c2f50112b116&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;西安&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}],&#xd;
				&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
				&quot;comment&quot;: &quot;交通费报销&quot;,&#xd;
				&quot;warning&quot;: &quot;&quot;,&#xd;
				&quot;overtime&quot;: &quot;N&quot;,&#xd;
				&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
				&quot;createdDate&quot;: &quot;2018-05-08T16:00:00Z&quot;,&#xd;
				&quot;attachments&quot;: [],&#xd;
				&quot;withReceipt&quot;: true,&#xd;
				&quot;readonly&quot;: false,&#xd;
				&quot;businessCode&quot;: null,&#xd;
				&quot;createLocation&quot;: null,&#xd;
				&quot;createTime&quot;: &quot;${createTime}T15:06:49Z&quot;,&#xd;
				&quot;rejectType&quot;: null,&#xd;
				&quot;rejectReason&quot;: null,&#xd;
				&quot;approverId&quot;: null,&#xd;
				&quot;approvalStepId&quot;: null,&#xd;
				&quot;approvalOperates&quot;: null,&#xd;
				&quot;approver&quot;: null,&#xd;
				&quot;referenceId&quot;: null,&#xd;
				&quot;unitPrice&quot;: null,&#xd;
				&quot;number&quot;: null,&#xd;
				&quot;receiptFailType&quot;: null,&#xd;
				&quot;receiptFailReason&quot;: null,&#xd;
				&quot;valid&quot;: false,&#xd;
				&quot;receiptID&quot;: null,&#xd;
				&quot;cardSignType&quot;: null,&#xd;
				&quot;nonVATinclusiveAmount&quot;: null,&#xd;
				&quot;taxAmount&quot;: null,&#xd;
				&quot;receiptType&quot;: null,&#xd;
				&quot;receiptTypeNo&quot;: null,&#xd;
				&quot;invoiceCode&quot;: null,&#xd;
				&quot;invoiceNumber&quot;: null,&#xd;
				&quot;invoiceDate&quot;: null,&#xd;
				&quot;priceTaxAmount&quot;: null,&#xd;
				&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
				&quot;receiptGoodsID&quot;: null,&#xd;
				&quot;taxRate&quot;: null,&#xd;
				&quot;checkCode&quot;: null,&#xd;
				&quot;invoiceLabelDTOS&quot;: [],&#xd;
				&quot;invoiceLabels&quot;: [{&#xd;
					&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
					&quot;name&quot;: &quot;公司&quot;,&#xd;
					&quot;level&quot;: &quot;INFO&quot;,&#xd;
					&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
					&quot;toast&quot;: null,&#xd;
					&quot;category&quot;: null,&#xd;
					&quot;oldLabel&quot;: false&#xd;
				}],&#xd;
				&quot;companyOID&quot;: null,&#xd;
				&quot;invoiceInstead&quot;: true,&#xd;
				&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
				&quot;paymentType&quot;: 1002,&#xd;
				&quot;source&quot;: null,&#xd;
				&quot;ownerOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;checked&quot;: null,&#xd;
				&quot;createInvoice&quot;: true,&#xd;
				&quot;checkWarning&quot;: null,&#xd;
				&quot;digitalInvoice&quot;: null,&#xd;
				&quot;digitalInvoiceId&quot;: null,&#xd;
				&quot;actualCurrencyRate&quot;: 1,&#xd;
				&quot;originalActualCurrencyRate&quot;: 1,&#xd;
				&quot;companyCurrencyRate&quot;: 1,&#xd;
				&quot;actualCurrencyAmount&quot;: 1,&#xd;
				&quot;baseAmount&quot;: 1,&#xd;
				&quot;updateRate&quot;: false,&#xd;
				&quot;flightNo&quot;: null,&#xd;
				&quot;apportionUsed&quot;: false,&#xd;
				&quot;expenseApportion&quot;: null,&#xd;
				&quot;expenseReportOID&quot;: null,&#xd;
				&quot;amountChanged&quot;: null,&#xd;
				&quot;approvalStatus&quot;: null,&#xd;
				&quot;bankTransactionID&quot;: null,&#xd;
				&quot;expenseCreatedType&quot;: null,&#xd;
				&quot;overDue&quot;: null,&#xd;
				&quot;bankTransactionDetail&quot;: null,&#xd;
				&quot;baseCurrency&quot;: null,&#xd;
				&quot;subsidyRepeatedFlag&quot;: false,&#xd;
				&quot;orderAmount&quot;: 1,&#xd;
				&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
				&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
				&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
				&quot;receiptedStatus&quot;: 0,&#xd;
				&quot;vatInvoice&quot;: false,&#xd;
				&quot;stringCol3&quot;: &quot;{\&quot;address\&quot;:\&quot;西安环普科技产业园\&quot;,\&quot;longitude\&quot;:108.84068,\&quot;latitude\&quot;:34.20974}&quot;,&#xd;
				&quot;recognized&quot;: false,&#xd;
				&quot;stringCol1&quot;: &quot;西安&quot;,&#xd;
				&quot;stringCol2&quot;: null&#xd;
			},&#xd;
			&quot;lastModifiedDate&quot;: &quot;${createTime}T15:06:54Z&quot;,&#xd;
			&quot;status&quot;: 1000&#xd;
		}, {&#xd;
			&quot;createdDate&quot;: &quot;${createTime}T15:07:05Z&quot;,&#xd;
			&quot;expenseReportInvoiceOID&quot;: &quot;9e8b16f2-62c7-4457-aecc-3f80cf09c591&quot;,&#xd;
			&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_meetings_1}&quot;,&#xd;
			&quot;invoiceView&quot;: {&#xd;
				&quot;invoiceOID&quot;: &quot;${invoiceOID_meetings_1}&quot;,&#xd;
				&quot;expenseTypeId&quot;: &quot;917666881950972829&quot;,&#xd;
				&quot;expenseTypeOID&quot;: &quot;2748e317-5dde-4737-a2f1-48473a7e9d01&quot;,&#xd;
				&quot;expenseTypeName&quot;: &quot;会务&quot;,&#xd;
				&quot;crossCheckStatus&quot;: null,&#xd;
				&quot;expenseTypeKey&quot;: null,&#xd;
				&quot;expenseTypeIconName&quot;: &quot;meetings&quot;,&#xd;
				&quot;phoneNumber&quot;: null,&#xd;
				&quot;email&quot;: null,&#xd;
				&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/789dc17d-2c39-47d3-bea8-f83b6bb987e2-meetings.png&quot;,&#xd;
				&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
				&quot;expenseTypeCategoryDTO&quot;: {&#xd;
					&quot;expenseTypeCategoryOID&quot;: &quot;c39ae68c-3f79-4c58-b655-8fbda51a9ba5&quot;,&#xd;
					&quot;name&quot;: &quot;费用类型&quot;,&#xd;
					&quot;code&quot;: null&#xd;
				},&#xd;
				&quot;costCenterItemOID&quot;: null,&#xd;
				&quot;costCenterItemName&quot;: null,&#xd;
				&quot;amount&quot;: 1,&#xd;
				&quot;originalAmount&quot;: 1,&#xd;
				&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;userOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;mobile&quot;: null,&#xd;
				&quot;employeeId&quot;: null,&#xd;
				&quot;data&quot;: [{&#xd;
					&quot;fieldType&quot;: &quot;LONG&quot;,&#xd;
					&quot;name&quot;: &quot;人数&quot;,&#xd;
					&quot;value&quot;: &quot;1&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;head.count&quot;,&#xd;
					&quot;sequence&quot;: 3,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;7f5d1d77-ad45-4559-838f-dba0cfeea2bd&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;1&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}, {&#xd;
					&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
					&quot;name&quot;: &quot;地点&quot;,&#xd;
					&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;麦当劳(环普产业园店)\&quot;,\&quot;longitude\&quot;:108.83977,\&quot;latitude\&quot;:34.21055}&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;location&quot;,&#xd;
					&quot;sequence&quot;: 2,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;64feaae9-a402-49e7-b813-52b5aa51f63a&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;{\&quot;address\&quot;:\&quot;麦当劳(环普产业园店)\&quot;,\&quot;longitude\&quot;:108.83977,\&quot;latitude\&quot;:34.21055}&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}, {&#xd;
					&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
					&quot;name&quot;: &quot;城市&quot;,&#xd;
					&quot;value&quot;: &quot;西安&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;city&quot;,&#xd;
					&quot;sequence&quot;: 1,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;fee7cef8-35ca-407e-b645-d251c1a6fae5&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;西安&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}],&#xd;
				&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
				&quot;comment&quot;: &quot;会务费报销&quot;,&#xd;
				&quot;warning&quot;: &quot;&quot;,&#xd;
				&quot;overtime&quot;: &quot;N&quot;,&#xd;
				&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
				&quot;createdDate&quot;: &quot;2018-05-08T16:00:00Z&quot;,&#xd;
				&quot;attachments&quot;: [],&#xd;
				&quot;withReceipt&quot;: true,&#xd;
				&quot;readonly&quot;: false,&#xd;
				&quot;businessCode&quot;: null,&#xd;
				&quot;createLocation&quot;: null,&#xd;
				&quot;createTime&quot;: &quot;${createTime}T15:07:05Z&quot;,&#xd;
				&quot;rejectType&quot;: null,&#xd;
				&quot;rejectReason&quot;: null,&#xd;
				&quot;approverId&quot;: null,&#xd;
				&quot;approvalStepId&quot;: null,&#xd;
				&quot;approvalOperates&quot;: null,&#xd;
				&quot;approver&quot;: null,&#xd;
				&quot;referenceId&quot;: null,&#xd;
				&quot;unitPrice&quot;: null,&#xd;
				&quot;number&quot;: null,&#xd;
				&quot;receiptFailType&quot;: null,&#xd;
				&quot;receiptFailReason&quot;: null,&#xd;
				&quot;valid&quot;: false,&#xd;
				&quot;receiptID&quot;: null,&#xd;
				&quot;cardSignType&quot;: null,&#xd;
				&quot;nonVATinclusiveAmount&quot;: null,&#xd;
				&quot;taxAmount&quot;: null,&#xd;
				&quot;receiptType&quot;: null,&#xd;
				&quot;receiptTypeNo&quot;: null,&#xd;
				&quot;invoiceCode&quot;: null,&#xd;
				&quot;invoiceNumber&quot;: null,&#xd;
				&quot;invoiceDate&quot;: null,&#xd;
				&quot;priceTaxAmount&quot;: null,&#xd;
				&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
				&quot;receiptGoodsID&quot;: null,&#xd;
				&quot;taxRate&quot;: null,&#xd;
				&quot;checkCode&quot;: null,&#xd;
				&quot;invoiceLabelDTOS&quot;: [],&#xd;
				&quot;invoiceLabels&quot;: [{&#xd;
					&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
					&quot;name&quot;: &quot;公司&quot;,&#xd;
					&quot;level&quot;: &quot;INFO&quot;,&#xd;
					&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
					&quot;toast&quot;: null,&#xd;
					&quot;category&quot;: null,&#xd;
					&quot;oldLabel&quot;: false&#xd;
				}],&#xd;
				&quot;companyOID&quot;: null,&#xd;
				&quot;invoiceInstead&quot;: true,&#xd;
				&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
				&quot;paymentType&quot;: 1002,&#xd;
				&quot;source&quot;: null,&#xd;
				&quot;ownerOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;checked&quot;: null,&#xd;
				&quot;createInvoice&quot;: true,&#xd;
				&quot;checkWarning&quot;: null,&#xd;
				&quot;digitalInvoice&quot;: null,&#xd;
				&quot;digitalInvoiceId&quot;: null,&#xd;
				&quot;actualCurrencyRate&quot;: 1,&#xd;
				&quot;originalActualCurrencyRate&quot;: 1,&#xd;
				&quot;companyCurrencyRate&quot;: 1,&#xd;
				&quot;actualCurrencyAmount&quot;: 1,&#xd;
				&quot;baseAmount&quot;: 1,&#xd;
				&quot;updateRate&quot;: false,&#xd;
				&quot;flightNo&quot;: null,&#xd;
				&quot;apportionUsed&quot;: false,&#xd;
				&quot;expenseApportion&quot;: null,&#xd;
				&quot;expenseReportOID&quot;: null,&#xd;
				&quot;amountChanged&quot;: null,&#xd;
				&quot;approvalStatus&quot;: null,&#xd;
				&quot;bankTransactionID&quot;: null,&#xd;
				&quot;expenseCreatedType&quot;: null,&#xd;
				&quot;overDue&quot;: null,&#xd;
				&quot;bankTransactionDetail&quot;: null,&#xd;
				&quot;baseCurrency&quot;: null,&#xd;
				&quot;subsidyRepeatedFlag&quot;: false,&#xd;
				&quot;orderAmount&quot;: 1,&#xd;
				&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
				&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
				&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
				&quot;receiptedStatus&quot;: 0,&#xd;
				&quot;vatInvoice&quot;: false,&#xd;
				&quot;stringCol3&quot;: null,&#xd;
				&quot;recognized&quot;: false,&#xd;
				&quot;stringCol1&quot;: &quot;西安&quot;,&#xd;
				&quot;stringCol2&quot;: null&#xd;
			},&#xd;
			&quot;lastModifiedDate&quot;: &quot;${createTime}T15:07:05Z&quot;,&#xd;
			&quot;status&quot;: 1000&#xd;
		}, {&#xd;
			&quot;createdDate&quot;: &quot;${createTime}T15:07:07Z&quot;,&#xd;
			&quot;expenseReportInvoiceOID&quot;: &quot;342800ff-9e66-4a84-8fbd-ad40e8971692&quot;,&#xd;
			&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_hotel_1}&quot;,&#xd;
			&quot;invoiceView&quot;: {&#xd;
				&quot;invoiceOID&quot;: &quot;${invoiceOID_hotel_1}&quot;,&#xd;
				&quot;expenseTypeId&quot;: &quot;917666881950972831&quot;,&#xd;
				&quot;expenseTypeOID&quot;: &quot;89525729-917a-4330-8df0-135113051392&quot;,&#xd;
				&quot;expenseTypeName&quot;: &quot;酒店&quot;,&#xd;
				&quot;crossCheckStatus&quot;: null,&#xd;
				&quot;expenseTypeKey&quot;: null,&#xd;
				&quot;expenseTypeIconName&quot;: &quot;hotel&quot;,&#xd;
				&quot;phoneNumber&quot;: null,&#xd;
				&quot;email&quot;: null,&#xd;
				&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/9f7270f7-af07-4b34-95c5-87d8dc7f126b-hotel.png&quot;,&#xd;
				&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
				&quot;expenseTypeCategoryDTO&quot;: {&#xd;
					&quot;expenseTypeCategoryOID&quot;: &quot;c39ae68c-3f79-4c58-b655-8fbda51a9ba5&quot;,&#xd;
					&quot;name&quot;: &quot;费用类型&quot;,&#xd;
					&quot;code&quot;: null&#xd;
				},&#xd;
				&quot;costCenterItemOID&quot;: null,&#xd;
				&quot;costCenterItemName&quot;: null,&#xd;
				&quot;amount&quot;: 1,&#xd;
				&quot;originalAmount&quot;: 1,&#xd;
				&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;userOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;mobile&quot;: null,&#xd;
				&quot;employeeId&quot;: null,&#xd;
				&quot;data&quot;: [{&#xd;
					&quot;fieldType&quot;: &quot;LONG&quot;,&#xd;
					&quot;name&quot;: &quot;入住天数&quot;,&#xd;
					&quot;value&quot;: &quot;1&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;days&quot;,&#xd;
					&quot;sequence&quot;: 3,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;832bfc9e-50b4-4f61-afb1-2d0cdb49d444&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;1&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}, {&#xd;
					&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
					&quot;name&quot;: &quot;酒店名称&quot;,&#xd;
					&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;软件新城软件公寓\&quot;,\&quot;longitude\&quot;:108.83882,\&quot;latitude\&quot;:34.21698}&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;hotel.name&quot;,&#xd;
					&quot;sequence&quot;: 2,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;40f4d31e-02de-4378-b007-47ce6bcdd350&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;{\&quot;address\&quot;:\&quot;软件新城软件公寓\&quot;,\&quot;longitude\&quot;:108.83882,\&quot;latitude\&quot;:34.21698}&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}, {&#xd;
					&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
					&quot;name&quot;: &quot;城市&quot;,&#xd;
					&quot;value&quot;: &quot;西安&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;city&quot;,&#xd;
					&quot;sequence&quot;: 1,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;ea60e6ec-2916-4288-9ad1-5384427f82aa&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;西安&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}],&#xd;
				&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
				&quot;comment&quot;: &quot;酒店报销&quot;,&#xd;
				&quot;warning&quot;: &quot;&quot;,&#xd;
				&quot;overtime&quot;: &quot;N&quot;,&#xd;
				&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
				&quot;createdDate&quot;: &quot;2018-05-08T16:00:00Z&quot;,&#xd;
				&quot;attachments&quot;: [],&#xd;
				&quot;withReceipt&quot;: true,&#xd;
				&quot;readonly&quot;: false,&#xd;
				&quot;businessCode&quot;: null,&#xd;
				&quot;createLocation&quot;: null,&#xd;
				&quot;createTime&quot;: &quot;${createTime}T15:07:07Z&quot;,&#xd;
				&quot;rejectType&quot;: null,&#xd;
				&quot;rejectReason&quot;: null,&#xd;
				&quot;approverId&quot;: null,&#xd;
				&quot;approvalStepId&quot;: null,&#xd;
				&quot;approvalOperates&quot;: null,&#xd;
				&quot;approver&quot;: null,&#xd;
				&quot;referenceId&quot;: null,&#xd;
				&quot;unitPrice&quot;: null,&#xd;
				&quot;number&quot;: null,&#xd;
				&quot;receiptFailType&quot;: null,&#xd;
				&quot;receiptFailReason&quot;: null,&#xd;
				&quot;valid&quot;: false,&#xd;
				&quot;receiptID&quot;: null,&#xd;
				&quot;cardSignType&quot;: null,&#xd;
				&quot;nonVATinclusiveAmount&quot;: null,&#xd;
				&quot;taxAmount&quot;: null,&#xd;
				&quot;receiptType&quot;: null,&#xd;
				&quot;receiptTypeNo&quot;: null,&#xd;
				&quot;invoiceCode&quot;: null,&#xd;
				&quot;invoiceNumber&quot;: null,&#xd;
				&quot;invoiceDate&quot;: null,&#xd;
				&quot;priceTaxAmount&quot;: null,&#xd;
				&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
				&quot;receiptGoodsID&quot;: null,&#xd;
				&quot;taxRate&quot;: null,&#xd;
				&quot;checkCode&quot;: null,&#xd;
				&quot;invoiceLabelDTOS&quot;: [],&#xd;
				&quot;invoiceLabels&quot;: [{&#xd;
					&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
					&quot;name&quot;: &quot;公司&quot;,&#xd;
					&quot;level&quot;: &quot;INFO&quot;,&#xd;
					&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
					&quot;toast&quot;: null,&#xd;
					&quot;category&quot;: null,&#xd;
					&quot;oldLabel&quot;: false&#xd;
				}],&#xd;
				&quot;companyOID&quot;: null,&#xd;
				&quot;invoiceInstead&quot;: true,&#xd;
				&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
				&quot;paymentType&quot;: 1002,&#xd;
				&quot;source&quot;: null,&#xd;
				&quot;ownerOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;checked&quot;: null,&#xd;
				&quot;createInvoice&quot;: true,&#xd;
				&quot;checkWarning&quot;: null,&#xd;
				&quot;digitalInvoice&quot;: null,&#xd;
				&quot;digitalInvoiceId&quot;: null,&#xd;
				&quot;actualCurrencyRate&quot;: 1,&#xd;
				&quot;originalActualCurrencyRate&quot;: 1,&#xd;
				&quot;companyCurrencyRate&quot;: 1,&#xd;
				&quot;actualCurrencyAmount&quot;: 1,&#xd;
				&quot;baseAmount&quot;: 1,&#xd;
				&quot;updateRate&quot;: false,&#xd;
				&quot;flightNo&quot;: null,&#xd;
				&quot;apportionUsed&quot;: false,&#xd;
				&quot;expenseApportion&quot;: null,&#xd;
				&quot;expenseReportOID&quot;: null,&#xd;
				&quot;amountChanged&quot;: null,&#xd;
				&quot;approvalStatus&quot;: null,&#xd;
				&quot;bankTransactionID&quot;: null,&#xd;
				&quot;expenseCreatedType&quot;: null,&#xd;
				&quot;overDue&quot;: null,&#xd;
				&quot;bankTransactionDetail&quot;: null,&#xd;
				&quot;baseCurrency&quot;: null,&#xd;
				&quot;subsidyRepeatedFlag&quot;: false,&#xd;
				&quot;orderAmount&quot;: 1,&#xd;
				&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
				&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
				&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
				&quot;receiptedStatus&quot;: 0,&#xd;
				&quot;vatInvoice&quot;: false,&#xd;
				&quot;stringCol3&quot;: null,&#xd;
				&quot;recognized&quot;: false,&#xd;
				&quot;stringCol1&quot;: &quot;西安&quot;,&#xd;
				&quot;stringCol2&quot;: null&#xd;
			},&#xd;
			&quot;lastModifiedDate&quot;: &quot;${createTime}T15:07:07Z&quot;,&#xd;
			&quot;status&quot;: 1000&#xd;
		}, {&#xd;
			&quot;createdDate&quot;: &quot;${createTime}T15:07:16Z&quot;,&#xd;
			&quot;expenseReportInvoiceOID&quot;: &quot;ed64a11f-a11c-46d0-a966-f41c866dc50d&quot;,&#xd;
			&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_examination_1}&quot;,&#xd;
			&quot;invoiceView&quot;: {&#xd;
				&quot;invoiceOID&quot;: &quot;${invoiceOID_examination_1}&quot;,&#xd;
				&quot;expenseTypeId&quot;: &quot;917666881950972835&quot;,&#xd;
				&quot;expenseTypeOID&quot;: &quot;41733b8b-d4fb-40ac-b761-e9ecc58e37b4&quot;,&#xd;
				&quot;expenseTypeName&quot;: &quot;体检&quot;,&#xd;
				&quot;crossCheckStatus&quot;: null,&#xd;
				&quot;expenseTypeKey&quot;: null,&#xd;
				&quot;expenseTypeIconName&quot;: &quot;examination&quot;,&#xd;
				&quot;phoneNumber&quot;: null,&#xd;
				&quot;email&quot;: null,&#xd;
				&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/95dfe246-ac4a-4ed6-afd5-6d0c4a122087-examination.png&quot;,&#xd;
				&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
				&quot;expenseTypeCategoryDTO&quot;: {&#xd;
					&quot;expenseTypeCategoryOID&quot;: &quot;c39ae68c-3f79-4c58-b655-8fbda51a9ba5&quot;,&#xd;
					&quot;name&quot;: &quot;费用类型&quot;,&#xd;
					&quot;code&quot;: null&#xd;
				},&#xd;
				&quot;costCenterItemOID&quot;: null,&#xd;
				&quot;costCenterItemName&quot;: null,&#xd;
				&quot;amount&quot;: 1,&#xd;
				&quot;originalAmount&quot;: 1,&#xd;
				&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;userOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;mobile&quot;: null,&#xd;
				&quot;employeeId&quot;: null,&#xd;
				&quot;data&quot;: [{&#xd;
					&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
					&quot;name&quot;: &quot;城市&quot;,&#xd;
					&quot;value&quot;: &quot;西安&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;city&quot;,&#xd;
					&quot;sequence&quot;: 1,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;25809691-33d0-4053-8805-b5c291bc0370&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;西安&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}],&#xd;
				&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
				&quot;comment&quot;: &quot;体检费报销&quot;,&#xd;
				&quot;warning&quot;: &quot;&quot;,&#xd;
				&quot;overtime&quot;: &quot;N&quot;,&#xd;
				&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
				&quot;createdDate&quot;: &quot;2018-05-08T16:00:00Z&quot;,&#xd;
				&quot;attachments&quot;: [],&#xd;
				&quot;withReceipt&quot;: true,&#xd;
				&quot;readonly&quot;: false,&#xd;
				&quot;businessCode&quot;: null,&#xd;
				&quot;createLocation&quot;: null,&#xd;
				&quot;createTime&quot;: &quot;${createTime}T15:07:16Z&quot;,&#xd;
				&quot;rejectType&quot;: null,&#xd;
				&quot;rejectReason&quot;: null,&#xd;
				&quot;approverId&quot;: null,&#xd;
				&quot;approvalStepId&quot;: null,&#xd;
				&quot;approvalOperates&quot;: null,&#xd;
				&quot;approver&quot;: null,&#xd;
				&quot;referenceId&quot;: null,&#xd;
				&quot;unitPrice&quot;: null,&#xd;
				&quot;number&quot;: null,&#xd;
				&quot;receiptFailType&quot;: null,&#xd;
				&quot;receiptFailReason&quot;: null,&#xd;
				&quot;valid&quot;: false,&#xd;
				&quot;receiptID&quot;: null,&#xd;
				&quot;cardSignType&quot;: null,&#xd;
				&quot;nonVATinclusiveAmount&quot;: null,&#xd;
				&quot;taxAmount&quot;: null,&#xd;
				&quot;receiptType&quot;: null,&#xd;
				&quot;receiptTypeNo&quot;: null,&#xd;
				&quot;invoiceCode&quot;: null,&#xd;
				&quot;invoiceNumber&quot;: null,&#xd;
				&quot;invoiceDate&quot;: null,&#xd;
				&quot;priceTaxAmount&quot;: null,&#xd;
				&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
				&quot;receiptGoodsID&quot;: null,&#xd;
				&quot;taxRate&quot;: null,&#xd;
				&quot;checkCode&quot;: null,&#xd;
				&quot;invoiceLabelDTOS&quot;: [],&#xd;
				&quot;invoiceLabels&quot;: [{&#xd;
					&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
					&quot;name&quot;: &quot;公司&quot;,&#xd;
					&quot;level&quot;: &quot;INFO&quot;,&#xd;
					&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
					&quot;toast&quot;: null,&#xd;
					&quot;category&quot;: null,&#xd;
					&quot;oldLabel&quot;: false&#xd;
				}],&#xd;
				&quot;companyOID&quot;: null,&#xd;
				&quot;invoiceInstead&quot;: true,&#xd;
				&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
				&quot;paymentType&quot;: 1002,&#xd;
				&quot;source&quot;: null,&#xd;
				&quot;ownerOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;checked&quot;: null,&#xd;
				&quot;createInvoice&quot;: true,&#xd;
				&quot;checkWarning&quot;: null,&#xd;
				&quot;digitalInvoice&quot;: null,&#xd;
				&quot;digitalInvoiceId&quot;: null,&#xd;
				&quot;actualCurrencyRate&quot;: 1,&#xd;
				&quot;originalActualCurrencyRate&quot;: 1,&#xd;
				&quot;companyCurrencyRate&quot;: 1,&#xd;
				&quot;actualCurrencyAmount&quot;: 1,&#xd;
				&quot;baseAmount&quot;: 1,&#xd;
				&quot;updateRate&quot;: false,&#xd;
				&quot;flightNo&quot;: null,&#xd;
				&quot;apportionUsed&quot;: false,&#xd;
				&quot;expenseApportion&quot;: null,&#xd;
				&quot;expenseReportOID&quot;: null,&#xd;
				&quot;amountChanged&quot;: null,&#xd;
				&quot;approvalStatus&quot;: null,&#xd;
				&quot;bankTransactionID&quot;: null,&#xd;
				&quot;expenseCreatedType&quot;: null,&#xd;
				&quot;overDue&quot;: null,&#xd;
				&quot;bankTransactionDetail&quot;: null,&#xd;
				&quot;baseCurrency&quot;: null,&#xd;
				&quot;subsidyRepeatedFlag&quot;: false,&#xd;
				&quot;orderAmount&quot;: 1,&#xd;
				&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
				&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
				&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
				&quot;receiptedStatus&quot;: 0,&#xd;
				&quot;vatInvoice&quot;: false,&#xd;
				&quot;stringCol3&quot;: null,&#xd;
				&quot;recognized&quot;: false,&#xd;
				&quot;stringCol1&quot;: &quot;西安&quot;,&#xd;
				&quot;stringCol2&quot;: null&#xd;
			},&#xd;
			&quot;lastModifiedDate&quot;: &quot;${createTime}T15:07:16Z&quot;,&#xd;
			&quot;status&quot;: 1000&#xd;
		}, {&#xd;
			&quot;createdDate&quot;: &quot;${createTime}T15:06:59Z&quot;,&#xd;
			&quot;expenseReportInvoiceOID&quot;: &quot;18340f09-bd0a-412c-b9e6-c16c9d7e99ea&quot;,&#xd;
			&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_air_1}&quot;,&#xd;
			&quot;invoiceView&quot;: {&#xd;
				&quot;invoiceOID&quot;: &quot;${invoiceOID_air_1}&quot;,&#xd;
				&quot;expenseTypeId&quot;: &quot;917666881950972823&quot;,&#xd;
				&quot;expenseTypeOID&quot;: &quot;ac4a58c1-0f62-4966-8bf2-f287c9590a73&quot;,&#xd;
				&quot;expenseTypeName&quot;: &quot;机票&quot;,&#xd;
				&quot;crossCheckStatus&quot;: null,&#xd;
				&quot;expenseTypeKey&quot;: null,&#xd;
				&quot;expenseTypeIconName&quot;: &quot;airTickets&quot;,&#xd;
				&quot;phoneNumber&quot;: null,&#xd;
				&quot;email&quot;: null,&#xd;
				&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/39433f4e-02fb-4abe-99b2-e1cf55ab4518-airTickets.png&quot;,&#xd;
				&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
				&quot;expenseTypeCategoryDTO&quot;: {&#xd;
					&quot;expenseTypeCategoryOID&quot;: &quot;c39ae68c-3f79-4c58-b655-8fbda51a9ba5&quot;,&#xd;
					&quot;name&quot;: &quot;费用类型&quot;,&#xd;
					&quot;code&quot;: null&#xd;
				},&#xd;
				&quot;costCenterItemOID&quot;: null,&#xd;
				&quot;costCenterItemName&quot;: null,&#xd;
				&quot;amount&quot;: 1,&#xd;
				&quot;originalAmount&quot;: 1,&#xd;
				&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;userOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;mobile&quot;: null,&#xd;
				&quot;employeeId&quot;: null,&#xd;
				&quot;data&quot;: [{&#xd;
					&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
					&quot;name&quot;: &quot;目的地&quot;,&#xd;
					&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;上海虹桥国际机场\&quot;,\&quot;longitude\&quot;:121.3376,\&quot;latitude\&quot;:31.19668}&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;destination.location&quot;,&#xd;
					&quot;sequence&quot;: 1,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;8c88831d-e3e3-48f9-ac7e-e48194ebf8fc&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;{\&quot;address\&quot;:\&quot;上海虹桥国际机场\&quot;,\&quot;longitude\&quot;:121.3376,\&quot;latitude\&quot;:31.19668}&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}, {&#xd;
					&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
					&quot;name&quot;: &quot;出发地&quot;,&#xd;
					&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;西安咸阳国际机场\&quot;,\&quot;longitude\&quot;:108.761268287,\&quot;latitude\&quot;:34.435148685}&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;departure.location&quot;,&#xd;
					&quot;sequence&quot;: 0,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;60e52468-70a9-4e4f-a831-3271c9ed6a71&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;{\&quot;address\&quot;:\&quot;西安咸阳国际机场\&quot;,\&quot;longitude\&quot;:108.761268287,\&quot;latitude\&quot;:34.435148685}&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}],&#xd;
				&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
				&quot;comment&quot;: &quot;飞机票报销&quot;,&#xd;
				&quot;warning&quot;: &quot;&quot;,&#xd;
				&quot;overtime&quot;: &quot;N&quot;,&#xd;
				&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
				&quot;createdDate&quot;: &quot;2018-05-08T16:00:00Z&quot;,&#xd;
				&quot;attachments&quot;: [],&#xd;
				&quot;withReceipt&quot;: true,&#xd;
				&quot;readonly&quot;: false,&#xd;
				&quot;businessCode&quot;: null,&#xd;
				&quot;createLocation&quot;: null,&#xd;
				&quot;createTime&quot;: &quot;${createTime}T15:06:59Z&quot;,&#xd;
				&quot;rejectType&quot;: null,&#xd;
				&quot;rejectReason&quot;: null,&#xd;
				&quot;approverId&quot;: null,&#xd;
				&quot;approvalStepId&quot;: null,&#xd;
				&quot;approvalOperates&quot;: null,&#xd;
				&quot;approver&quot;: null,&#xd;
				&quot;referenceId&quot;: null,&#xd;
				&quot;unitPrice&quot;: null,&#xd;
				&quot;number&quot;: null,&#xd;
				&quot;receiptFailType&quot;: null,&#xd;
				&quot;receiptFailReason&quot;: null,&#xd;
				&quot;valid&quot;: false,&#xd;
				&quot;receiptID&quot;: null,&#xd;
				&quot;cardSignType&quot;: null,&#xd;
				&quot;nonVATinclusiveAmount&quot;: null,&#xd;
				&quot;taxAmount&quot;: null,&#xd;
				&quot;receiptType&quot;: null,&#xd;
				&quot;receiptTypeNo&quot;: null,&#xd;
				&quot;invoiceCode&quot;: null,&#xd;
				&quot;invoiceNumber&quot;: null,&#xd;
				&quot;invoiceDate&quot;: null,&#xd;
				&quot;priceTaxAmount&quot;: null,&#xd;
				&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
				&quot;receiptGoodsID&quot;: null,&#xd;
				&quot;taxRate&quot;: null,&#xd;
				&quot;checkCode&quot;: null,&#xd;
				&quot;invoiceLabelDTOS&quot;: [],&#xd;
				&quot;invoiceLabels&quot;: [{&#xd;
					&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
					&quot;name&quot;: &quot;公司&quot;,&#xd;
					&quot;level&quot;: &quot;INFO&quot;,&#xd;
					&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
					&quot;toast&quot;: null,&#xd;
					&quot;category&quot;: null,&#xd;
					&quot;oldLabel&quot;: false&#xd;
				}],&#xd;
				&quot;companyOID&quot;: null,&#xd;
				&quot;invoiceInstead&quot;: true,&#xd;
				&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
				&quot;paymentType&quot;: 1002,&#xd;
				&quot;source&quot;: null,&#xd;
				&quot;ownerOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;checked&quot;: null,&#xd;
				&quot;createInvoice&quot;: true,&#xd;
				&quot;checkWarning&quot;: null,&#xd;
				&quot;digitalInvoice&quot;: null,&#xd;
				&quot;digitalInvoiceId&quot;: null,&#xd;
				&quot;actualCurrencyRate&quot;: 1,&#xd;
				&quot;originalActualCurrencyRate&quot;: 1,&#xd;
				&quot;companyCurrencyRate&quot;: 1,&#xd;
				&quot;actualCurrencyAmount&quot;: 1,&#xd;
				&quot;baseAmount&quot;: 1,&#xd;
				&quot;updateRate&quot;: false,&#xd;
				&quot;flightNo&quot;: null,&#xd;
				&quot;apportionUsed&quot;: true,&#xd;
				&quot;expenseApportion&quot;: null,&#xd;
				&quot;expenseReportOID&quot;: null,&#xd;
				&quot;amountChanged&quot;: null,&#xd;
				&quot;approvalStatus&quot;: null,&#xd;
				&quot;bankTransactionID&quot;: null,&#xd;
				&quot;expenseCreatedType&quot;: null,&#xd;
				&quot;overDue&quot;: null,&#xd;
				&quot;bankTransactionDetail&quot;: null,&#xd;
				&quot;baseCurrency&quot;: null,&#xd;
				&quot;subsidyRepeatedFlag&quot;: false,&#xd;
				&quot;orderAmount&quot;: 1,&#xd;
				&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
				&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
				&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
				&quot;receiptedStatus&quot;: 0,&#xd;
				&quot;vatInvoice&quot;: false,&#xd;
				&quot;stringCol3&quot;: null,&#xd;
				&quot;recognized&quot;: false,&#xd;
				&quot;stringCol1&quot;: &quot;{\&quot;address\&quot;:\&quot;西安咸阳国际机场\&quot;,\&quot;longitude\&quot;:108.761268287,\&quot;latitude\&quot;:34.435148685}&quot;,&#xd;
				&quot;stringCol2&quot;: null&#xd;
			},&#xd;
			&quot;lastModifiedDate&quot;: &quot;${createTime}T15:06:59Z&quot;,&#xd;
			&quot;status&quot;: 1000&#xd;
		}, {&#xd;
			&quot;createdDate&quot;: &quot;${createTime}T15:07:09Z&quot;,&#xd;
			&quot;expenseReportInvoiceOID&quot;: &quot;fdcfc63f-52be-43fb-9b2e-0aa3b9dd8498&quot;,&#xd;
			&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_gasoline_1}&quot;,&#xd;
			&quot;invoiceView&quot;: {&#xd;
				&quot;invoiceOID&quot;: &quot;${invoiceOID_gasoline_1}&quot;,&#xd;
				&quot;expenseTypeId&quot;: &quot;917666881950972833&quot;,&#xd;
				&quot;expenseTypeOID&quot;: &quot;87e75152-0d45-49a7-8138-39240b17c750&quot;,&#xd;
				&quot;expenseTypeName&quot;: &quot;汽油&quot;,&#xd;
				&quot;crossCheckStatus&quot;: null,&#xd;
				&quot;expenseTypeKey&quot;: null,&#xd;
				&quot;expenseTypeIconName&quot;: &quot;gasoline&quot;,&#xd;
				&quot;phoneNumber&quot;: null,&#xd;
				&quot;email&quot;: null,&#xd;
				&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/013c6c3b-f3a2-4f42-b347-9066c177f783-gasoline.png&quot;,&#xd;
				&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
				&quot;expenseTypeCategoryDTO&quot;: {&#xd;
					&quot;expenseTypeCategoryOID&quot;: &quot;c39ae68c-3f79-4c58-b655-8fbda51a9ba5&quot;,&#xd;
					&quot;name&quot;: &quot;费用类型&quot;,&#xd;
					&quot;code&quot;: null&#xd;
				},&#xd;
				&quot;costCenterItemOID&quot;: null,&#xd;
				&quot;costCenterItemName&quot;: null,&#xd;
				&quot;amount&quot;: 1,&#xd;
				&quot;originalAmount&quot;: 1,&#xd;
				&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;userOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;mobile&quot;: null,&#xd;
				&quot;employeeId&quot;: null,&#xd;
				&quot;data&quot;: [],&#xd;
				&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
				&quot;comment&quot;: &quot;油费报销&quot;,&#xd;
				&quot;warning&quot;: &quot;&quot;,&#xd;
				&quot;overtime&quot;: &quot;N&quot;,&#xd;
				&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
				&quot;createdDate&quot;: &quot;2018-05-08T16:00:00Z&quot;,&#xd;
				&quot;attachments&quot;: [],&#xd;
				&quot;withReceipt&quot;: true,&#xd;
				&quot;readonly&quot;: false,&#xd;
				&quot;businessCode&quot;: null,&#xd;
				&quot;createLocation&quot;: null,&#xd;
				&quot;createTime&quot;: &quot;${createTime}T15:07:09Z&quot;,&#xd;
				&quot;rejectType&quot;: null,&#xd;
				&quot;rejectReason&quot;: null,&#xd;
				&quot;approverId&quot;: null,&#xd;
				&quot;approvalStepId&quot;: null,&#xd;
				&quot;approvalOperates&quot;: null,&#xd;
				&quot;approver&quot;: null,&#xd;
				&quot;referenceId&quot;: null,&#xd;
				&quot;unitPrice&quot;: null,&#xd;
				&quot;number&quot;: null,&#xd;
				&quot;receiptFailType&quot;: null,&#xd;
				&quot;receiptFailReason&quot;: null,&#xd;
				&quot;valid&quot;: false,&#xd;
				&quot;receiptID&quot;: null,&#xd;
				&quot;cardSignType&quot;: null,&#xd;
				&quot;nonVATinclusiveAmount&quot;: null,&#xd;
				&quot;taxAmount&quot;: null,&#xd;
				&quot;receiptType&quot;: null,&#xd;
				&quot;receiptTypeNo&quot;: null,&#xd;
				&quot;invoiceCode&quot;: null,&#xd;
				&quot;invoiceNumber&quot;: null,&#xd;
				&quot;invoiceDate&quot;: null,&#xd;
				&quot;priceTaxAmount&quot;: null,&#xd;
				&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
				&quot;receiptGoodsID&quot;: null,&#xd;
				&quot;taxRate&quot;: null,&#xd;
				&quot;checkCode&quot;: null,&#xd;
				&quot;invoiceLabelDTOS&quot;: [],&#xd;
				&quot;invoiceLabels&quot;: [{&#xd;
					&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
					&quot;name&quot;: &quot;公司&quot;,&#xd;
					&quot;level&quot;: &quot;INFO&quot;,&#xd;
					&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
					&quot;toast&quot;: null,&#xd;
					&quot;category&quot;: null,&#xd;
					&quot;oldLabel&quot;: false&#xd;
				}],&#xd;
				&quot;companyOID&quot;: null,&#xd;
				&quot;invoiceInstead&quot;: true,&#xd;
				&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
				&quot;paymentType&quot;: 1002,&#xd;
				&quot;source&quot;: null,&#xd;
				&quot;ownerOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;checked&quot;: null,&#xd;
				&quot;createInvoice&quot;: true,&#xd;
				&quot;checkWarning&quot;: null,&#xd;
				&quot;digitalInvoice&quot;: null,&#xd;
				&quot;digitalInvoiceId&quot;: null,&#xd;
				&quot;actualCurrencyRate&quot;: 1,&#xd;
				&quot;originalActualCurrencyRate&quot;: 1,&#xd;
				&quot;companyCurrencyRate&quot;: 1,&#xd;
				&quot;actualCurrencyAmount&quot;: 1,&#xd;
				&quot;baseAmount&quot;: 1,&#xd;
				&quot;updateRate&quot;: false,&#xd;
				&quot;flightNo&quot;: null,&#xd;
				&quot;apportionUsed&quot;: false,&#xd;
				&quot;expenseApportion&quot;: null,&#xd;
				&quot;expenseReportOID&quot;: null,&#xd;
				&quot;amountChanged&quot;: null,&#xd;
				&quot;approvalStatus&quot;: null,&#xd;
				&quot;bankTransactionID&quot;: null,&#xd;
				&quot;expenseCreatedType&quot;: null,&#xd;
				&quot;overDue&quot;: null,&#xd;
				&quot;bankTransactionDetail&quot;: null,&#xd;
				&quot;baseCurrency&quot;: null,&#xd;
				&quot;subsidyRepeatedFlag&quot;: false,&#xd;
				&quot;orderAmount&quot;: 1,&#xd;
				&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
				&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
				&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
				&quot;receiptedStatus&quot;: 0,&#xd;
				&quot;vatInvoice&quot;: false,&#xd;
				&quot;stringCol3&quot;: null,&#xd;
				&quot;recognized&quot;: false,&#xd;
				&quot;stringCol1&quot;: null,&#xd;
				&quot;stringCol2&quot;: null&#xd;
			},&#xd;
			&quot;lastModifiedDate&quot;: &quot;${createTime}T15:07:09Z&quot;,&#xd;
			&quot;status&quot;: 1000&#xd;
		}, {&#xd;
			&quot;createdDate&quot;: &quot;${createTime}T15:07:06Z&quot;,&#xd;
			&quot;expenseReportInvoiceOID&quot;: &quot;7f3ddbbc-e2ea-4d4b-8d8b-a04a311a04ad&quot;,&#xd;
			&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_communication_1}&quot;,&#xd;
			&quot;invoiceView&quot;: {&#xd;
				&quot;invoiceOID&quot;: &quot;${invoiceOID_communication_1}&quot;,&#xd;
				&quot;expenseTypeId&quot;: &quot;917666881950972830&quot;,&#xd;
				&quot;expenseTypeOID&quot;: &quot;4360c466-8270-421a-93c8-43d308a1eba0&quot;,&#xd;
				&quot;expenseTypeName&quot;: &quot;通讯&quot;,&#xd;
				&quot;crossCheckStatus&quot;: null,&#xd;
				&quot;expenseTypeKey&quot;: null,&#xd;
				&quot;expenseTypeIconName&quot;: &quot;communication&quot;,&#xd;
				&quot;phoneNumber&quot;: null,&#xd;
				&quot;email&quot;: null,&#xd;
				&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/20cb45d3-6c43-4603-a59a-bca9249b0132-communication.png&quot;,&#xd;
				&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
				&quot;expenseTypeCategoryDTO&quot;: {&#xd;
					&quot;expenseTypeCategoryOID&quot;: &quot;c39ae68c-3f79-4c58-b655-8fbda51a9ba5&quot;,&#xd;
					&quot;name&quot;: &quot;费用类型&quot;,&#xd;
					&quot;code&quot;: null&#xd;
				},&#xd;
				&quot;costCenterItemOID&quot;: null,&#xd;
				&quot;costCenterItemName&quot;: null,&#xd;
				&quot;amount&quot;: 1,&#xd;
				&quot;originalAmount&quot;: 1,&#xd;
				&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;userOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;mobile&quot;: null,&#xd;
				&quot;employeeId&quot;: null,&#xd;
				&quot;data&quot;: [{&#xd;
					&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
					&quot;name&quot;: &quot;电话号码&quot;,&#xd;
					&quot;value&quot;: &quot;13700000021&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;phone.number&quot;,&#xd;
					&quot;sequence&quot;: 2,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;c56c7e1e-2fc9-4f31-8d6e-f1b67c4f1b2d&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;13700000021&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}, {&#xd;
					&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
					&quot;name&quot;: &quot;城市&quot;,&#xd;
					&quot;value&quot;: &quot;西安&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;city&quot;,&#xd;
					&quot;sequence&quot;: 1,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;576eae33-a5bf-408a-b967-e247c28c53df&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;西安&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}],&#xd;
				&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
				&quot;comment&quot;: &quot;通讯费报销&quot;,&#xd;
				&quot;warning&quot;: &quot;&quot;,&#xd;
				&quot;overtime&quot;: &quot;N&quot;,&#xd;
				&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
				&quot;createdDate&quot;: &quot;2018-05-08T16:00:00Z&quot;,&#xd;
				&quot;attachments&quot;: [],&#xd;
				&quot;withReceipt&quot;: true,&#xd;
				&quot;readonly&quot;: false,&#xd;
				&quot;businessCode&quot;: null,&#xd;
				&quot;createLocation&quot;: null,&#xd;
				&quot;createTime&quot;: &quot;${createTime}T15:07:06Z&quot;,&#xd;
				&quot;rejectType&quot;: null,&#xd;
				&quot;rejectReason&quot;: null,&#xd;
				&quot;approverId&quot;: null,&#xd;
				&quot;approvalStepId&quot;: null,&#xd;
				&quot;approvalOperates&quot;: null,&#xd;
				&quot;approver&quot;: null,&#xd;
				&quot;referenceId&quot;: null,&#xd;
				&quot;unitPrice&quot;: null,&#xd;
				&quot;number&quot;: null,&#xd;
				&quot;receiptFailType&quot;: null,&#xd;
				&quot;receiptFailReason&quot;: null,&#xd;
				&quot;valid&quot;: false,&#xd;
				&quot;receiptID&quot;: null,&#xd;
				&quot;cardSignType&quot;: null,&#xd;
				&quot;nonVATinclusiveAmount&quot;: null,&#xd;
				&quot;taxAmount&quot;: null,&#xd;
				&quot;receiptType&quot;: null,&#xd;
				&quot;receiptTypeNo&quot;: null,&#xd;
				&quot;invoiceCode&quot;: null,&#xd;
				&quot;invoiceNumber&quot;: null,&#xd;
				&quot;invoiceDate&quot;: null,&#xd;
				&quot;priceTaxAmount&quot;: null,&#xd;
				&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
				&quot;receiptGoodsID&quot;: null,&#xd;
				&quot;taxRate&quot;: null,&#xd;
				&quot;checkCode&quot;: null,&#xd;
				&quot;invoiceLabelDTOS&quot;: [],&#xd;
				&quot;invoiceLabels&quot;: [{&#xd;
					&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
					&quot;name&quot;: &quot;公司&quot;,&#xd;
					&quot;level&quot;: &quot;INFO&quot;,&#xd;
					&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
					&quot;toast&quot;: null,&#xd;
					&quot;category&quot;: null,&#xd;
					&quot;oldLabel&quot;: false&#xd;
				}],&#xd;
				&quot;companyOID&quot;: null,&#xd;
				&quot;invoiceInstead&quot;: true,&#xd;
				&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
				&quot;paymentType&quot;: 1002,&#xd;
				&quot;source&quot;: null,&#xd;
				&quot;ownerOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;checked&quot;: null,&#xd;
				&quot;createInvoice&quot;: true,&#xd;
				&quot;checkWarning&quot;: null,&#xd;
				&quot;digitalInvoice&quot;: null,&#xd;
				&quot;digitalInvoiceId&quot;: null,&#xd;
				&quot;actualCurrencyRate&quot;: 1,&#xd;
				&quot;originalActualCurrencyRate&quot;: 1,&#xd;
				&quot;companyCurrencyRate&quot;: 1,&#xd;
				&quot;actualCurrencyAmount&quot;: 1,&#xd;
				&quot;baseAmount&quot;: 1,&#xd;
				&quot;updateRate&quot;: false,&#xd;
				&quot;flightNo&quot;: null,&#xd;
				&quot;apportionUsed&quot;: false,&#xd;
				&quot;expenseApportion&quot;: null,&#xd;
				&quot;expenseReportOID&quot;: null,&#xd;
				&quot;amountChanged&quot;: null,&#xd;
				&quot;approvalStatus&quot;: null,&#xd;
				&quot;bankTransactionID&quot;: null,&#xd;
				&quot;expenseCreatedType&quot;: null,&#xd;
				&quot;overDue&quot;: null,&#xd;
				&quot;bankTransactionDetail&quot;: null,&#xd;
				&quot;baseCurrency&quot;: null,&#xd;
				&quot;subsidyRepeatedFlag&quot;: false,&#xd;
				&quot;orderAmount&quot;: 1,&#xd;
				&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
				&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
				&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
				&quot;receiptedStatus&quot;: 0,&#xd;
				&quot;vatInvoice&quot;: false,&#xd;
				&quot;stringCol3&quot;: null,&#xd;
				&quot;recognized&quot;: false,&#xd;
				&quot;stringCol1&quot;: &quot;西安&quot;,&#xd;
				&quot;stringCol2&quot;: null&#xd;
			},&#xd;
			&quot;lastModifiedDate&quot;: &quot;${createTime}T15:07:06Z&quot;,&#xd;
			&quot;status&quot;: 1000&#xd;
		}, {&#xd;
			&quot;createdDate&quot;: &quot;${createTime}T15:07:04Z&quot;,&#xd;
			&quot;expenseReportInvoiceOID&quot;: &quot;e69f43ad-9c19-4567-b313-fa89eeef9fa2&quot;,&#xd;
			&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_office_1}&quot;,&#xd;
			&quot;invoiceView&quot;: {&#xd;
				&quot;invoiceOID&quot;: &quot;${invoiceOID_office_1}&quot;,&#xd;
				&quot;expenseTypeId&quot;: &quot;917666881950972828&quot;,&#xd;
				&quot;expenseTypeOID&quot;: &quot;5ed16a96-57eb-44e5-88c8-1aa32da71ff5&quot;,&#xd;
				&quot;expenseTypeName&quot;: &quot;办公&quot;,&#xd;
				&quot;crossCheckStatus&quot;: null,&#xd;
				&quot;expenseTypeKey&quot;: null,&#xd;
				&quot;expenseTypeIconName&quot;: &quot;office&quot;,&#xd;
				&quot;phoneNumber&quot;: null,&#xd;
				&quot;email&quot;: null,&#xd;
				&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/0a68b77c-cdfe-4a7e-9681-304568e14115-office.png&quot;,&#xd;
				&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
				&quot;expenseTypeCategoryDTO&quot;: {&#xd;
					&quot;expenseTypeCategoryOID&quot;: &quot;c39ae68c-3f79-4c58-b655-8fbda51a9ba5&quot;,&#xd;
					&quot;name&quot;: &quot;费用类型&quot;,&#xd;
					&quot;code&quot;: null&#xd;
				},&#xd;
				&quot;costCenterItemOID&quot;: null,&#xd;
				&quot;costCenterItemName&quot;: null,&#xd;
				&quot;amount&quot;: 1,&#xd;
				&quot;originalAmount&quot;: 1,&#xd;
				&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;userOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;mobile&quot;: null,&#xd;
				&quot;employeeId&quot;: null,&#xd;
				&quot;data&quot;: [{&#xd;
					&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
					&quot;name&quot;: &quot;说明&quot;,&#xd;
					&quot;value&quot;: &quot;办公用品&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;name&quot;,&#xd;
					&quot;sequence&quot;: 2,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;e572e636-0db0-4cb2-bea5-12b9daf89c99&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;办公用品&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}, {&#xd;
					&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
					&quot;name&quot;: &quot;城市&quot;,&#xd;
					&quot;value&quot;: &quot;西安&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;city&quot;,&#xd;
					&quot;sequence&quot;: 1,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;459ba233-e057-4950-9169-c75885294155&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;西安&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}],&#xd;
				&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
				&quot;comment&quot;: &quot;办公用品报销&quot;,&#xd;
				&quot;warning&quot;: &quot;&quot;,&#xd;
				&quot;overtime&quot;: &quot;N&quot;,&#xd;
				&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
				&quot;createdDate&quot;: &quot;2018-05-08T16:00:00Z&quot;,&#xd;
				&quot;attachments&quot;: [],&#xd;
				&quot;withReceipt&quot;: true,&#xd;
				&quot;readonly&quot;: false,&#xd;
				&quot;businessCode&quot;: null,&#xd;
				&quot;createLocation&quot;: null,&#xd;
				&quot;createTime&quot;: &quot;${createTime}T15:07:04Z&quot;,&#xd;
				&quot;rejectType&quot;: null,&#xd;
				&quot;rejectReason&quot;: null,&#xd;
				&quot;approverId&quot;: null,&#xd;
				&quot;approvalStepId&quot;: null,&#xd;
				&quot;approvalOperates&quot;: null,&#xd;
				&quot;approver&quot;: null,&#xd;
				&quot;referenceId&quot;: null,&#xd;
				&quot;unitPrice&quot;: null,&#xd;
				&quot;number&quot;: null,&#xd;
				&quot;receiptFailType&quot;: null,&#xd;
				&quot;receiptFailReason&quot;: null,&#xd;
				&quot;valid&quot;: false,&#xd;
				&quot;receiptID&quot;: null,&#xd;
				&quot;cardSignType&quot;: null,&#xd;
				&quot;nonVATinclusiveAmount&quot;: null,&#xd;
				&quot;taxAmount&quot;: null,&#xd;
				&quot;receiptType&quot;: null,&#xd;
				&quot;receiptTypeNo&quot;: null,&#xd;
				&quot;invoiceCode&quot;: null,&#xd;
				&quot;invoiceNumber&quot;: null,&#xd;
				&quot;invoiceDate&quot;: null,&#xd;
				&quot;priceTaxAmount&quot;: null,&#xd;
				&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
				&quot;receiptGoodsID&quot;: null,&#xd;
				&quot;taxRate&quot;: null,&#xd;
				&quot;checkCode&quot;: null,&#xd;
				&quot;invoiceLabelDTOS&quot;: [],&#xd;
				&quot;invoiceLabels&quot;: [{&#xd;
					&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
					&quot;name&quot;: &quot;公司&quot;,&#xd;
					&quot;level&quot;: &quot;INFO&quot;,&#xd;
					&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
					&quot;toast&quot;: null,&#xd;
					&quot;category&quot;: null,&#xd;
					&quot;oldLabel&quot;: false&#xd;
				}],&#xd;
				&quot;companyOID&quot;: null,&#xd;
				&quot;invoiceInstead&quot;: true,&#xd;
				&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
				&quot;paymentType&quot;: 1002,&#xd;
				&quot;source&quot;: null,&#xd;
				&quot;ownerOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;checked&quot;: null,&#xd;
				&quot;createInvoice&quot;: true,&#xd;
				&quot;checkWarning&quot;: null,&#xd;
				&quot;digitalInvoice&quot;: null,&#xd;
				&quot;digitalInvoiceId&quot;: null,&#xd;
				&quot;actualCurrencyRate&quot;: 1,&#xd;
				&quot;originalActualCurrencyRate&quot;: 1,&#xd;
				&quot;companyCurrencyRate&quot;: 1,&#xd;
				&quot;actualCurrencyAmount&quot;: 1,&#xd;
				&quot;baseAmount&quot;: 1,&#xd;
				&quot;updateRate&quot;: false,&#xd;
				&quot;flightNo&quot;: null,&#xd;
				&quot;apportionUsed&quot;: false,&#xd;
				&quot;expenseApportion&quot;: null,&#xd;
				&quot;expenseReportOID&quot;: null,&#xd;
				&quot;amountChanged&quot;: null,&#xd;
				&quot;approvalStatus&quot;: null,&#xd;
				&quot;bankTransactionID&quot;: null,&#xd;
				&quot;expenseCreatedType&quot;: null,&#xd;
				&quot;overDue&quot;: null,&#xd;
				&quot;bankTransactionDetail&quot;: null,&#xd;
				&quot;baseCurrency&quot;: null,&#xd;
				&quot;subsidyRepeatedFlag&quot;: false,&#xd;
				&quot;orderAmount&quot;: 1,&#xd;
				&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
				&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
				&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
				&quot;receiptedStatus&quot;: 0,&#xd;
				&quot;vatInvoice&quot;: false,&#xd;
				&quot;stringCol3&quot;: null,&#xd;
				&quot;recognized&quot;: false,&#xd;
				&quot;stringCol1&quot;: &quot;西安&quot;,&#xd;
				&quot;stringCol2&quot;: null&#xd;
			},&#xd;
			&quot;lastModifiedDate&quot;: &quot;${createTime}T15:07:04Z&quot;,&#xd;
			&quot;status&quot;: 1000&#xd;
		}, {&#xd;
			&quot;createdDate&quot;: &quot;${createTime}T15:07:02Z&quot;,&#xd;
			&quot;expenseReportInvoiceOID&quot;: &quot;2ab49414-25a7-478f-a10f-96120fe4cb42&quot;,&#xd;
			&quot;expenseReportOID&quot;: &quot;${expenseReportOID}&quot;,&#xd;
			&quot;invoiceOID&quot;: &quot;${invoiceOID_food_1}&quot;,&#xd;
			&quot;invoiceView&quot;: {&#xd;
				&quot;invoiceOID&quot;: &quot;${invoiceOID_food_1}&quot;,&#xd;
				&quot;expenseTypeId&quot;: &quot;917666881950972826&quot;,&#xd;
				&quot;expenseTypeOID&quot;: &quot;a47a84f3-993f-4f43-86a1-9ca0c162232a&quot;,&#xd;
				&quot;expenseTypeName&quot;: &quot;餐饮&quot;,&#xd;
				&quot;crossCheckStatus&quot;: null,&#xd;
				&quot;expenseTypeKey&quot;: null,&#xd;
				&quot;expenseTypeIconName&quot;: &quot;foodbeverage&quot;,&#xd;
				&quot;phoneNumber&quot;: null,&#xd;
				&quot;email&quot;: null,&#xd;
				&quot;expenseTypeIconURL&quot;: &quot;https://huilianyi-uat-static.oss-cn-shanghai.aliyuncs.com//2ec774f5-7aba-486c-bd48-cf2ae74c9d9f/expenseIcon/c0ca809d-1cb1-411b-96e4-b460a17ee011-foodbeverage.png&quot;,&#xd;
				&quot;expenseTypeSubsidyType&quot;: 0,&#xd;
				&quot;expenseTypeCategoryDTO&quot;: {&#xd;
					&quot;expenseTypeCategoryOID&quot;: &quot;c39ae68c-3f79-4c58-b655-8fbda51a9ba5&quot;,&#xd;
					&quot;name&quot;: &quot;费用类型&quot;,&#xd;
					&quot;code&quot;: null&#xd;
				},&#xd;
				&quot;costCenterItemOID&quot;: null,&#xd;
				&quot;costCenterItemName&quot;: null,&#xd;
				&quot;amount&quot;: 1,&#xd;
				&quot;originalAmount&quot;: 1,&#xd;
				&quot;invoiceCurrencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;currencyCode&quot;: &quot;CNY&quot;,&#xd;
				&quot;userOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;mobile&quot;: null,&#xd;
				&quot;employeeId&quot;: null,&#xd;
				&quot;data&quot;: [{&#xd;
					&quot;fieldType&quot;: &quot;GPS&quot;,&#xd;
					&quot;name&quot;: &quot;就餐地点&quot;,&#xd;
					&quot;value&quot;: &quot;{\&quot;address\&quot;:\&quot;西安饭庄(锦业路店)\&quot;,\&quot;longitude\&quot;:108.87323,\&quot;latitude\&quot;:34.19258}&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;location&quot;,&#xd;
					&quot;sequence&quot;: 2,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;b72960f7-b5e7-42b2-9a33-eadc90ef0aed&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;{\&quot;address\&quot;:\&quot;西安饭庄(锦业路店)\&quot;,\&quot;longitude\&quot;:108.87323,\&quot;latitude\&quot;:34.19258}&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}, {&#xd;
					&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
					&quot;name&quot;: &quot;城市&quot;,&#xd;
					&quot;value&quot;: &quot;西安&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;city&quot;,&#xd;
					&quot;sequence&quot;: 1,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;d32fb16c-28c0-437f-b4bb-3cb20f359cdd&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;西安&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}, {&#xd;
					&quot;fieldType&quot;: &quot;LONG&quot;,&#xd;
					&quot;name&quot;: &quot;人数&quot;,&#xd;
					&quot;value&quot;: &quot;3&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;head.count&quot;,&#xd;
					&quot;sequence&quot;: 3,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;1209fa3d-f3eb-4c69-844f-7608583f5af5&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;3&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}, {&#xd;
					&quot;fieldType&quot;: &quot;TEXT&quot;,&#xd;
					&quot;name&quot;: &quot;对象&quot;,&#xd;
					&quot;value&quot;: &quot;a，b，c&quot;,&#xd;
					&quot;codeName&quot;: null,&#xd;
					&quot;messageKey&quot;: &quot;person&quot;,&#xd;
					&quot;sequence&quot;: 4,&#xd;
					&quot;customEnumerationDTO&quot;: null,&#xd;
					&quot;customEnumerationOID&quot;: null,&#xd;
					&quot;printHide&quot;: false,&#xd;
					&quot;required&quot;: null,&#xd;
					&quot;showOnList&quot;: true,&#xd;
					&quot;fieldOID&quot;: &quot;eb85af8b-2409-4a12-9500-c62a613c42de&quot;,&#xd;
					&quot;editable&quot;: true,&#xd;
					&quot;defaultValueMode&quot;: null,&#xd;
					&quot;defaultValueKey&quot;: null,&#xd;
					&quot;showValue&quot;: &quot;a，b，c&quot;,&#xd;
					&quot;isDefaultValueConfigurable&quot;: null,&#xd;
					&quot;isCommonField&quot;: null,&#xd;
					&quot;i18n&quot;: null&#xd;
				}],&#xd;
				&quot;invoiceStatus&quot;: &quot;SUBMITTED&quot;,&#xd;
				&quot;comment&quot;: &quot;就餐费报销&quot;,&#xd;
				&quot;warning&quot;: &quot;&quot;,&#xd;
				&quot;overtime&quot;: &quot;N&quot;,&#xd;
				&quot;forceEnabled&quot;: &quot;N&quot;,&#xd;
				&quot;createdDate&quot;: &quot;2018-05-08T16:00:00Z&quot;,&#xd;
				&quot;attachments&quot;: [],&#xd;
				&quot;withReceipt&quot;: true,&#xd;
				&quot;readonly&quot;: false,&#xd;
				&quot;businessCode&quot;: null,&#xd;
				&quot;createLocation&quot;: null,&#xd;
				&quot;createTime&quot;: &quot;${createTime}T15:07:02Z&quot;,&#xd;
				&quot;rejectType&quot;: null,&#xd;
				&quot;rejectReason&quot;: null,&#xd;
				&quot;approverId&quot;: null,&#xd;
				&quot;approvalStepId&quot;: null,&#xd;
				&quot;approvalOperates&quot;: null,&#xd;
				&quot;approver&quot;: null,&#xd;
				&quot;referenceId&quot;: null,&#xd;
				&quot;unitPrice&quot;: null,&#xd;
				&quot;number&quot;: null,&#xd;
				&quot;receiptFailType&quot;: null,&#xd;
				&quot;receiptFailReason&quot;: null,&#xd;
				&quot;valid&quot;: false,&#xd;
				&quot;receiptID&quot;: null,&#xd;
				&quot;cardSignType&quot;: null,&#xd;
				&quot;nonVATinclusiveAmount&quot;: null,&#xd;
				&quot;taxAmount&quot;: null,&#xd;
				&quot;receiptType&quot;: null,&#xd;
				&quot;receiptTypeNo&quot;: null,&#xd;
				&quot;invoiceCode&quot;: null,&#xd;
				&quot;invoiceNumber&quot;: null,&#xd;
				&quot;invoiceDate&quot;: null,&#xd;
				&quot;priceTaxAmount&quot;: null,&#xd;
				&quot;vatInvoiceCurrencyCode&quot;: null,&#xd;
				&quot;receiptGoodsID&quot;: null,&#xd;
				&quot;taxRate&quot;: null,&#xd;
				&quot;checkCode&quot;: null,&#xd;
				&quot;invoiceLabelDTOS&quot;: [],&#xd;
				&quot;invoiceLabels&quot;: [{&#xd;
					&quot;type&quot;: &quot;COMPANY&quot;,&#xd;
					&quot;name&quot;: &quot;公司&quot;,&#xd;
					&quot;level&quot;: &quot;INFO&quot;,&#xd;
					&quot;description&quot;: &quot;公司支付控件=Y，或消费商费用根据订单赋值&quot;,&#xd;
					&quot;toast&quot;: null,&#xd;
					&quot;category&quot;: null,&#xd;
					&quot;oldLabel&quot;: false&#xd;
				}],&#xd;
				&quot;companyOID&quot;: null,&#xd;
				&quot;invoiceInstead&quot;: true,&#xd;
				&quot;invoiceInsteadReason&quot;: &quot;票据丢失&quot;,&#xd;
				&quot;paymentType&quot;: 1002,&#xd;
				&quot;source&quot;: null,&#xd;
				&quot;ownerOID&quot;: &quot;1e05d167-f7c1-419e-b831-037bfbd77a24&quot;,&#xd;
				&quot;checked&quot;: null,&#xd;
				&quot;createInvoice&quot;: true,&#xd;
				&quot;checkWarning&quot;: null,&#xd;
				&quot;digitalInvoice&quot;: null,&#xd;
				&quot;digitalInvoiceId&quot;: null,&#xd;
				&quot;actualCurrencyRate&quot;: 1,&#xd;
				&quot;originalActualCurrencyRate&quot;: 1,&#xd;
				&quot;companyCurrencyRate&quot;: 1,&#xd;
				&quot;actualCurrencyAmount&quot;: 1,&#xd;
				&quot;baseAmount&quot;: 1,&#xd;
				&quot;updateRate&quot;: false,&#xd;
				&quot;flightNo&quot;: null,&#xd;
				&quot;apportionUsed&quot;: false,&#xd;
				&quot;expenseApportion&quot;: null,&#xd;
				&quot;expenseReportOID&quot;: null,&#xd;
				&quot;amountChanged&quot;: null,&#xd;
				&quot;approvalStatus&quot;: null,&#xd;
				&quot;bankTransactionID&quot;: null,&#xd;
				&quot;expenseCreatedType&quot;: null,&#xd;
				&quot;overDue&quot;: null,&#xd;
				&quot;bankTransactionDetail&quot;: null,&#xd;
				&quot;baseCurrency&quot;: null,&#xd;
				&quot;subsidyRepeatedFlag&quot;: false,&#xd;
				&quot;orderAmount&quot;: 1,&#xd;
				&quot;orderCurrency&quot;: &quot;CNY&quot;,&#xd;
				&quot;mileageAllowanceExpenseDTO&quot;: null,&#xd;
				&quot;didiReceiptedInvoiceOid&quot;: null,&#xd;
				&quot;receiptedStatus&quot;: 0,&#xd;
				&quot;vatInvoice&quot;: false,&#xd;
				&quot;stringCol3&quot;: &quot;a，b，c&quot;,&#xd;
				&quot;recognized&quot;: false,&#xd;
				&quot;stringCol1&quot;: &quot;西安&quot;,&#xd;
				&quot;stringCol2&quot;: null&#xd;
			},&#xd;
			&quot;lastModifiedDate&quot;: &quot;${createTime}T15:07:02Z&quot;,&#xd;
			&quot;status&quot;: 1000&#xd;
		}],&#xd;
		&quot;totalAmount&quot;: 16,&#xd;
		&quot;proportion&quot;: 100&#xd;
	}],&#xd;
	&quot;lastModifiedDate&quot;: &quot;${createTime}T15:07:18Z&quot;,&#xd;
	&quot;needApproval&quot;: false,&#xd;
	&quot;overtime&quot;: &quot;N&quot;,&#xd;
	&quot;overtimeCount&quot;: 0,&#xd;
	&quot;personalPaymentAmount&quot;: 0,&#xd;
	&quot;personalPaymentBaseAmount&quot;: 0,&#xd;
	&quot;printFree&quot;: false,&#xd;
	&quot;printable&quot;: true,&#xd;
	&quot;realPaymentAmount&quot;: 0,&#xd;
	&quot;realPaymentBaseAmount&quot;: 0,&#xd;
	&quot;rejectType&quot;: 1000,&#xd;
	&quot;reviewedFlag&quot;: false,&#xd;
	&quot;setOfBooksId&quot;: 992026019168333800,&#xd;
	&quot;splitStatus&quot;: 0,&#xd;
	&quot;status&quot;: 1001,&#xd;
	&quot;statusView&quot;: 1001,&#xd;
	&quot;subCompanyOID&quot;: &quot;11aee35f-c8c7-4e86-bf70-de194e3c8e1f&quot;,&#xd;
	&quot;tenantId&quot;: 992026018782457900,&#xd;
	&quot;title&quot;: &quot;费用测试&quot;,&#xd;
	&quot;totalAmount&quot;: 16,&#xd;
	&quot;travelStandardValid&quot;: 1001,&#xd;
	&quot;travelStandardWarning&quot;: false,&#xd;
	&quot;type&quot;: 1001,&#xd;
	&quot;withReceiptAmount&quot;: 16,&#xd;
	&quot;withoutReceiptAmount&quot;: 0,&#xd;
	&quot;writeoffFlag&quot;: false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/expense/reports/custom/form/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-739396634">{&quot;passFlag&quot;:false,&quot;checkResultList&quot;:[{&quot;externalPropertyName&quot;:&quot;3001&quot;,&quot;type&quot;:0,&quot;title&quot;:&quot;费用重复&quot;,&quot;message&quot;:&quot;1条可能重复费用&quot;,&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="报销单提交(16种费用)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${AllDetal}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v3/expense/report/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="0"></stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_报销单费用17_退出登录 " enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="状态返回" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
